{
	"title": "Pandas DataFrame | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/integrations/document_loaders/pandas_dataframe",
	"html": "Skip to main content\nü¶úÔ∏èüîó LangChain\nDocs\nUse cases\nIntegrations\nGuides\nAPI\nMore\nü¶úÔ∏èüîó\nChat\nSearch\n‚åò\nK\nProviders\nAnthropic\nAWS\nGoogle\nHugging Face\nMicrosoft\nOpenAI\nMore\nComponents\nLLMs\nChat models\nDocument loaders\nacreom\nAirbyte CDK\nAirbyte Gong\nAirbyte Hubspot\nAirbyte JSON\nAirbyte Salesforce\nAirbyte Shopify\nAirbyte Stripe\nAirbyte Typeform\nAirbyte Zendesk Support\nAirtable\nAlibaba Cloud MaxCompute\nAmazon Textract\nApify Dataset\nArcGIS\nArxiv\nAssemblyAI Audio Transcripts\nAsync Chromium\nAsyncHtml\nAWS S3 Directory\nAWS S3 File\nAZLyrics\nAzure AI Data\nAzure Blob Storage Container\nAzure Blob Storage File\nAzure Document Intelligence\nBibTeX\nBiliBili\nBlackboard\nBlockchain\nBrave Search\nBrowserless\nChatGPT Data\nCollege Confidential\nConcurrent Loader\nConfluence\nCoNLL-U\nCopy Paste\nCouchbase\nCSV\nCube Semantic Layer\nDatadog Logs\nDiffbot\nDiscord\nDocugami\nDocusaurus\nDropbox\nDuckDB\nEmail\nEPub\nEtherscan\nEverNote\nMicrosoft Excel\nFacebook Chat\nFauna\nFigma\nGeopandas\nGit\nGitBook\nGitHub\nGoogle BigQuery\nGoogle Cloud Storage Directory\nGoogle Cloud Storage File\nGoogle Drive\nGoogle Speech-to-Text Audio Transcripts\nGrobid\nGutenberg\nHacker News\nHuawei OBS Directory\nHuawei OBS File\nHuggingFace dataset\niFixit\nImages\nImage captions\nIMSDb\nIugu\nJoplin\nJupyter Notebook\nlakeFS\nLarkSuite (FeiShu)\nMastodon\nMediaWiki Dump\nMerge Documents Loader\nmhtml\nMicrosoft OneDrive\nMicrosoft PowerPoint\nMicrosoft SharePoint\nMicrosoft Word\nModern Treasury\nMongoDB\nNews URL\nNotion DB 1/2\nNotion DB 2/2\nNuclia\nObsidian\nOpen Document Format (ODT)\nMicrosoft OneNote\nOpen City Data\nOrg-mode\nPandas DataFrame\nPolars DataFrame\nPsychic\nPubMed\nPySpark\nQuip\nReadTheDocs Documentation\nRecursive URL\nReddit\nRoam\nRockset\nrspace\nRSS Feeds\nRST\nSitemap\nSlack\nSnowflake\nSource Code\nSpreedly\nStripe\nSubtitle\nTelegram\nTencent COS Directory\nTencent COS File\nTensorFlow Datasets\n2Markdown\nTOML\nTrello\nTSV\nTwitter\nUnstructured File\nURL\nWeather\nWebBaseLoader\nWhatsApp Chat\nWikipedia\nXML\nXorbits Pandas DataFrame\nYouTube audio\nYouTube transcripts\nDocument transformers\nText embedding models\nVector stores\nRetrievers\nTools\nAgents and toolkits\nMemory\nCallbacks\nChat loaders\nAdapters\nStores\nComponentsDocument loadersPandas DataFrame\nPandas DataFrame\n\nThis notebook goes over how to load data from a pandas DataFrame.\n\n#!pip install pandas\n\nimport pandas as pd\n\ndf = pd.read_csv(\"example_data/mlb_teams_2012.csv\")\n\ndf.head()\n\n\tTeam\t\"Payroll (millions)\"\t\"Wins\"\n0\tNationals\t81.34\t98\n1\tReds\t82.20\t97\n2\tYankees\t197.96\t95\n3\tGiants\t117.62\t94\n4\tBraves\t83.31\t94\n\tTeam\t\"Payroll (millions)\"\t\"Wins\"\n0\tNationals\t81.34\t98\n1\tReds\t82.20\t97\n2\tYankees\t197.96\t95\n3\tGiants\t117.62\t94\n4\tBraves\t83.31\t94\nfrom langchain.document_loaders import DataFrameLoader\n\nfrom langchain.document_loaders import DataFrameLoader\n\nloader = DataFrameLoader(df, page_content_column=\"Team\")\n\nloader.load()\n\n[Document(page_content='Nationals', metadata={' \"Payroll (millions)\"': 81.34, ' \"Wins\"': 98}),\n Document(page_content='Reds', metadata={' \"Payroll (millions)\"': 82.2, ' \"Wins\"': 97}),\n Document(page_content='Yankees', metadata={' \"Payroll (millions)\"': 197.96, ' \"Wins\"': 95}),\n Document(page_content='Giants', metadata={' \"Payroll (millions)\"': 117.62, ' \"Wins\"': 94}),\n Document(page_content='Braves', metadata={' \"Payroll (millions)\"': 83.31, ' \"Wins\"': 94}),\n Document(page_content='Athletics', metadata={' \"Payroll (millions)\"': 55.37, ' \"Wins\"': 94}),\n Document(page_content='Rangers', metadata={' \"Payroll (millions)\"': 120.51, ' \"Wins\"': 93}),\n Document(page_content='Orioles', metadata={' \"Payroll (millions)\"': 81.43, ' \"Wins\"': 93}),\n Document(page_content='Rays', metadata={' \"Payroll (millions)\"': 64.17, ' \"Wins\"': 90}),\n Document(page_content='Angels', metadata={' \"Payroll (millions)\"': 154.49, ' \"Wins\"': 89}),\n Document(page_content='Tigers', metadata={' \"Payroll (millions)\"': 132.3, ' \"Wins\"': 88}),\n Document(page_content='Cardinals', metadata={' \"Payroll (millions)\"': 110.3, ' \"Wins\"': 88}),\n Document(page_content='Dodgers', metadata={' \"Payroll (millions)\"': 95.14, ' \"Wins\"': 86}),\n Document(page_content='White Sox', metadata={' \"Payroll (millions)\"': 96.92, ' \"Wins\"': 85}),\n Document(page_content='Brewers', metadata={' \"Payroll (millions)\"': 97.65, ' \"Wins\"': 83}),\n Document(page_content='Phillies', metadata={' \"Payroll (millions)\"': 174.54, ' \"Wins\"': 81}),\n Document(page_content='Diamondbacks', metadata={' \"Payroll (millions)\"': 74.28, ' \"Wins\"': 81}),\n Document(page_content='Pirates', metadata={' \"Payroll (millions)\"': 63.43, ' \"Wins\"': 79}),\n Document(page_content='Padres', metadata={' \"Payroll (millions)\"': 55.24, ' \"Wins\"': 76}),\n Document(page_content='Mariners', metadata={' \"Payroll (millions)\"': 81.97, ' \"Wins\"': 75}),\n Document(page_content='Mets', metadata={' \"Payroll (millions)\"': 93.35, ' \"Wins\"': 74}),\n Document(page_content='Blue Jays', metadata={' \"Payroll (millions)\"': 75.48, ' \"Wins\"': 73}),\n Document(page_content='Royals', metadata={' \"Payroll (millions)\"': 60.91, ' \"Wins\"': 72}),\n Document(page_content='Marlins', metadata={' \"Payroll (millions)\"': 118.07, ' \"Wins\"': 69}),\n Document(page_content='Red Sox', metadata={' \"Payroll (millions)\"': 173.18, ' \"Wins\"': 69}),\n Document(page_content='Indians', metadata={' \"Payroll (millions)\"': 78.43, ' \"Wins\"': 68}),\n Document(page_content='Twins', metadata={' \"Payroll (millions)\"': 94.08, ' \"Wins\"': 66}),\n Document(page_content='Rockies', metadata={' \"Payroll (millions)\"': 78.06, ' \"Wins\"': 64}),\n Document(page_content='Cubs', metadata={' \"Payroll (millions)\"': 88.19, ' \"Wins\"': 61}),\n Document(page_content='Astros', metadata={' \"Payroll (millions)\"': 60.65, ' \"Wins\"': 55})]\n\n# Use lazy load for larger table, which won't read the full table into memory\nfor i in loader.lazy_load():\n    print(i)\n\npage_content='Nationals' metadata={' \"Payroll (millions)\"': 81.34, ' \"Wins\"': 98}\npage_content='Reds' metadata={' \"Payroll (millions)\"': 82.2, ' \"Wins\"': 97}\npage_content='Yankees' metadata={' \"Payroll (millions)\"': 197.96, ' \"Wins\"': 95}\npage_content='Giants' metadata={' \"Payroll (millions)\"': 117.62, ' \"Wins\"': 94}\npage_content='Braves' metadata={' \"Payroll (millions)\"': 83.31, ' \"Wins\"': 94}\npage_content='Athletics' metadata={' \"Payroll (millions)\"': 55.37, ' \"Wins\"': 94}\npage_content='Rangers' metadata={' \"Payroll (millions)\"': 120.51, ' \"Wins\"': 93}\npage_content='Orioles' metadata={' \"Payroll (millions)\"': 81.43, ' \"Wins\"': 93}\npage_content='Rays' metadata={' \"Payroll (millions)\"': 64.17, ' \"Wins\"': 90}\npage_content='Angels' metadata={' \"Payroll (millions)\"': 154.49, ' \"Wins\"': 89}\npage_content='Tigers' metadata={' \"Payroll (millions)\"': 132.3, ' \"Wins\"': 88}\npage_content='Cardinals' metadata={' \"Payroll (millions)\"': 110.3, ' \"Wins\"': 88}\npage_content='Dodgers' metadata={' \"Payroll (millions)\"': 95.14, ' \"Wins\"': 86}\npage_content='White Sox' metadata={' \"Payroll (millions)\"': 96.92, ' \"Wins\"': 85}\npage_content='Brewers' metadata={' \"Payroll (millions)\"': 97.65, ' \"Wins\"': 83}\npage_content='Phillies' metadata={' \"Payroll (millions)\"': 174.54, ' \"Wins\"': 81}\npage_content='Diamondbacks' metadata={' \"Payroll (millions)\"': 74.28, ' \"Wins\"': 81}\npage_content='Pirates' metadata={' \"Payroll (millions)\"': 63.43, ' \"Wins\"': 79}\npage_content='Padres' metadata={' \"Payroll (millions)\"': 55.24, ' \"Wins\"': 76}\npage_content='Mariners' metadata={' \"Payroll (millions)\"': 81.97, ' \"Wins\"': 75}\npage_content='Mets' metadata={' \"Payroll (millions)\"': 93.35, ' \"Wins\"': 74}\npage_content='Blue Jays' metadata={' \"Payroll (millions)\"': 75.48, ' \"Wins\"': 73}\npage_content='Royals' metadata={' \"Payroll (millions)\"': 60.91, ' \"Wins\"': 72}\npage_content='Marlins' metadata={' \"Payroll (millions)\"': 118.07, ' \"Wins\"': 69}\npage_content='Red Sox' metadata={' \"Payroll (millions)\"': 173.18, ' \"Wins\"': 69}\npage_content='Indians' metadata={' \"Payroll (millions)\"': 78.43, ' \"Wins\"': 68}\npage_content='Twins' metadata={' \"Payroll (millions)\"': 94.08, ' \"Wins\"': 66}\npage_content='Rockies' metadata={' \"Payroll (millions)\"': 78.06, ' \"Wins\"': 64}\npage_content='Cubs' metadata={' \"Payroll (millions)\"': 88.19, ' \"Wins\"': 61}\npage_content='Astros' metadata={' \"Payroll (millions)\"': 60.65, ' \"Wins\"': 55}\n\nPrevious\nOrg-mode\nNext\nPolars DataFrame\nCommunity\nDiscord\nTwitter\nGitHub\nPython\nJS/TS\nMore\nHomepage\nBlog\nCopyright ¬© 2023 LangChain, Inc."
}