{
	"title": "Document transformers | 🦜️🔗 Langchain",
	"url": "https://python.langchain.com/docs/integrations/document_transformers",
	"html": "Skip to main content\n🦜️🔗 LangChain\nDocs\nUse cases\nIntegrations\nGuides\nAPI\nMore\n🦜️🔗\nChat\nSearch\n⌘\nK\nProviders\nAnthropic\nAWS\nGoogle\nHugging Face\nMicrosoft\nOpenAI\nMore\nComponents\nLLMs\nChat models\nDocument loaders\nDocument transformers\nBeautiful Soup\nGoogle Cloud Document AI\nDoctran: extract properties\nDoctran: interrogate documents\nDoctran: language translation\nGoogle Translate\nHTML to text\nNuclia\nOpenAI metadata tagger\nText embedding models\nVector stores\nRetrievers\nTools\nAgents and toolkits\nMemory\nCallbacks\nChat loaders\nAdapters\nStores\nComponentsDocument transformers\nDocument transformers\n📄️ Beautiful Soup\n\nBeautiful Soup is a\n\n📄️ Google Cloud Document AI\n\nDocument AI is a document understanding platform from Google Cloud to\n\n📄️ Doctran: extract properties\n\nWe can extract useful features of documents using the\n\n📄️ Doctran: interrogate documents\n\nDocuments used in a vector store knowledge base are typically stored in\n\n📄️ Doctran: language translation\n\nComparing documents through embeddings has the benefit of working across\n\n📄️ Google Translate\n\nGoogle Translate is a multilingual\n\n📄️ HTML to text\n\nhtml2text is a Python package\n\n📄️ Nuclia\n\nNuclia automatically indexes your unstructured\n\n📄️ OpenAI metadata tagger\n\nIt can often be useful to tag ingested documents with structured\n\nPrevious\nYouTube transcripts\nNext\nBeautiful Soup\nCommunity\nDiscord\nTwitter\nGitHub\nPython\nJS/TS\nMore\nHomepage\nBlog\nCopyright © 2023 LangChain, Inc."
}