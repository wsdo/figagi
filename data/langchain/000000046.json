{
	"title": "Google | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/integrations/platforms/google",
	"html": "Skip to main content\nü¶úÔ∏èüîó LangChain\nDocs\nUse cases\nIntegrations\nGuides\nAPI\nMore\nü¶úÔ∏èüîó\nChat\nSearch\n‚åò\nK\nProviders\nAnthropic\nAWS\nGoogle\nHugging Face\nMicrosoft\nOpenAI\nMore\nComponents\nLLMs\nChat models\nDocument loaders\nDocument transformers\nText embedding models\nVector stores\nRetrievers\nTools\nAgents and toolkits\nMemory\nCallbacks\nChat loaders\nAdapters\nStores\nProvidersGoogle\nGoogle\n\nAll functionality related to Google Cloud Platform and other Google products.\n\nLLMs‚Äã\nVertex AI‚Äã\n\nAccess PaLM LLMs like text-bison and code-bison via Google Vertex AI.\n\nWe need to install google-cloud-aiplatform python package.\n\npip install google-cloud-aiplatform\n\n\nSee a usage example.\n\nfrom langchain.llms import VertexAI\n\nModel Garden‚Äã\n\nAccess PaLM and hundreds of OSS models via Vertex AI Model Garden.\n\nWe need to install google-cloud-aiplatform python package.\n\npip install google-cloud-aiplatform\n\n\nSee a usage example.\n\nfrom langchain.llms import VertexAIModelGarden\n\nChat models‚Äã\nVertex AI‚Äã\n\nAccess PaLM chat models like chat-bison and codechat-bison via Google Cloud.\n\nWe need to install google-cloud-aiplatform python package.\n\npip install google-cloud-aiplatform\n\n\nSee a usage example.\n\nfrom langchain.chat_models import ChatVertexAI\n\nDocument Loaders‚Äã\nGoogle BigQuery‚Äã\n\nGoogle BigQuery is a serverless and cost-effective enterprise data warehouse that works across clouds and scales with your data. BigQuery is a part of the Google Cloud Platform.\n\nWe need to install google-cloud-bigquery python package.\n\npip install google-cloud-bigquery\n\n\nSee a usage example.\n\nfrom langchain.document_loaders import BigQueryLoader\n\nGoogle Cloud Storage‚Äã\n\nGoogle Cloud Storage is a managed service for storing unstructured data.\n\nWe need to install google-cloud-storage python package.\n\npip install google-cloud-storage\n\n\nThere are two loaders for the Google Cloud Storage: the Directory and the File loaders.\n\nSee a usage example.\n\nfrom langchain.document_loaders import GCSDirectoryLoader\n\n\nSee a usage example.\n\nfrom langchain.document_loaders import GCSFileLoader\n\nGoogle Drive‚Äã\n\nGoogle Drive is a file storage and synchronization service developed by Google.\n\nCurrently, only Google Docs are supported.\n\nWe need to install several python packages.\n\npip install google-api-python-client google-auth-httplib2 google-auth-oauthlib\n\n\nSee a usage example and authorization instructions.\n\nfrom langchain.document_loaders import GoogleDriveLoader\n\nSpeech-to-Text‚Äã\n\nGoogle Cloud Speech-to-Text is an audio transcription API powered by Google's speech recognition models.\n\nThis document loader transcribes audio files and outputs the text results as Documents.\n\nFirst, we need to install the python package.\n\npip install google-cloud-speech\n\n\nSee a usage example and authorization instructions.\n\nfrom langchain.document_loaders import GoogleSpeechToTextLoader\n\nVector Stores‚Äã\nGoogle Vertex AI Vector Search‚Äã\n\nGoogle Vertex AI Vector Search, formerly known as Vertex AI Matching Engine, provides the industry's leading high-scale low latency vector database. These vector databases are commonly referred to as vector similarity-matching or an approximate nearest neighbor (ANN) service.\n\nWe need to install several python packages.\n\npip install tensorflow google-cloud-aiplatform tensorflow-hub tensorflow-text\n\n\nSee a usage example.\n\nfrom langchain.vectorstores import MatchingEngine\n\nGoogle ScaNN‚Äã\n\nGoogle ScaNN (Scalable Nearest Neighbors) is a python package.\n\nScaNN is a method for efficient vector similarity search at scale.\n\nScaNN includes search space pruning and quantization for Maximum Inner Product Search and also supports other distance functions such as Euclidean distance. The implementation is optimized for x86 processors with AVX2 support. See its Google Research github for more details.\n\nWe need to install scann python package.\n\npip install scann\n\n\nSee a usage example.\n\nfrom langchain.vectorstores import ScaNN\n\nRetrievers‚Äã\nGoogle Drive‚Äã\n\nWe need to install several python packages.\n\npip install google-api-python-client google-auth-httplib2 google-auth-oauthlib\n\n\nSee a usage example and authorization instructions.\n\nfrom langchain_googledrive.retrievers import GoogleDriveRetriever\n\nVertex AI Search‚Äã\n\nGoogle Cloud Vertex AI Search allows developers to quickly build generative AI powered search engines for customers and employees.\n\nWe need to install the google-cloud-discoveryengine python package.\n\npip install google-cloud-discoveryengine\n\n\nSee a usage example.\n\nfrom langchain.retrievers import GoogleVertexAISearchRetriever\n\nDocument AI Warehouse‚Äã\n\nGoogle Cloud Document AI Warehouse allows enterprises to search, store, govern, and manage documents and their AI-extracted data and metadata in a single platform.\n\nfrom langchain.retrievers import GoogleDocumentAIWarehouseRetriever\ndocai_wh_retriever = GoogleDocumentAIWarehouseRetriever(\n    project_number=...\n)\nquery = ...\ndocuments = docai_wh_retriever.get_relevant_documents(\n    query, user_ldap=...\n)\n\nTools‚Äã\nGoogle Drive‚Äã\n\nWe need to install several python packages.\n\npip install google-api-python-client google-auth-httplib2 google-auth-oauthlib\n\n\nSee a usage example and authorization instructions.\n\nfrom langchain.utilities.google_drive import GoogleDriveAPIWrapper\nfrom langchain.tools.google_drive.tool import GoogleDriveSearchTool\n\nGoogle Places‚Äã\n\nWe need to install a python package.\n\npip install googlemaps\n\n\nSee a usage example and authorization instructions.\n\nfrom langchain.tools import GooglePlacesTool\n\nGoogle Search‚Äã\n\nWe need to install a python package.\n\npip install google-api-python-client\n\nSet up a Custom Search Engine, following these instructions\nGet an API Key and Custom Search Engine ID from the previous step, and set them as environment variables GOOGLE_API_KEY and GOOGLE_CSE_ID respectively\nfrom langchain.utilities import GoogleSearchAPIWrapper\n\n\nFor a more detailed walkthrough of this wrapper, see this notebook.\n\nWe can easily load this wrapper as a Tool (to use with an Agent). We can do this with:\n\nfrom langchain.agents import load_tools\ntools = load_tools([\"google-search\"])\n\nDocument Transformers‚Äã\nGoogle Document AI‚Äã\n\nDocument AI is a Google Cloud Platform service that transforms unstructured data from documents into structured data, making it easier to understand, analyze, and consume.\n\nWe need to set up a GCS bucket and create your own OCR processor\nThe GCS_OUTPUT_PATH should be a path to a folder on GCS (starting with gs://) and a processor name should look like projects/PROJECT_NUMBER/locations/LOCATION/processors/PROCESSOR_ID. We can get it either programmatically or copy from the Prediction endpoint section of the Processor details tab in the Google Cloud Console.\n\npip install google-cloud-documentai\npip install google-cloud-documentai-toolbox\n\n\nSee a usage example.\n\nfrom langchain.document_loaders.blob_loaders import Blob\nfrom langchain.document_loaders.parsers import DocAIParser\n\nGoogle Translate‚Äã\n\nGoogle Translate is a multilingual neural machine translation service developed by Google to translate text, documents and websites from one language into another.\n\nThe GoogleTranslateTransformer allows you to translate text and HTML with the Google Cloud Translation API.\n\nTo use it, you should have the google-cloud-translate python package installed, and a Google Cloud project with the Translation API enabled. This transformer uses the Advanced edition (v3).\n\nFirst, we need to install the python package.\n\npip install google-cloud-translate\n\n\nSee a usage example and authorization instructions.\n\nfrom langchain.document_transformers import GoogleTranslateTransformer\n\nToolkits‚Äã\nGMail‚Äã\n\nGmail is a free email service provided by Google. This toolkit works with emails through the Gmail API.\n\nWe need to install several python packages.\n\npip install google-api-python-client google-auth-oauthlib google-auth-httplib2\n\n\nSee a usage example and authorization instructions.\n\nfrom langchain.agents.agent_toolkits import GmailToolkit\n\nGoogle Drive‚Äã\n\nThis toolkit uses the Google Drive API.\n\nWe need to install several python packages.\n\npip install google-api-python-client google-auth-httplib2 google-auth-oauthlib\n\n\nSee a usage example and authorization instructions.\n\nfrom langchain_googledrive.utilities.google_drive import GoogleDriveAPIWrapper\nfrom langchain_googledrive.tools.google_drive.tool import GoogleDriveSearchTool\n\nChat Loaders‚Äã\nGMail‚Äã\n\nGmail is a free email service provided by Google. This loader works with emails through the Gmail API.\n\nWe need to install several python packages.\n\npip install google-api-python-client google-auth-oauthlib google-auth-httplib2\n\n\nSee a usage example and authorization instructions.\n\nfrom langchain.chat_loaders.gmail import GMailLoader\n\n3rd Party Integrations‚Äã\nSearchApi‚Äã\n\nSearchApi provides a 3rd-party API to access Google search results, YouTube search & transcripts, and other Google-related engines.\n\nSee usage examples and authorization instructions.\n\nfrom langchain.utilities import SearchApiAPIWrapper\n\nSerpAPI‚Äã\n\nSerpApi provides a 3rd-party API to access Google search results.\n\nSee a usage example and authorization instructions.\n\nfrom langchain.utilities import SerpAPIWrapper\n\nYouTube‚Äã\n\nYouTube Search package searches YouTube videos avoiding using their heavily rate-limited API.\n\nIt uses the form on the YouTube homepage and scrapes the resulting page.\n\nWe need to install a python package.\n\npip install youtube_search\n\n\nSee a usage example.\n\nfrom langchain.tools import YouTubeSearchTool\n\nYouTube audio‚Äã\n\nYouTube is an online video sharing and social media platform created by Google.\n\nUse YoutubeAudioLoader to fetch / download the audio files.\n\nThen, use OpenAIWhisperParser to transcribe them to text.\n\nWe need to install several python packages.\n\npip install yt_dlp pydub librosa\n\n\nSee a usage example and authorization instructions.\n\nfrom langchain.document_loaders.blob_loaders.youtube_audio import YoutubeAudioLoader\nfrom langchain.document_loaders.parsers import OpenAIWhisperParser, OpenAIWhisperParserLocal\n\nYouTube transcripts‚Äã\n\nYouTube is an online video sharing and social media platform created by Google.\n\nWe need to install youtube-transcript-api python package.\n\npip install youtube-transcript-api\n\n\nSee a usage example.\n\nfrom langchain.document_loaders import YoutubeLoader\n\nPrevious\nAWS\nNext\nHugging Face\nLLMs\nVertex AI\nModel Garden\nChat models\nVertex AI\nDocument Loaders\nGoogle BigQuery\nGoogle Cloud Storage\nGoogle Drive\nSpeech-to-Text\nVector Stores\nGoogle Vertex AI Vector Search\nGoogle ScaNN\nRetrievers\nGoogle Drive\nVertex AI Search\nDocument AI Warehouse\nTools\nGoogle Drive\nGoogle Places\nGoogle Search\nDocument Transformers\nGoogle Document AI\nGoogle Translate\nToolkits\nGMail\nGoogle Drive\nChat Loaders\nGMail\n3rd Party Integrations\nSearchApi\nSerpAPI\nYouTube\nYouTube audio\nYouTube transcripts\nCommunity\nDiscord\nTwitter\nGitHub\nPython\nJS/TS\nMore\nHomepage\nBlog\nCopyright ¬© 2023 LangChain, Inc."
}