{
	"title": "AWS | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/integrations/platforms/aws",
	"html": "Skip to main content\nü¶úÔ∏èüîó LangChain\nDocs\nUse cases\nIntegrations\nGuides\nAPI\nMore\nü¶úÔ∏èüîó\nChat\nSearch\n‚åò\nK\nProviders\nAnthropic\nAWS\nGoogle\nHugging Face\nMicrosoft\nOpenAI\nMore\nComponents\nLLMs\nChat models\nDocument loaders\nDocument transformers\nText embedding models\nVector stores\nRetrievers\nTools\nAgents and toolkits\nMemory\nCallbacks\nChat loaders\nAdapters\nStores\nProvidersAWS\nAWS\n\nThe LangChain integrations related to Amazon AWS platform.\n\nLLMs‚Äã\nBedrock‚Äã\n\nAmazon Bedrock is a fully managed service that offers a choice of high-performing foundation models (FMs) from leading AI companies like AI21 Labs, Anthropic, Cohere, Meta, Stability AI, and Amazon via a single API, along with a broad set of capabilities you need to build generative AI applications with security, privacy, and responsible AI. Using Amazon Bedrock, you can easily experiment with and evaluate top FMs for your use case, privately customize them with your data using techniques such as fine-tuning and Retrieval Augmented Generation (RAG), and build agents that execute tasks using your enterprise systems and data sources. Since Amazon Bedrock is serverless, you don't have to manage any infrastructure, and you can securely integrate and deploy generative AI capabilities into your applications using the AWS services you are already familiar with.\n\nSee a usage example.\n\nfrom langchain.llms.bedrock import Bedrock\n\nAmazon API Gateway‚Äã\n\nAmazon API Gateway is a fully managed service that makes it easy for developers to create, publish, maintain, monitor, and secure APIs at any scale. APIs act as the \"front door\" for applications to access data, business logic, or functionality from your backend services. Using API Gateway, you can create RESTful APIs and WebSocket APIs that enable real-time two-way communication applications. API Gateway supports containerized and serverless workloads, as well as web applications.\n\nAPI Gateway handles all the tasks involved in accepting and processing up to hundreds of thousands of concurrent API calls, including traffic management, CORS support, authorization and access control, throttling, monitoring, and API version management. API Gateway has no minimum fees or startup costs. You pay for the API calls you receive and the amount of data transferred out and, with the API Gateway tiered pricing model, you can reduce your cost as your API usage scales.\n\nSee a usage example.\n\nfrom langchain.llms import AmazonAPIGateway\n\nSageMaker Endpoint‚Äã\n\nAmazon SageMaker is a system that can build, train, and deploy machine learning (ML) models with fully managed infrastructure, tools, and workflows.\n\nWe use SageMaker to host our model and expose it as the SageMaker Endpoint.\n\nSee a usage example.\n\nfrom langchain.llms import SagemakerEndpoint\nfrom langchain.llms.sagemaker_endpoint import LLMContentHandler\n\nChat models‚Äã\nBedrock Chat‚Äã\n\nSee a usage example.\n\nfrom langchain.chat_models import BedrockChat\n\nText Embedding Models‚Äã\nBedrock‚Äã\n\nSee a usage example.\n\nfrom langchain.embeddings import BedrockEmbeddings\n\nSageMaker Endpoint‚Äã\n\nSee a usage example.\n\nfrom langchain.embeddings import SagemakerEndpointEmbeddings\nfrom langchain.llms.sagemaker_endpoint import ContentHandlerBase\n\nChains‚Äã\nAmazon Comprehend Moderation Chain‚Äã\n\nAmazon Comprehend is a natural-language processing (NLP) service that uses machine learning to uncover valuable insights and connections in text.\n\nWe need to install the boto3 and nltk libraries.\n\npip install boto3 nltk\n\n\nSee a usage example.\n\nfrom langchain_experimental.comprehend_moderation import AmazonComprehendModerationChain\n\nDocument loaders‚Äã\nAWS S3 Directory and File‚Äã\n\nAmazon Simple Storage Service (Amazon S3) is an object storage service. AWS S3 Directory AWS S3 Buckets\n\nSee a usage example for S3DirectoryLoader.\n\nSee a usage example for S3FileLoader.\n\nfrom langchain.document_loaders import S3DirectoryLoader, S3FileLoader\n\nAmazon Textract‚Äã\n\nAmazon Textract is a machine learning (ML) service that automatically extracts text, handwriting, and data from scanned documents.\n\nSee a usage example.\n\nfrom langchain.document_loaders import AmazonTextractPDFLoader\n\nMemory‚Äã\nAWS DynamoDB‚Äã\n\nAWS DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability.\n\nWe have to configure the AWS CLI.\n\nWe need to install the boto3 library.\n\npip install boto3\n\n\nSee a usage example.\n\nfrom langchain.memory import DynamoDBChatMessageHistory\n\nRetrievers‚Äã\nAmazon Kendra‚Äã\n\nAmazon Kendra is an intelligent search service provided by Amazon Web Services (AWS). It utilizes advanced natural language processing (NLP) and machine learning algorithms to enable powerful search capabilities across various data sources within an organization. Kendra is designed to help users find the information they need quickly and accurately, improving productivity and decision-making.\n\nWith Kendra, we can search across a wide range of content types, including documents, FAQs, knowledge bases, manuals, and websites. It supports multiple languages and can understand complex queries, synonyms, and contextual meanings to provide highly relevant search results.\n\nWe need to install the boto3 library.\n\npip install boto3\n\n\nSee a usage example.\n\nfrom langchain.retrievers import AmazonKendraRetriever\n\nAmazon Bedrock (Knowledge Bases)‚Äã\n\nKnowledge bases for Amazon Bedrock is an Amazon Web Services (AWS) offering which lets you quickly build RAG applications by using your private data to customize foundation model response.\n\nWe need to install the boto3 library.\n\npip install boto3\n\n\nSee a usage example.\n\nfrom langchain.retrievers import AmazonKnowledgeBasesRetriever\n\nVector stores‚Äã\nAmazon OpenSearch Service‚Äã\n\nAmazon OpenSearch Service performs interactive log analytics, real-time application monitoring, website search, and more. OpenSearch is an open source, distributed search and analytics suite derived from Elasticsearch. Amazon OpenSearch Service offers the latest versions of OpenSearch, support for many versions of Elasticsearch, as well as visualization capabilities powered by OpenSearch Dashboards and Kibana.\n\nWe need to install several python libraries.\n\npip install boto3 requests requests-aws4auth\n\n\nSee a usage example.\n\nfrom langchain.vectorstores import OpenSearchVectorSearch\n\nTools‚Äã\nAWS Lambda‚Äã\n\nAmazon AWS Lambda is a serverless computing service provided by Amazon Web Services (AWS). It helps developers to build and run applications and services without provisioning or managing servers. This serverless architecture enables you to focus on writing and deploying code, while AWS automatically takes care of scaling, patching, and managing the infrastructure required to run your applications.\n\nWe need to install boto3 python library.\n\npip install boto3\n\n\nSee a usage example.\n\nCallbacks‚Äã\nSageMaker Tracking‚Äã\n\nAmazon SageMaker is a fully managed service that is used to quickly and easily build, train and deploy machine learning (ML) models.\n\nAmazon SageMaker Experiments is a capability of Amazon SageMaker that lets you organize, track, compare and evaluate ML experiments and model versions.\n\nWe need to install several python libraries.\n\npip install google-search-results sagemaker\n\n\nSee a usage example.\n\nfrom langchain.callbacks import SageMakerCallbackHandler\n\nPrevious\nAnthropic\nNext\nGoogle\nLLMs\nBedrock\nAmazon API Gateway\nSageMaker Endpoint\nChat models\nBedrock Chat\nText Embedding Models\nBedrock\nSageMaker Endpoint\nChains\nAmazon Comprehend Moderation Chain\nDocument loaders\nAWS S3 Directory and File\nAmazon Textract\nMemory\nAWS DynamoDB\nRetrievers\nAmazon Kendra\nAmazon Bedrock (Knowledge Bases)\nVector stores\nAmazon OpenSearch Service\nTools\nAWS Lambda\nCallbacks\nSageMaker Tracking\nCommunity\nDiscord\nTwitter\nGitHub\nPython\nJS/TS\nMore\nHomepage\nBlog\nCopyright ¬© 2023 LangChain, Inc."
}