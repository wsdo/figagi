{
	"title": "Microsoft | 🦜️🔗 Langchain",
	"url": "https://python.langchain.com/docs/integrations/platforms/microsoft",
	"html": "Skip to main content\n🦜️🔗 LangChain\nDocs\nUse cases\nIntegrations\nGuides\nAPI\nMore\n🦜️🔗\nChat\nSearch\n⌘\nK\nProviders\nAnthropic\nAWS\nGoogle\nHugging Face\nMicrosoft\nOpenAI\nMore\nComponents\nLLMs\nChat models\nDocument loaders\nDocument transformers\nText embedding models\nVector stores\nRetrievers\nTools\nAgents and toolkits\nMemory\nCallbacks\nChat loaders\nAdapters\nStores\nProvidersMicrosoft\nMicrosoft\n\nAll functionality related to Microsoft Azure and other Microsoft products.\n\nChat Models​\nAzure OpenAI​\n\nMicrosoft Azure, often referred to as Azure is a cloud computing platform run by Microsoft, which offers access, management, and development of applications and services through global data centers. It provides a range of capabilities, including software as a service (SaaS), platform as a service (PaaS), and infrastructure as a service (IaaS). Microsoft Azure supports many programming languages, tools, and frameworks, including Microsoft-specific and third-party software and systems.\n\nAzure OpenAI is an Azure service with powerful language models from OpenAI including the GPT-3, Codex and Embeddings model series for content generation, summarization, semantic search, and natural language to code translation.\n\npip install openai tiktoken\n\n\nSet the environment variables to get access to the Azure OpenAI service.\n\nimport os\n\nos.environ[\"AZURE_OPENAI_ENDPOINT\"] = \"https://<your-endpoint.openai.azure.com/\"\nos.environ[\"AZURE_OPENAI_API_KEY\"] = \"your AzureOpenAI key\"\n\n\nSee a usage example\n\nfrom langchain.chat_models import AzureChatOpenAI\n\nText Embedding Models​\nAzure OpenAI​\n\nSee a usage example\n\nfrom langchain.embeddings import AzureOpenAIEmbeddings\n\nLLMs​\nAzure OpenAI​\n\nSee a usage example.\n\nfrom langchain.llms import AzureOpenAI\n\nDocument loaders​\nAzure Blob Storage​\n\nAzure Blob Storage is Microsoft's object storage solution for the cloud. Blob Storage is optimized for storing massive amounts of unstructured data. Unstructured data is data that doesn't adhere to a particular data model or definition, such as text or binary data.\n\nAzure Files offers fully managed file shares in the cloud that are accessible via the industry standard Server Message Block (SMB) protocol, Network File System (NFS) protocol, and Azure Files REST API. Azure Files are based on the Azure Blob Storage.\n\nAzure Blob Storage is designed for:\n\nServing images or documents directly to a browser.\nStoring files for distributed access.\nStreaming video and audio.\nWriting to log files.\nStoring data for backup and restore, disaster recovery, and archiving.\nStoring data for analysis by an on-premises or Azure-hosted service.\npip install azure-storage-blob\n\n\nSee a usage example for the Azure Blob Storage.\n\nfrom langchain.document_loaders import AzureBlobStorageContainerLoader\n\n\nSee a usage example for the Azure Files.\n\nfrom langchain.document_loaders import AzureBlobStorageFileLoader\n\nMicrosoft OneDrive​\n\nMicrosoft OneDrive (formerly SkyDrive) is a file-hosting service operated by Microsoft.\n\nFirst, you need to install a python package.\n\npip install o365\n\n\nSee a usage example.\n\nfrom langchain.document_loaders import OneDriveLoader\n\nMicrosoft Word​\n\nMicrosoft Word is a word processor developed by Microsoft.\n\nSee a usage example.\n\nfrom langchain.document_loaders import UnstructuredWordDocumentLoader\n\nMicrosoft Excel​\n\nMicrosoft Excel is a spreadsheet editor developed by Microsoft for Windows, macOS, Android, iOS and iPadOS. It features calculation or computation capabilities, graphing tools, pivot tables, and a macro programming language called Visual Basic for Applications (VBA). Excel forms part of the Microsoft 365 suite of software.\n\nThe UnstructuredExcelLoader is used to load Microsoft Excel files. The loader works with both .xlsx and .xls files. The page content will be the raw text of the Excel file. If you use the loader in \"elements\" mode, an HTML representation of the Excel file will be available in the document metadata under the text_as_html key.\n\nSee a usage example.\n\nfrom langchain.document_loaders import UnstructuredExcelLoader\n\nMicrosoft SharePoint​\n\nMicrosoft SharePoint is a website-based collaboration system that uses workflow applications, “list” databases, and other web parts and security features to empower business teams to work together developed by Microsoft.\n\nSee a usage example.\n\nfrom langchain.document_loaders.sharepoint import SharePointLoader\n\nMicrosoft PowerPoint​\n\nMicrosoft PowerPoint is a presentation program by Microsoft.\n\nSee a usage example.\n\nfrom langchain.document_loaders import UnstructuredPowerPointLoader\n\nVector stores​\nAzure Cosmos DB​\n\nAzure Cosmos DB for MongoDB vCore makes it easy to create a database with full native MongoDB support. You can apply your MongoDB experience and continue to use your favorite MongoDB drivers, SDKs, and tools by pointing your application to the API for MongoDB vCore account's connection string. Use vector search in Azure Cosmos DB for MongoDB vCore to seamlessly integrate your AI-based applications with your data that's stored in Azure Cosmos DB.\n\nInstallation and Setup​\n\nSee detail configuration instructions.\n\nWe need to install pymongo python package.\n\npip install pymongo\n\nDeploy Azure Cosmos DB on Microsoft Azure​\n\nAzure Cosmos DB for MongoDB vCore provides developers with a fully managed MongoDB-compatible database service for building modern applications with a familiar architecture.\n\nWith Cosmos DB for MongoDB vCore, developers can enjoy the benefits of native Azure integrations, low total cost of ownership (TCO), and the familiar vCore architecture when migrating existing applications or building new ones.\n\nSign Up for free to get started today.\n\nSee a usage example.\n\nfrom langchain.vectorstores import AzureCosmosDBVectorSearch\n\nRetrievers​\nAzure Cognitive Search​\n\nAzure Cognitive Search (formerly known as Azure Search) is a cloud search service that gives developers infrastructure, APIs, and tools for building a rich search experience over private, heterogeneous content in web, mobile, and enterprise applications.\n\nSearch is foundational to any app that surfaces text to users, where common scenarios include catalog or document search, online retail apps, or data exploration over proprietary content. When you create a search service, you'll work with the following capabilities:\n\nA search engine for full text search over a search index containing user-owned content\nRich indexing, with lexical analysis and optional AI enrichment for content extraction and transformation\nRich query syntax for text search, fuzzy search, autocomplete, geo-search and more\nProgrammability through REST APIs and client libraries in Azure SDKs\nAzure integration at the data layer, machine learning layer, and AI (Cognitive Services)\n\nSee set up instructions.\n\nSee a usage example.\n\nfrom langchain.retrievers import AzureCognitiveSearchRetriever\n\nUtilities​\nBing Search API​\n\nSee a usage example.\n\nfrom langchain.utilities import BingSearchAPIWrapper\n\nToolkits​\nAzure Cognitive Services​\n\nWe need to install several python packages.\n\npip install azure-ai-formrecognizer azure-cognitiveservices-speech azure-ai-vision\n\n\nSee a usage example.\n\nfrom langchain.agents.agent_toolkits import O365Toolkit\n\nMicrosoft Office 365 email and calendar​\n\nWe need to install O365 python package.\n\npip install O365\n\n\nSee a usage example.\n\nfrom langchain.agents.agent_toolkits import O365Toolkit\n\nMicrosoft Azure PowerBI​\n\nWe need to install azure-identity python package.\n\npip install azure-identity\n\n\nSee a usage example.\n\nfrom langchain.agents.agent_toolkits import PowerBIToolkit\nfrom langchain.utilities.powerbi import PowerBIDataset\n\nPrevious\nHugging Face\nNext\nOpenAI\nChat Models\nAzure OpenAI\nText Embedding Models\nAzure OpenAI\nLLMs\nAzure OpenAI\nDocument loaders\nAzure Blob Storage\nMicrosoft OneDrive\nMicrosoft Word\nMicrosoft Excel\nMicrosoft SharePoint\nMicrosoft PowerPoint\nVector stores\nAzure Cosmos DB\nRetrievers\nAzure Cognitive Search\nUtilities\nBing Search API\nToolkits\nAzure Cognitive Services\nMicrosoft Office 365 email and calendar\nMicrosoft Azure PowerBI\nCommunity\nDiscord\nTwitter\nGitHub\nPython\nJS/TS\nMore\nHomepage\nBlog\nCopyright © 2023 LangChain, Inc."
}