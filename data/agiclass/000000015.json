{
	"title": "semantic_kernel 在本地运行 - Feishu Docs",
	"url": "https://agiclass.feishu.cn/wiki/OSZRwo4m6iAmoEklLOTcVKuNnRd",
	"html": "AI 全栈课程使用手册\nWiki table of contents\n欢迎你，未来的 AI 全栈工程师\n开始学习\n实验室的使用\n本地运行代码\n关于 gpt-3.5-turbo-instruct 本地运行代码\nsemantic_kernel 在本地运行\nFAQ\n提问指南\n(Mac) Python 环境安装&&版本切换\n(Window) Python环境安装\npip 是什么？\nVSCode 安装 && 使用指南\nPyCharm 安装及使用指南\n（加餐） Python环境与OpenAI基础概念\n本地运行OpenAI代码（多版本）\n如何获取：bing search key\n\nsemantic_kernel 在本地运行\n\nLast updated: Nov 24\n\nLog In or Sign Up\nsemantic_kernel 在本地运行​\nCreated on November 24\n​\nBash\nCopy\nimport semantic_kernel as sk​\nfrom semantic_kernel.connectors.ai.open_ai import OpenAIChatCompletion​\nimport os​\nimport asyncio​\n​\n# 加载 .env 到环境变量​\nfrom dotenv import load_dotenv, find_dotenv​\n_ = load_dotenv(find_dotenv())​\n​\n# 创建 semantic kernel​\nkernel = sk.Kernel()​\n​\n# 配置 OpenAI 服务​\napi_key = os.getenv('OPENAI_API_KEY')​\nendpoint = os.getenv('OPENAI_BASE_URL')​\n​\nprint('endpointxxxx',endpoint)​\n​\nmodel = OpenAIChatCompletion(​\n    \"gpt-3.5-turbo\", api_key, endpoint=endpoint)​\n    # \"gpt-3.5-turbo\", api_key)​\n​\nkernel.add_text_completion_service(\"my-gpt3\", model)​\n​\n# 定义 semantic function​\n# 参数由{{ }}标识​\ntell_joke_about = kernel.create_semantic_function(\"给我讲个关于{{$input}}的笑话吧\")​\n​\n# 运行 function 看结果​\nasync def run_function():​\n    result = await kernel.run_async(​\n        tell_joke_about,​\n        input_str=\"Hello world\"​\n    )​\n    print(result)​\n    ​\nasyncio.run(run_function())​\n​\nComments (0)\nHelp Center\nKeyboard Shortcuts"
}