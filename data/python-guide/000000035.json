{
	"title": "Python3 CGI编程 | 菜鸟教程",
	"url": "https://www.runoob.com/python3/python3-cgi-programming.html",
	"html": "菜鸟教程 -- 学的不仅是技术，更是梦想！\n首页 HTML CSS JAVASCRIPT VUE BOOTSTRAP NODEJS PYTHON3 PYTHON2 JAVA C C++ C# GO SQL LINUX JQUERY 本地书签\n Python 3 教程 \nPython3 教程\nPython3 简介\nPython3 环境搭建\nPython3 VScode\nPython3 基础语法\nPython3 基本数据类型\nPython3 数据类型转换\nPython3 解释器\nPython3 注释\nPython3 运算符\nPython3 数字(Number)\nPython3 字符串\nPython3 列表\nPython3 元组\nPython3 字典\nPython3 集合\nPython3 条件控制\nPython3 循环语句\nPython3 编程第一步\nPython3 推导式\nPython3 迭代器与生成器\nPython3 函数\nPython3 lambda\nPython3 数据结构\nPython3 模块\nPython3 输入和输出\nPython3 File\nPython3 OS\nPython3 错误和异常\nPython3 面向对象\nPython3 命名空间/作用域\nPython3 标准库概览\nPython3 实例\nPython 测验\n\n\nPython3 高级教程\nPython3 正则表达式\n Python3 CGI编程\nPython3 MySQL(mysql-connector)\nPython3 MySQL(PyMySQL)\nPython3 网络编程\nPython3 SMTP发送邮件\nPython3 多线程\nPython3 XML 解析\nPython3 JSON\nPython3 日期和时间\nPython3 内置函数\nPython3 MongoDB\nPython3 urllib\nPython uWSGI 安装配置\nPython3 pip\nPython3 operator\nPython math\nPython requests\nPython random\nPython 有用的资源\nPython AI 绘画\nPython statistics\n Python3 正则表达式\nPython MySQL - mysql-connector 驱动 \nPython CGI编程\n什么是CGI\n\nCGI 目前由NCSA维护，NCSA定义CGI如下：\n\nCGI(Common Gateway Interface),通用网关接口,它是一段程序,运行在服务器上如：HTTP服务器，提供同客户端HTML页面的接口。\n\n网页浏览\n\n为了更好的了解CGI是如何工作的，我们可以从在网页上点击一个链接或URL的流程：\n\n1、使用你的浏览器访问URL并连接到HTTP web 服务器。\n2、Web服务器接收到请求信息后会解析URL，并查找访问的文件在服务器上是否存在，如果存在返回文件的内容，否则返回错误信息。\n3、浏览器从服务器上接收信息，并显示接收的文件或者错误信息。\n\nCGI程序可以是Python脚本，PERL脚本，SHELL脚本，C或者C++程序等。\n\nCGI架构图\n\nWeb服务器支持及配置\n\n在你进行CGI编程前，确保您的Web服务器支持CGI及已经配置了CGI的处理程序。\n\nApache 支持CGI 配置：\n\n设置好CGI目录：\n\nScriptAlias /cgi-bin/ /var/www/cgi-bin/\n\n所有的HTTP服务器执行CGI程序都保存在一个预先配置的目录。这个目录被称为CGI目录，并按照惯例，它被命名为/var/www/cgi-bin目录。\n\nCGI文件的扩展名为.cgi，python也可以使用.py扩展名。\n\n默认情况下，Linux服务器配置运行的cgi-bin目录中为/var/www。\n\n如果你想指定其他运行CGI脚本的目录，可以修改httpd.conf配置文件，如下所示：\n\n<Directory \"/var/www/cgi-bin\">\n   AllowOverride None\n   Options +ExecCGI\n   Order allow,deny\n   Allow from all\n</Directory>\n\n在 AddHandler 中添加 .py 后缀，这样我们就可以访问 .py 结尾的 python 脚本文件：\n\nAddHandler cgi-script .cgi .pl .py\n第一个CGI程序\n\n我们使用Python创建第一个CGI程序，文件名为hello.py，文件位于/var/www/cgi-bin目录中，内容如下：\n\n实例\n#!/usr/bin/python3\n\nprint (\"Content-type:text/html\")\nprint ()                             # 空行，告诉服务器结束头部\nprint ('<html>')\nprint ('<head>')\nprint ('<meta charset=\"utf-8\">')\nprint ('<title>Hello Word - 我的第一个 CGI 程序！</title>')\nprint ('</head>')\nprint ('<body>')\nprint ('<h2>Hello Word! 我是来自菜鸟教程的第一CGI程序</h2>')\nprint ('</body>')\nprint ('</html>')\n\n\n文件保存后修改 hello.py，修改文件权限为 755：\n\nchmod 755 hello.py \n\n以上程序在浏览器访问显示结果如下：\n\n这个的hello.py脚本是一个简单的Python脚本，脚本第一行的输出内容\"Content-type:text/html\"发送到浏览器并告知浏览器显示的内容类型为\"text/html\"。\n\n用 print 输出一个空行用于告诉服务器结束头部信息。\n\nHTTP头部\n\nhello.py文件内容中的\" Content-type:text/html\"即为HTTP头部的一部分，它会发送给浏览器告诉浏览器文件的内容类型。\n\nHTTP头部的格式如下：\n\nHTTP 字段名: 字段内容\n\n例如：\n\nContent-type: text/html\n\n以下表格介绍了CGI程序中HTTP头部经常使用的信息：\n\n头\t描述\nContent-type:\t请求的与实体对应的MIME信息。例如: Content-type:text/html\nExpires: Date\t响应过期的日期和时间\nLocation: URL\t用来重定向接收方到非请求URL的位置来完成请求或标识新的资源\nLast-modified: Date\t请求资源的最后修改时间\nContent-length: N\t请求的内容长度\nSet-Cookie: String\t设置Http Cookie\nCGI环境变量\n\n所有的CGI程序都接收以下的环境变量，这些变量在CGI程序中发挥了重要的作用：\n\n变量名\t描述\nCONTENT_TYPE\t这个环境变量的值指示所传递来的信息的MIME类型。目前，环境变量CONTENT_TYPE一般都是：application/x-www-form-urlencoded,他表示数据来自于HTML表单。\nCONTENT_LENGTH\t如果服务器与CGI程序信息的传递方式是POST，这个环境变量即使从标准输入STDIN中可以读到的有效数据的字节数。这个环境变量在读取所输入的数据时必须使用。\nHTTP_COOKIE\t客户机内的 COOKIE 内容。\nHTTP_USER_AGENT\t提供包含了版本数或其他专有数据的客户浏览器信息。\nPATH_INFO\t这个环境变量的值表示紧接在CGI程序名之后的其他路径信息。它常常作为CGI程序的参数出现。\nQUERY_STRING\t如果服务器与CGI程序信息的传递方式是GET，这个环境变量的值即使所传递的信息。这个信息经跟在CGI程序名的后面，两者中间用一个问号'?'分隔。\nREMOTE_ADDR\t这个环境变量的值是发送请求的客户机的IP地址，例如上面的192.168.1.67。这个值总是存在的。而且它是Web客户机需要提供给Web服务器的唯一标识，可以在CGI程序中用它来区分不同的Web客户机。\nREMOTE_HOST\t这个环境变量的值包含发送CGI请求的客户机的主机名。如果不支持你想查询，则无需定义此环境变量。\nREQUEST_METHOD\t提供脚本被调用的方法。对于使用 HTTP/1.0 协议的脚本，仅 GET 和 POST 有意义。\nSCRIPT_FILENAME\tCGI脚本的完整路径\nSCRIPT_NAME\tCGI脚本的的名称\nSERVER_NAME\t这是你的 WEB 服务器的主机名、别名或IP地址。\nSERVER_SOFTWARE\t这个环境变量的值包含了调用CGI程序的HTTP服务器的名称和版本号。例如，上面的值为Apache/2.2.14(Unix)\n\n以下是一个简单的CGI脚本输出CGI的环境变量：\n\n实例\n#!/usr/bin/python3\n\nimport os\n\nprint (\"Content-type: text/html\")\nprint ()\nprint (\"<meta charset=\\\"utf-8\\\">\")\nprint (\"<b>环境变量</b><br>\")\nprint (\"<ul>\")\nfor key in os.environ.keys():\n    print (\"<li><span style='color:green'>%30s </span> : %s </li>\" % (key,os.environ[key]))\nprint (\"</ul>\")\n\n\n将以上点保存为 test.py ,并修改文件权限为 755，执行结果如下：\n\nGET和POST方法\n\n浏览器客户端通过两种方法向服务器传递信息，这两种方法就是 GET 方法和 POST 方法。\n\n使用GET方法传输数据\n\nGET方法发送编码后的用户信息到服务端，数据信息包含在请求页面的URL上，以\"?\"号分割, 如下所示：\n\nhttp://www.test.com/cgi-bin/hello.py?key1=value1&key2=value2\n有关 GET 请求的其他一些注释：\nGET 请求可被缓存\nGET 请求保留在浏览器历史记录中\nGET 请求可被收藏为书签\nGET 请求不应在处理敏感数据时使用\nGET 请求有长度限制\nGET 请求只应当用于取回数据\n简单的url实例：GET方法\n\n以下是一个简单的URL，使用GET方法向hello_get.py程序发送两个参数：\n\n/cgi-bin/test.py?name=菜鸟教程&url=http://www.runoob.com\n\n以下为 hello_get.py 文件的代码：\n\n实例\n#!/usr/bin/python3\n\n# CGI处理模块\nimport cgi, cgitb\n\n# 创建 FieldStorage 的实例化\nform = cgi.FieldStorage()\n\n# 获取数据\nsite_name = form.getvalue('name')\nsite_url  = form.getvalue('url')\n\nprint (\"Content-type:text/html\")\nprint ()\nprint (\"<html>\")\nprint (\"<head>\")\nprint (\"<meta charset=\\\"utf-8\\\">\")\nprint (\"<title>菜鸟教程 CGI 测试实例</title>\")\nprint (\"</head>\")\nprint (\"<body>\")\nprint (\"<h2>%s官网：%s</h2>\" % (site_name, site_url))\nprint (\"</body>\")\nprint (\"</html>\")\n\n\n文件保存后修改 hello_get.py，修改文件权限为 755：\n\nchmod 755 hello_get.py \n\n浏览器请求输出结果：\n\n简单的表单实例：GET方法\n\n以下是一个通过HTML的表单使用GET方法向服务器发送两个数据，提交的服务器脚本同样是hello_get.py文件，hello_get.html 代码如下：\n\n实例\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>菜鸟教程(runoob.com)</title>\n</head>\n<body>\n<form action=\"/cgi-bin/hello_get.py\" method=\"get\">\n站点名称: <input type=\"text\" name=\"name\">  <br />\n\n站点 URL: <input type=\"text\" name=\"url\" />\n<input type=\"submit\" value=\"提交\" />\n</form>\n</body>\n</html>\n\n\n默认情况下 cgi-bin 目录只能存放脚本文件，我们将 hello_get.html 存储在 test 目录下，修改文件权限为 755：\n\nchmod 755 hello_get.html\n\nGif 演示如下所示：\n\n使用POST方法传递数据\n\n使用POST方法向服务器传递数据是更安全可靠的，像一些敏感信息如用户密码等需要使用POST传输数据。\n\n以下同样是hello_get.py ，它也可以处理浏览器提交的POST表单数据:\n\n实例\n#!/usr/bin/python3\n\n# CGI处理模块\nimport cgi, cgitb\n\n# 创建 FieldStorage 的实例化\nform = cgi.FieldStorage()\n\n# 获取数据\nsite_name = form.getvalue('name')\nsite_url  = form.getvalue('url')\n\nprint (\"Content-type:text/html\")\nprint ()\nprint (\"<html>\")\nprint (\"<head>\")\nprint (\"<meta charset=\\\"utf-8\\\">\")\nprint (\"<title>菜鸟教程 CGI 测试实例</title>\")\nprint (\"</head>\")\nprint (\"<body>\")\nprint (\"<h2>%s官网：%s</h2>\" % (site_name, site_url))\nprint (\"</body>\")\nprint (\"</html>\")\n\n\n以下为表单通过POST方法（method=\"post\"）向服务器脚本 hello_get.py 提交数据:\n\n实例\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>菜鸟教程(runoob.com)</title>\n</head>\n<body>\n<form action=\"/cgi-bin/hello_get.py\" method=\"post\">\n站点名称: <input type=\"text\" name=\"name\">  <br />\n\n站点 URL: <input type=\"text\" name=\"url\" />\n<input type=\"submit\" value=\"提交\" />\n</form>\n</body>\n</html>\n</form>\n\n\nGif 演示如下所示：\n\n通过CGI程序传递checkbox数据\n\ncheckbox用于提交一个或者多个选项数据，HTML代码如下：\n\n实例\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>菜鸟教程(runoob.com)</title>\n</head>\n<body>\n<form action=\"/cgi-bin/checkbox.py\" method=\"POST\" target=\"_blank\">\n<input type=\"checkbox\" name=\"runoob\" value=\"on\" /> 菜鸟教程\n<input type=\"checkbox\" name=\"google\" value=\"on\" /> Google\n<input type=\"submit\" value=\"选择站点\" />\n</form>\n</body>\n</html>\n\n\n以下为 checkbox.py 文件的代码：\n\n实例\n#!/usr/bin/python3\n\n# 引入 CGI 处理模块\nimport cgi, cgitb\n\n# 创建 FieldStorage的实例\nform = cgi.FieldStorage()\n\n# 接收字段数据\nif form.getvalue('google'):\n   google_flag = \"是\"\nelse:\n   google_flag = \"否\"\n\nif form.getvalue('runoob'):\n   runoob_flag = \"是\"\nelse:\n   runoob_flag = \"否\"\n\nprint (\"Content-type:text/html\")\nprint ()\nprint (\"<html>\")\nprint (\"<head>\")\nprint (\"<meta charset=\\\"utf-8\\\">\")\nprint (\"<title>菜鸟教程 CGI 测试实例</title>\")\nprint (\"</head>\")\nprint (\"<body>\")\nprint (\"<h2> 菜鸟教程是否选择了 : %s</h2>\" % runoob_flag)\nprint (\"<h2> Google 是否选择了 : %s</h2>\" % google_flag)\nprint (\"</body>\")\nprint (\"</html>\")\n\n\n修改 checkbox.py 权限：\n\nchmod 755 checkbox.py\n\n浏览器访问 Gif 演示图：\n\n通过CGI程序传递Radio数据\n\nRadio 只向服务器传递一个数据，HTML代码如下：\n\n实例\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>菜鸟教程(runoob.com)</title>\n</head>\n<body>\n<form action=\"/cgi-bin/radiobutton.py\" method=\"post\" target=\"_blank\">\n<input type=\"radio\" name=\"site\" value=\"runoob\" /> 菜鸟教程\n<input type=\"radio\" name=\"site\" value=\"google\" /> Google\n<input type=\"submit\" value=\"提交\" />\n</form>\n</body>\n</html>\n\n\nradiobutton.py 脚本代码如下：\n\n实例\n#!/usr/bin/python3\n\n# 引入 CGI 处理模块\nimport cgi, cgitb\n\n# 创建 FieldStorage的实例\nform = cgi.FieldStorage()\n\n# 接收字段数据\nif form.getvalue('site'):\n   site = form.getvalue('site')\nelse:\n   site = \"提交数据为空\"\n\nprint (\"Content-type:text/html\")\nprint ()\nprint (\"<html>\")\nprint (\"<head>\")\nprint (\"<meta charset=\\\"utf-8\\\">\")\nprint (\"<title>菜鸟教程 CGI 测试实例</title>\")\nprint (\"</head>\")\nprint (\"<body>\")\nprint (\"<h2> 选中的网站是 %s</h2>\" % site)\nprint (\"</body>\")\nprint (\"</html>\")\n\n\n修改 radiobutton.py 权限：\n\nchmod 755 radiobutton.py\n\n浏览器访问 Gif 演示图：\n\n通过CGI程序传递 Textarea 数据\n\nTextarea 向服务器传递多行数据，HTML 代码如下：\n\n实例\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>菜鸟教程(runoob.com)</title>\n</head>\n<body>\n<form action=\"/cgi-bin/textarea.py\" method=\"post\" target=\"_blank\">\n<textarea name=\"textcontent\" cols=\"40\" rows=\"4\">\n在这里输入内容...\n</textarea>\n<input type=\"submit\" value=\"提交\" />\n</form>\n</body>\n</html>\n\n\ntextarea.py 脚本代码如下：\n\n实例\n#!/usr/bin/python3\n\n# 引入 CGI 处理模块\nimport cgi, cgitb\n\n# 创建 FieldStorage的实例\nform = cgi.FieldStorage()\n\n# 接收字段数据\nif form.getvalue('textcontent'):\n   text_content = form.getvalue('textcontent')\nelse:\n   text_content = \"没有内容\"\n\nprint (\"Content-type:text/html\")\nprint ()\nprint (\"<html>\")\nprint (\"<head>\")\nprint (\"<meta charset=\\\"utf-8\\\">\")\nprint (\"<title>菜鸟教程 CGI 测试实例</title>\")\nprint (\"</head>\")\nprint (\"<body>\")\nprint (\"<h2> 输入的内容是：%s</h2>\" % text_content)\nprint (\"</body>\")\nprint (\"</html>\")\n\n>\n\n修改 textarea.py 权限：\n\nchmod 755 textarea.py\n\n浏览器访问 Gif 演示图：\n\n通过CGI程序传递下拉数据。\n\nHTML 下拉框代码如下：\n\n实例\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>菜鸟教程(runoob.com)</title>\n</head>\n<body>\n<form action=\"/cgi-bin/dropdown.py\" method=\"post\" target=\"_blank\">\n<select name=\"dropdown\">\n<option value=\"runoob\" selected>菜鸟教程</option>\n<option value=\"google\">Google</option>\n</select>\n<input type=\"submit\" value=\"提交\"/>\n</form>\n</body>\n</html>\n\n\ndropdown.py 脚本代码如下所示：\n\n实例\n#!/usr/bin/python3\n\n# 引入 CGI 处理模块\nimport cgi, cgitb\n\n# 创建 FieldStorage的实例\nform = cgi.FieldStorage()\n\n# 接收字段数据\nif form.getvalue('dropdown'):\n   dropdown_value = form.getvalue('dropdown')\nelse:\n   dropdown_value = \"没有内容\"\n\nprint (\"Content-type:text/html\")\nprint ()\nprint (\"<html>\")\nprint (\"<head>\")\nprint (\"<meta charset=\\\"utf-8\\\">\")\nprint (\"<title>菜鸟教程 CGI 测试实例</title>\")\nprint (\"</head>\")\nprint (\"<body>\")\nprint (\"<h2> 选中的选项是：%s</h2>\" % dropdown_value)\nprint (\"</body>\")\nprint (\"</html>\")\n\n\n修改 dropdown.py 权限：\n\nchmod 755 dropdown.py\n\n浏览器访问 Gif 演示图：\n\nCGI中使用Cookie\n\n在 http 协议一个很大的缺点就是不对用户身份的进行判断，这样给编程人员带来很大的不便， 而 cookie 功能的出现弥补了这个不足。\n\ncookie 就是在客户访问脚本的同时，通过客户的浏览器，在客户硬盘上写入纪录数据 ，当下次客户访问脚本时取回数据信息，从而达到身份判别的功能，cookie 常用在身份校验中。\n\n　\ncookie的语法\n\nhttp cookie的发送是通过http头部来实现的，他早于文件的传递，头部set-cookie的语法如下：\n\nSet-cookie:name=name;expires=date;path=path;domain=domain;secure \nname=name: 需要设置cookie的值(name不能使用\";\"和\",\"号),有多个name值时用 \";\" 分隔，例如：name1=name1;name2=name2;name3=name3。\nexpires=date: cookie的有效期限,格式： expires=\"Wdy,DD-Mon-YYYY HH:MM:SS\"\npath=path: 设置cookie支持的路径,如果path是一个路径，则cookie对这个目录下的所有文件及子目录生效，例如： path=\"/cgi-bin/\"，如果path是一个文件，则cookie指对这个文件生效，例如：path=\"/cgi-bin/cookie.cgi\"。\ndomain=domain: 对cookie生效的域名，例如：domain=\"www.runoob.com\"\nsecure: 如果给出此标志，表示cookie只能通过SSL协议的https服务器来传递。\ncookie的接收是通过设置环境变量HTTP_COOKIE来实现的，CGI程序可以通过检索该变量获取cookie信息。\nCookie设置\n\nCookie的 设置非常简单，cookie 会在 http 头部单独发送。以下实例在 cookie 中设置了 name 和 expires：\n\n实例\n#!/usr/bin/python3\n\nprint ('Set-Cookie: name=\"菜鸟教程\";expires=Wed, 28 Aug 2016 18:30:00 GMT')\nprint ('Content-Type: text/html')\n\nprint ()\nprint (\"\"\"\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>菜鸟教程(runoob.com)</title>\n  </head>\n    <body>\n        <h1>Cookie set OK!</h1>\n    </body>\n</html>\n\"\"\")\n\n\n将以上代码保存到 cookie_set.py，并修改 cookie_set.py 权限：\n\nchmod 755 cookie_set.py\n\n以上实例使用了 Set-Cookie 头信息来设置 Cookie 信息，可选项中设置了 Cookie 的其他属性，如过期时间 Expires，域名 Domain，路径 Path。这些信息设置在 \"Content-type:text/html\" 之前。\n\n检索Cookie信息\n\nCookie信息检索页非常简单，Cookie信息存储在CGI的环境变量HTTP_COOKIE中，存储格式如下：\n\nkey1=value1;key2=value2;key3=value3....\n\n以下是一个简单的CGI检索cookie信息的程序：\n\n实例\n#!/usr/bin/python3\n\n# 导入模块\nimport os\nimport http.cookies\n\nprint (\"Content-type: text/html\")\nprint ()\n\nprint (\"\"\"\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>菜鸟教程(runoob.com)</title>\n</head>\n<body>\n<h1>读取cookie信息</h1>\n\"\"\")\n\nif 'HTTP_COOKIE' in os.environ:\n    cookie_string=os.environ.get('HTTP_COOKIE')\n    c= http.cookies.SimpleCookie()\n   # c=Cookie.SimpleCookie()\n    c.load(cookie_string)\n\n    try:\n        data=c['name'].value\n        print (\"cookie data: \"+data+\"<br>\")\n    except KeyError:\n        print (\"cookie 没有设置或者已过去<br>\")\nprint (\"\"\"\n</body>\n</html>\n\"\"\")\n\n\n将以上代码保存到 cookie_get.py，并修改 cookie_get.py 权限：\n\nchmod 755 cookie_get.py\n\n以上 cookie 设置演示 Gif 如下所示：\n\n文件上传实例\n\nHTML设置上传文件的表单需要设置 enctype 属性为 multipart/form-data，代码如下所示：\n\n实例\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>菜鸟教程(runoob.com)</title>\n</head>\n<body>\n <form enctype=\"multipart/form-data\"\n                    action=\"/cgi-bin/save_file.py\" method=\"post\">\n   <p>选中文件: <input type=\"file\" name=\"filename\" /></p>\n   <p><input type=\"submit\" value=\"上传\" /></p>\n   </form>\n</body>\n</html>\n\n\nsave_file.py 脚本文件代码如下：\n\n实例\n#!/usr/bin/python3\n\nimport cgi, os\nimport cgitb; cgitb.enable()\n\nform = cgi.FieldStorage()\n\n# 获取文件名\nfileitem = form['filename']\n\n# 检测文件是否上传\nif fileitem.filename:\n   # 设置文件路径\n   fn = os.path.basename(fileitem.filename)\n   open('/tmp/' + fn, 'wb').write(fileitem.file.read())\n\n   message = '文件 \"' + fn + '\" 上传成功'\n   \nelse:\n   message = '文件没有上传'\n   \nprint (\"\"\"\\\nContent-Type: text/html\\n\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>菜鸟教程(runoob.com)</title>\n</head>\n<body>\n   <p>%s</p>\n</body>\n</html>\n\"\"\" % (message,))\n\n\n将以上代码保存到 save_file.py，并修改 save_file.py 权限：\n\nchmod 755 save_file.py\n\n以上 cookie 设置演示 Gif 如下所示：\n\n如果你使用的系统是Unix/Linux，你必须替换文件分隔符，在window下只需要使用open()语句即可：\n\nfn = os.path.basename(fileitem.filename.replace(\"\\\\\", \"/\" ))\n文件下载对话框\n\n我们先在当前目录下创建 foo.txt 文件，用于程序的下载。\n\n文件下载通过设置HTTP头信息来实现，功能代码如下：\n\n实例\n#!/usr/bin/python3\n\n# HTTP 头部\nprint (\"Content-Disposition: attachment; filename=\\\"foo.txt\\\"\")\nprint ()\n# 打开文件\nfo = open(\"foo.txt\", \"rb\")\n\nstr = fo.read();\nprint (str)\n\n# 关闭文件\nfo.close()\n\n Python3 正则表达式\nPython MySQL - mysql-connector 驱动 \n1 篇笔记\n 写笔记\n\n   leo\n\n  leo***ocd.com\n\n103\n\n第一个 cgi 程序这个部分，在英文的 linux 系统下，如果你按照教程的范文编写执行会抛出错误，解决办法有两个，一是修改程序，修改默认stdout，修改后的程序如下:\n\n#!/usr/bin/python3\n\nimport sys\nimport io\nsys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding='utf-8')\n\nprint (\"Content-type:text/html\")\nprint ()                             # 空行，告诉服务器结束头部\nprint ('<html>')\nprint ('<head>')\nprint ('<meta charset=\"utf-8\">')\nprint ('<title>Hello Word - 我的第一个 CGI 程序！</title>')\nprint ('</head>')\nprint ('<body>')\nprint ('<h2>Hello Word! 我是来自菜鸟教程的第一CGI程序</h2>')\nprint ('</body>')\nprint ('</html>')\n\n或者修改系统的 i18n 亦可。\n\nleo\n\n   leo\n\n  leo***ocd.com\n\n6年前 (2018-04-18)\n 分类导航\nHTML / CSS\nJavaScript\n服务端\n数据库\n数据分析\n移动端\nXML 教程\nASP.NET\nWeb Service\n开发工具\n网站建设\n\n\nAdvertisement\n反馈/建议\n反馈/建议\n在线实例\n·HTML 实例\n·CSS 实例\n·JavaScript 实例\n·Ajax 实例\n·jQuery 实例\n·XML 实例\n·Java 实例\n字符集&工具\n· HTML 字符集设置\n· HTML ASCII 字符集\n· JS 混淆/加密\n· PNG/JPEG 图片压缩\n· HTML 拾色器\n· JSON 格式化工具\n· 随机数生成器\n最新更新\n· 正则表达式入门教程\n· Python lambda（...\n· Java 注释\n· Bootstrap5 消息...\n· Python 按字母顺...\n· Python 删除字符...\n· git restore 命令\n站点信息\n· 意见反馈\n· 免责声明\n· 关于我们\n· 文章归档\n关注微信\nCopyright © 2013-2023 菜鸟教程  runoob.com All Rights Reserved. 备案号：闽ICP备15012807号-1\n  \nRUNOOB asks for your consent to use your personal data to:\nperm_identity\nPersonalised advertising and content, advertising and content measurement, audience research and services development\ndevices\nStore and/or access information on a device\nexpand_more\nLearn more\n\nYour personal data will be processed and information from your device (cookies, unique identifiers, and other device data) may be stored by, accessed by and shared with 136 TCF vendor(s) and 66 ad partner(s), or used specifically by this site or app.\n\nSome vendors may process your personal data on the basis of legitimate interest, which you can object to by managing your options below. Look for a link at the bottom of this page or in our privacy policy where you can withdraw consent.\n\nConsent\n\nDo not consent\n\nManage options"
}