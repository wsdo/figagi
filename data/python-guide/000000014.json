{
	"title": "Python3 元组 | 菜鸟教程",
	"url": "https://www.runoob.com/python3/python3-tuple.html",
	"html": "菜鸟教程 -- 学的不仅是技术，更是梦想！\n首页 HTML CSS JAVASCRIPT VUE BOOTSTRAP NODEJS PYTHON3 PYTHON2 JAVA C C++ C# GO SQL LINUX JQUERY 本地书签\n Python 3 教程 \nPython3 教程\nPython3 简介\nPython3 环境搭建\nPython3 VScode\nPython3 基础语法\nPython3 基本数据类型\nPython3 数据类型转换\nPython3 解释器\nPython3 注释\nPython3 运算符\nPython3 数字(Number)\nPython3 字符串\nPython3 列表\n Python3 元组\nPython3 字典\nPython3 集合\nPython3 条件控制\nPython3 循环语句\nPython3 编程第一步\nPython3 推导式\nPython3 迭代器与生成器\nPython3 函数\nPython3 lambda\nPython3 数据结构\nPython3 模块\nPython3 输入和输出\nPython3 File\nPython3 OS\nPython3 错误和异常\nPython3 面向对象\nPython3 命名空间/作用域\nPython3 标准库概览\nPython3 实例\nPython 测验\n\n\nPython3 高级教程\nPython3 正则表达式\nPython3 CGI编程\nPython3 MySQL(mysql-connector)\nPython3 MySQL(PyMySQL)\nPython3 网络编程\nPython3 SMTP发送邮件\nPython3 多线程\nPython3 XML 解析\nPython3 JSON\nPython3 日期和时间\nPython3 内置函数\nPython3 MongoDB\nPython3 urllib\nPython uWSGI 安装配置\nPython3 pip\nPython3 operator\nPython math\nPython requests\nPython random\nPython 有用的资源\nPython AI 绘画\nPython statistics\n Python3 列表\nPython3 字典 \nPython3 元组\n\nPython 的元组与列表类似，不同之处在于元组的元素不能修改。\n\n元组使用小括号 ( )，列表使用方括号 [ ]。\n\n元组创建很简单，只需要在括号中添加元素，并使用逗号隔开即可。\n\n实例(Python 3.0+)\n>>> tup1 = ('Google', 'Runoob', 1997, 2000)\n>>> tup2 = (1, 2, 3, 4, 5 )\n>>> tup3 = \"a\", \"b\", \"c\", \"d\"   #  不需要括号也可以\n>>> type(tup3)\n<class 'tuple'>\n\n\n创建空元组\n\ntup1 = ()\n\n元组中只包含一个元素时，需要在元素后面添加逗号 , ，否则括号会被当作运算符使用：\n\n实例(Python 3.0+)\n>>> tup1 = (50)\n>>> type(tup1)     # 不加逗号，类型为整型\n<class 'int'>\n\n>>> tup1 = (50,)\n>>> type(tup1)     # 加上逗号，类型为元组\n<class 'tuple'>\n\n\n元组与字符串类似，下标索引从 0 开始，可以进行截取，组合等。\n\n访问元组\n\n元组可以使用下标索引来访问元组中的值，如下实例:\n\n实例(Python 3.0+)\n#!/usr/bin/python3\n \ntup1 = ('Google', 'Runoob', 1997, 2000)\ntup2 = (1, 2, 3, 4, 5, 6, 7 )\n \nprint (\"tup1[0]: \", tup1[0])\nprint (\"tup2[1:5]: \", tup2[1:5])\n\n以上实例输出结果：\n\ntup1[0]:  Google\ntup2[1:5]:  (2, 3, 4, 5)\n修改元组\n\n元组中的元素值是不允许修改的，但我们可以对元组进行连接组合，如下实例:\n\n实例(Python 3.0+)\n#!/usr/bin/python3\n \ntup1 = (12, 34.56)\ntup2 = ('abc', 'xyz')\n \n# 以下修改元组元素操作是非法的。\n# tup1[0] = 100\n \n# 创建一个新的元组\ntup3 = tup1 + tup2\nprint (tup3)\n\n以上实例输出结果：\n\n(12, 34.56, 'abc', 'xyz')\n删除元组\n\n元组中的元素值是不允许删除的，但我们可以使用del语句来删除整个元组，如下实例:\n\n实例(Python 3.0+)\n#!/usr/bin/python3\n \ntup = ('Google', 'Runoob', 1997, 2000)\n \nprint (tup)\ndel tup\nprint (\"删除后的元组 tup : \")\nprint (tup)\n\n以上实例元组被删除后，输出变量会有异常信息，输出如下所示：\n\n删除后的元组 tup : \nTraceback (most recent call last):\n  File \"test.py\", line 8, in <module>\n    print (tup)\nNameError: name 'tup' is not defined\n元组运算符\n\n与字符串一样，元组之间可以使用 +、+=和 * 号进行运算。这就意味着他们可以组合和复制，运算后会生成一个新的元组。\n\nPython 表达式\t结果\t描述\n\nlen((1, 2, 3))\n\t3\t计算元素个数\n\n>>> a = (1, 2, 3)\n>>> b = (4, 5, 6)\n>>> c = a+b\n>>> c\n(1, 2, 3, 4, 5, 6)\n\t(1, 2, 3, 4, 5, 6)\t连接，c 就是一个新的元组，它包含了 a 和 b 中的所有元素。\n\n>>> a = (1, 2, 3)\n>>> b = (4, 5, 6)\n>>> a += b\n>>> a\n(1, 2, 3, 4, 5, 6)\n\t(1, 2, 3, 4, 5, 6)\t连接，a 就变成了一个新的元组，它包含了 a 和 b 中的所有元素。\n\n('Hi!',) * 4\n\t('Hi!', 'Hi!', 'Hi!', 'Hi!')\t复制\n\n3 in (1, 2, 3)\n\tTrue\t元素是否存在\n\nfor x in (1, 2, 3): \n    print (x, end=\" \")\n\t1 2 3\t迭代\n元组索引，截取\n\n因为元组也是一个序列，所以我们可以访问元组中的指定位置的元素，也可以截取索引中的一段元素，如下所示：\n\n元组：\n\ntup = ('Google', 'Runoob', 'Taobao', 'Wiki', 'Weibo','Weixin')\n\nPython 表达式\t结果\t描述\ntup[1]\t'Runoob'\t读取第二个元素\ntup[-2]\t'Weibo'\t反向读取，读取倒数第二个元素\ntup[1:]\t('Runoob', 'Taobao', 'Wiki', 'Weibo', 'Weixin')\t截取元素，从第二个开始后的所有元素。\ntup[1:4]\t('Runoob', 'Taobao', 'Wiki')\t截取元素，从第二个开始到第四个元素（索引为 3）。\n\n运行实例如下：\n\n实例\n>>> tup = ('Google', 'Runoob', 'Taobao', 'Wiki', 'Weibo','Weixin')\n>>> tup[1]\n'Runoob'\n>>> tup[-2]\n'Weibo'\n>>> tup[1:]\n('Runoob', 'Taobao', 'Wiki', 'Weibo', 'Weixin')\n>>> tup[1:4]\n('Runoob', 'Taobao', 'Wiki')\n>>>\n\n元组内置函数\n\nPython元组包含了以下内置函数\n\n序号\t方法及描述\t实例\n1\tlen(tuple)\n计算元组元素个数。\t\n>>> tuple1 = ('Google', 'Runoob', 'Taobao')\n>>> len(tuple1)\n3\n>>> \n\n2\tmax(tuple)\n返回元组中元素最大值。\t\n>>> tuple2 = ('5', '4', '8')\n>>> max(tuple2)\n'8'\n>>> \n\n3\tmin(tuple)\n返回元组中元素最小值。\t\n>>> tuple2 = ('5', '4', '8')\n>>> min(tuple2)\n'4'\n>>> \n\n4\ttuple(iterable)\n将可迭代系列转换为元组。\t\n>>> list1= ['Google', 'Taobao', 'Runoob', 'Baidu']\n>>> tuple1=tuple(list1)\n>>> tuple1\n('Google', 'Taobao', 'Runoob', 'Baidu')\n关于元组是不可变的\n\n所谓元组的不可变指的是元组所指向的内存中的内容不可变。\n\n>>> tup = ('r', 'u', 'n', 'o', 'o', 'b')\n>>> tup[0] = 'g'     # 不支持修改元素\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: 'tuple' object does not support item assignment\n>>> id(tup)     # 查看内存地址\n4440687904\n>>> tup = (1,2,3)\n>>> id(tup)\n4441088800    # 内存地址不一样了\n\n\n从以上实例可以看出，重新赋值的元组 tup，绑定到新的对象了，不是修改了原来的对象。\n\n Python3 列表\nPython3 字典 \n11 篇笔记\n 写笔记\n 分类导航\nHTML / CSS\nJavaScript\n服务端\n数据库\n数据分析\n移动端\nXML 教程\nASP.NET\nWeb Service\n开发工具\n网站建设\n\n\nAdvertisement\n反馈/建议\n反馈/建议\n在线实例\n·HTML 实例\n·CSS 实例\n·JavaScript 实例\n·Ajax 实例\n·jQuery 实例\n·XML 实例\n·Java 实例\n字符集&工具\n· HTML 字符集设置\n· HTML ASCII 字符集\n· JS 混淆/加密\n· PNG/JPEG 图片压缩\n· HTML 拾色器\n· JSON 格式化工具\n· 随机数生成器\n最新更新\n· 正则表达式入门教程\n· Python lambda（...\n· Java 注释\n· Bootstrap5 消息...\n· Python 按字母顺...\n· Python 删除字符...\n· git restore 命令\n站点信息\n· 意见反馈\n· 免责声明\n· 关于我们\n· 文章归档\n关注微信\nCopyright © 2013-2023 菜鸟教程  runoob.com All Rights Reserved. 备案号：闽ICP备15012807号-1\n  \nRUNOOB asks for your consent to use your personal data to:\nperm_identity\nPersonalised advertising and content, advertising and content measurement, audience research and services development\ndevices\nStore and/or access information on a device\nexpand_more\nLearn more\n\nYour personal data will be processed and information from your device (cookies, unique identifiers, and other device data) may be stored by, accessed by and shared with 136 TCF vendor(s) and 66 ad partner(s), or used specifically by this site or app.\n\nSome vendors may process your personal data on the basis of legitimate interest, which you can object to by managing your options below. Look for a link at the bottom of this page or in our privacy policy where you can withdraw consent.\n\nConsent\n\nDo not consent\n\nManage options"
}