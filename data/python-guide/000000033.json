{
	"title": "Python3 实例 | 菜鸟教程",
	"url": "https://www.runoob.com/python3/python3-examples.html",
	"html": "菜鸟教程 -- 学的不仅是技术，更是梦想！\n首页 HTML CSS JAVASCRIPT VUE BOOTSTRAP NODEJS PYTHON3 PYTHON2 JAVA C C++ C# GO SQL LINUX JQUERY 本地书签\n Python 3 教程 \nPython3 教程\nPython3 简介\nPython3 环境搭建\nPython3 VScode\nPython3 基础语法\nPython3 基本数据类型\nPython3 数据类型转换\nPython3 解释器\nPython3 注释\nPython3 运算符\nPython3 数字(Number)\nPython3 字符串\nPython3 列表\nPython3 元组\nPython3 字典\nPython3 集合\nPython3 条件控制\nPython3 循环语句\nPython3 编程第一步\nPython3 推导式\nPython3 迭代器与生成器\nPython3 函数\nPython3 lambda\nPython3 数据结构\nPython3 模块\nPython3 输入和输出\nPython3 File\nPython3 OS\nPython3 错误和异常\nPython3 面向对象\nPython3 命名空间/作用域\nPython3 标准库概览\n Python3 实例\nPython 测验\n\n\nPython3 高级教程\nPython3 正则表达式\nPython3 CGI编程\nPython3 MySQL(mysql-connector)\nPython3 MySQL(PyMySQL)\nPython3 网络编程\nPython3 SMTP发送邮件\nPython3 多线程\nPython3 XML 解析\nPython3 JSON\nPython3 日期和时间\nPython3 内置函数\nPython3 MongoDB\nPython3 urllib\nPython uWSGI 安装配置\nPython3 pip\nPython3 operator\nPython math\nPython requests\nPython random\nPython 有用的资源\nPython AI 绘画\nPython statistics\n Python3 标准库概览\nPython 测验 \nPython3 实例\n\n以下实例在 Python3.4.3 版本下测试通过：\n\nPython Hello World 实例\nPython 数字求和\nPython 平方根\nPython 二次方程\nPython 计算三角形的面积\nPython 计算圆的面积\nPython 随机数生成\nPython 摄氏温度转华氏温度\nPython 交换变量\nPython if 语句\nPython 判断字符串是否为数字\nPython 判断奇数偶数\nPython 判断闰年\nPython 获取最大值函数\nPython 质数判断\nPython 输出指定范围内的素数\nPython 阶乘实例\nPython 九九乘法表\nPython 斐波那契数列\nPython 阿姆斯特朗数\nPython 十进制转二进制、八进制、十六进制\nPython ASCII码与字符相互转换\nPython 最大公约数算法\nPython 最小公倍数算法\nPython 简单计算器实现\nPython 生成日历\nPython 使用递归斐波那契数列\nPython 文件 IO\nPython 字符串判断\nPython 字符串大小写转换\nPython 计算每个月天数\nPython 获取昨天日期\nPython list 常用操作\nPython 约瑟夫生者死者小游戏\nPython 五人分鱼\nPython 实现秒表功能\nPython 计算 n 个自然数的立方和\nPython 计算数组元素之和\nPython 数组翻转指定个数的元素\nPython 将列表中的头尾两个元素对调\nPython 将列表中的指定位置的两个元素对调\nPython 翻转列表\nPython 判断元素是否在列表中存在\nPython 清空列表\nPython 移除列表中重复的元素\nPython 复制列表\nPython 计算元素在列表中出现的次数\nPython 计算列表元素之和\nPython 计算列表元素之积\nPython 查找列表中最小元素\nPython 查找列表中最大元素\nPython 移除字符串中的指定位置字符\nPython 判断字符串是否存在子字符串\nPython 判断字符串长度\nPython 使用正则表达式提取字符串中的 URL\nPython 将字符串作为代码执行\nPython 字符串翻转\nPython 对字符串切片及翻转\nPython 按键(key)或值(value)对字典进行排序\nPython 计算字典值之和\nPython 移除字典点键值(key/value)对\nPython 合并字典\nPython 将字符串的时间转换为时间戳\nPython 获取几天前的时间\nPython 将时间戳转换为指定格式日期\nPython 打印自己设计的字体\nPython 二分查找\nPython 线性查找\nPython 插入排序\nPython 快速排序\nPython 选择排序\nPython 冒泡排序\nPython 归并排序\nPython 堆排序\nPython 计数排序\nPython 希尔排序\nPython 拓扑排序\nPython 简单的银行系统\nPython 删除字符串首尾的空格\nPython 按字母顺序对列表排序\n Python3 标准库概览\nPython 测验 \n2 篇笔记\n 写笔记\n\n   连少华\n\n  cla***class@163.com\n\n   参考地址\n\n480\n\nPython 计算笛卡尔积\n\n计算多个集合的笛卡尔积，有规律可循，算法和代码也不难，但是很多语言都没有提供直接计算笛卡尔积的方法，需要自己写大段大段的代码计算笛卡尔积，python 提供了一种最简单的计算笛卡称积的方法(只需要一行代码)，详见下面的代码：\n\n#!/usr/bin/python3\n# -*- coding: utf-8 -*-\n# @file   : Cartesian.py\n# @author : shlian\n# @date   : 2018/5/29\n# @version: 1.0\n# @desc   : 用python实现求笛卡尔积\nimport itertools\n\nclass cartesian(object):\n    def __init__(self):\n        self._data_list=[]\n\n    def add_data(self,data=[]): #添加生成笛卡尔积的数据列表\n        self._data_list.append(data)\n\n    def build(self): #计算笛卡尔积\n        for item in itertools.product(*self._data_list):\n            print(item)\n\nif __name__==\"__main__\":\n    car=cartesian()\n    car.add_data([1,2,3,4])\n    car.add_data([5,6,7,8])\n    car.add_data([9,10,11,12])\n    car.build()\n\n计算的结果如下：\n\n(1, 5, 9)\n(1, 5, 10)\n(1, 5, 11)\n(1, 5, 12)\n(1, 6, 9)\n(1, 6, 10)\n(1, 6, 11)\n(1, 6, 12)\n(1, 7, 9)\n(1, 7, 10)\n(1, 7, 11)\n(1, 7, 12)\n(1, 8, 9)\n(1, 8, 10)\n(1, 8, 11)\n(1, 8, 12)\n(2, 5, 9)\n(2, 5, 10)\n(2, 5, 11)\n(2, 5, 12)\n(2, 6, 9)\n(2, 6, 10)\n(2, 6, 11)\n(2, 6, 12)\n(2, 7, 9)\n(2, 7, 10)\n(2, 7, 11)\n(2, 7, 12)\n(2, 8, 9)\n(2, 8, 10)\n(2, 8, 11)\n(2, 8, 12)\n(3, 5, 9)\n(3, 5, 10)\n(3, 5, 11)\n(3, 5, 12)\n(3, 6, 9)\n(3, 6, 10)\n(3, 6, 11)\n(3, 6, 12)\n(3, 7, 9)\n(3, 7, 10)\n(3, 7, 11)\n(3, 7, 12)\n(3, 8, 9)\n(3, 8, 10)\n(3, 8, 11)\n(3, 8, 12)\n(4, 5, 9)\n(4, 5, 10)\n(4, 5, 11)\n(4, 5, 12)\n(4, 6, 9)\n(4, 6, 10)\n(4, 6, 11)\n(4, 6, 12)\n(4, 7, 9)\n(4, 7, 10)\n(4, 7, 11)\n(4, 7, 12)\n(4, 8, 9)\n(4, 8, 10)\n(4, 8, 11)\n(4, 8, 12)\n连少华\n\n   连少华\n\n  cla***class@163.com\n\n   参考地址\n\n6年前 (2018-05-29)\n\n   Randy\n\n  204***6408@qq.com\n\n49\n\n计算笛卡尔积：\n\nfrom itertools import product\n\nfor x,y,z in product([1, 2, 3], [4, 5], [6, 7, 8]):\n    print(x,y,z)\nRandy\n\n   Randy\n\n  204***6408@qq.com\n\n1年前 (2022-08-30)\n 分类导航\nHTML / CSS\nJavaScript\n服务端\n数据库\n数据分析\n移动端\nXML 教程\nASP.NET\nWeb Service\n开发工具\n网站建设\n\n\nAdvertisement\n反馈/建议\n反馈/建议\n在线实例\n·HTML 实例\n·CSS 实例\n·JavaScript 实例\n·Ajax 实例\n·jQuery 实例\n·XML 实例\n·Java 实例\n字符集&工具\n· HTML 字符集设置\n· HTML ASCII 字符集\n· JS 混淆/加密\n· PNG/JPEG 图片压缩\n· HTML 拾色器\n· JSON 格式化工具\n· 随机数生成器\n最新更新\n· 正则表达式入门教程\n· Python lambda（...\n· Java 注释\n· Bootstrap5 消息...\n· Python 按字母顺...\n· Python 删除字符...\n· git restore 命令\n站点信息\n· 意见反馈\n· 免责声明\n· 关于我们\n· 文章归档\n关注微信\nCopyright © 2013-2023 菜鸟教程  runoob.com All Rights Reserved. 备案号：闽ICP备15012807号-1\n  \nRUNOOB asks for your consent to use your personal data to:\nperm_identity\nPersonalised advertising and content, advertising and content measurement, audience research and services development\ndevices\nStore and/or access information on a device\nexpand_more\nLearn more\n\nYour personal data will be processed and information from your device (cookies, unique identifiers, and other device data) may be stored by, accessed by and shared with 136 TCF vendor(s) and 66 ad partner(s), or used specifically by this site or app.\n\nSome vendors may process your personal data on the basis of legitimate interest, which you can object to by managing your options below. Look for a link at the bottom of this page or in our privacy policy where you can withdraw consent.\n\nConsent\n\nDo not consent\n\nManage options"
}