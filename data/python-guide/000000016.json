{
	"title": "Python3 集合 | 菜鸟教程",
	"url": "https://www.runoob.com/python3/python3-set.html",
	"html": "菜鸟教程 -- 学的不仅是技术，更是梦想！\n首页 HTML CSS JAVASCRIPT VUE BOOTSTRAP NODEJS PYTHON3 PYTHON2 JAVA C C++ C# GO SQL LINUX JQUERY 本地书签\n Python 3 教程 \nPython3 教程\nPython3 简介\nPython3 环境搭建\nPython3 VScode\nPython3 基础语法\nPython3 基本数据类型\nPython3 数据类型转换\nPython3 解释器\nPython3 注释\nPython3 运算符\nPython3 数字(Number)\nPython3 字符串\nPython3 列表\nPython3 元组\nPython3 字典\n Python3 集合\nPython3 条件控制\nPython3 循环语句\nPython3 编程第一步\nPython3 推导式\nPython3 迭代器与生成器\nPython3 函数\nPython3 lambda\nPython3 数据结构\nPython3 模块\nPython3 输入和输出\nPython3 File\nPython3 OS\nPython3 错误和异常\nPython3 面向对象\nPython3 命名空间/作用域\nPython3 标准库概览\nPython3 实例\nPython 测验\n\n\nPython3 高级教程\nPython3 正则表达式\nPython3 CGI编程\nPython3 MySQL(mysql-connector)\nPython3 MySQL(PyMySQL)\nPython3 网络编程\nPython3 SMTP发送邮件\nPython3 多线程\nPython3 XML 解析\nPython3 JSON\nPython3 日期和时间\nPython3 内置函数\nPython3 MongoDB\nPython3 urllib\nPython uWSGI 安装配置\nPython3 pip\nPython3 operator\nPython math\nPython requests\nPython random\nPython 有用的资源\nPython AI 绘画\nPython statistics\n Python3 字典\nPython3 条件控制 \nPython3 集合\n\n集合（set）是一个无序的不重复元素序列。\n\n集合中的元素不会重复，并且可以进行交集、并集、差集等常见的集合操作。\n\n可以使用大括号 { } 创建集合，元素之间用逗号 , 分隔， 或者也可以使用 set() 函数创建集合。\n\n创建格式：\n\nparame = {value01,value02,...}\n或者\nset(value)\n\n以下是一个简单实例：\n\nset1 = {1, 2, 3, 4}            # 直接使用大括号创建集合\nset2 = set([4, 5, 6, 7])      # 使用 set() 函数从列表创建集合\n\n注意：创建一个空集合必须用 set() 而不是 { }，因为 { } 是用来创建一个空字典。\n\n更多实例演示：\n\n实例(Python 3.0+)\n>>> basket = {'apple', 'orange', 'apple', 'pear', 'orange', 'banana'}\n>>> print(basket)                      # 这里演示的是去重功能\n{'orange', 'banana', 'pear', 'apple'}\n>>> 'orange' in basket                 # 快速判断元素是否在集合内\nTrue\n>>> 'crabgrass' in basket\nFalse\n\n>>> # 下面展示两个集合间的运算.\n...\n>>> a = set('abracadabra')\n>>> b = set('alacazam')\n>>> a                                  \n{'a', 'r', 'b', 'c', 'd'}\n>>> a - b                              # 集合a中包含而集合b中不包含的元素\n{'r', 'd', 'b'}\n>>> a | b                              # 集合a或b中包含的所有元素\n{'a', 'c', 'r', 'd', 'b', 'm', 'z', 'l'}\n>>> a & b                              # 集合a和b中都包含了的元素\n{'a', 'c'}\n>>> a ^ b                              # 不同时包含于a和b的元素\n{'r', 'd', 'b', 'm', 'z', 'l'}\n\n\n类似列表推导式，同样集合支持集合推导式(Set comprehension):\n\n实例(Python 3.0+)\n>>> a = {x for x in 'abracadabra' if x not in 'abc'}\n>>> a\n{'r', 'd'}\n\n集合的基本操作\n1、添加元素\n\n语法格式如下：\n\ns.add( x )\n\n将元素 x 添加到集合 s 中，如果元素已存在，则不进行任何操作。\n\n实例(Python 3.0+)\n>>> thisset = set((\"Google\", \"Runoob\", \"Taobao\"))\n>>> thisset.add(\"Facebook\")\n>>> print(thisset)\n{'Taobao', 'Facebook', 'Google', 'Runoob'}\n\n\n还有一个方法，也可以添加元素，且参数可以是列表，元组，字典等，语法格式如下：\n\ns.update( x )\n\nx 可以有多个，用逗号分开。\n\n实例(Python 3.0+)\n>>> thisset = set((\"Google\", \"Runoob\", \"Taobao\"))\n>>> thisset.update({1,3})\n>>> print(thisset)\n{1, 3, 'Google', 'Taobao', 'Runoob'}\n>>> thisset.update([1,4],[5,6])  \n>>> print(thisset)\n{1, 3, 4, 5, 6, 'Google', 'Taobao', 'Runoob'}\n>>>\n\n2、移除元素\n\n语法格式如下：\n\ns.remove( x )\n\n将元素 x 从集合 s 中移除，如果元素不存在，则会发生错误。\n\n实例(Python 3.0+)\n>>> thisset = set((\"Google\", \"Runoob\", \"Taobao\"))\n>>> thisset.remove(\"Taobao\")\n>>> print(thisset)\n{'Google', 'Runoob'}\n>>> thisset.remove(\"Facebook\")   # 不存在会发生错误\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nKeyError: 'Facebook'\n>>>\n\n\n此外还有一个方法也是移除集合中的元素，且如果元素不存在，不会发生错误。格式如下所示：\n\ns.discard( x )\n实例(Python 3.0+)\n>>> thisset = set((\"Google\", \"Runoob\", \"Taobao\"))\n>>> thisset.discard(\"Facebook\")  # 不存在不会发生错误\n>>> print(thisset)\n{'Taobao', 'Google', 'Runoob'}\n\n\n我们也可以设置随机删除集合中的一个元素，语法格式如下：\n\ns.pop() \n脚本模式实例(Python 3.0+)\nthisset = set((\"Google\", \"Runoob\", \"Taobao\", \"Facebook\"))\nx = thisset.pop()\n\nprint(x)\n\n\n输出结果：\n\nRunoob\n\n多次执行测试结果都不一样。\n\nset 集合的 pop 方法会对集合进行无序的排列，然后将这个无序排列集合的左面第一个元素进行删除。\n\n3、计算集合元素个数\n\n语法格式如下：\n\nlen(s)\n\n计算集合 s 元素个数。\n\n实例(Python 3.0+)\n>>> thisset = set((\"Google\", \"Runoob\", \"Taobao\"))\n>>> len(thisset)\n3\n\n4、清空集合\n\n语法格式如下：\n\ns.clear()\n\n清空集合 s。\n\n实例(Python 3.0+)\n>>> thisset = set((\"Google\", \"Runoob\", \"Taobao\"))\n>>> thisset.clear()\n>>> print(thisset)\nset()\n\n5、判断元素是否在集合中存在\n\n语法格式如下：\n\nx in s\n\n判断元素 x 是否在集合 s 中，存在返回 True，不存在返回 False。\n\n实例(Python 3.0+)\n>>> thisset = set((\"Google\", \"Runoob\", \"Taobao\"))\n>>> \"Runoob\" in thisset\nTrue\n>>> \"Facebook\" in thisset\nFalse\n>>>\n\n集合内置方法完整列表\n方法\t描述\nadd()\t为集合添加元素\nclear()\t移除集合中的所有元素\ncopy()\t拷贝一个集合\ndifference()\t返回多个集合的差集\ndifference_update()\t移除集合中的元素，该元素在指定的集合也存在。\ndiscard()\t删除集合中指定的元素\nintersection()\t返回集合的交集\nintersection_update()\t返回集合的交集。\nisdisjoint()\t判断两个集合是否包含相同的元素，如果没有返回 True，否则返回 False。\nissubset()\t判断指定集合是否为该方法参数集合的子集。\nissuperset()\t判断该方法的参数集合是否为指定集合的子集\npop()\t随机移除元素\nremove()\t移除指定元素\nsymmetric_difference()\t返回两个集合中不重复的元素集合。\nsymmetric_difference_update()\t移除当前集合中在另外一个指定集合相同的元素，并将另外一个指定集合中不同的元素插入到当前集合中。\nunion()\t返回两个集合的并集\nupdate()\t给集合添加元素\nlen()\t计算集合元素个数\n Python3 字典\nPython3 条件控制 \n6 篇笔记\n 写笔记\n 分类导航\nHTML / CSS\nJavaScript\n服务端\n数据库\n数据分析\n移动端\nXML 教程\nASP.NET\nWeb Service\n开发工具\n网站建设\n\n\nAdvertisement\n反馈/建议\n反馈/建议\n在线实例\n·HTML 实例\n·CSS 实例\n·JavaScript 实例\n·Ajax 实例\n·jQuery 实例\n·XML 实例\n·Java 实例\n字符集&工具\n· HTML 字符集设置\n· HTML ASCII 字符集\n· JS 混淆/加密\n· PNG/JPEG 图片压缩\n· HTML 拾色器\n· JSON 格式化工具\n· 随机数生成器\n最新更新\n· 正则表达式入门教程\n· Python lambda（...\n· Java 注释\n· Bootstrap5 消息...\n· Python 按字母顺...\n· Python 删除字符...\n· git restore 命令\n站点信息\n· 意见反馈\n· 免责声明\n· 关于我们\n· 文章归档\n关注微信\nCopyright © 2013-2023 菜鸟教程  runoob.com All Rights Reserved. 备案号：闽ICP备15012807号-1\n  \nRUNOOB asks for your consent to use your personal data to:\nperm_identity\nPersonalised advertising and content, advertising and content measurement, audience research and services development\ndevices\nStore and/or access information on a device\nexpand_more\nLearn more\n\nYour personal data will be processed and information from your device (cookies, unique identifiers, and other device data) may be stored by, accessed by and shared with 136 TCF vendor(s) and 66 ad partner(s), or used specifically by this site or app.\n\nSome vendors may process your personal data on the basis of legitimate interest, which you can object to by managing your options below. Look for a link at the bottom of this page or in our privacy policy where you can withdraw consent.\n\nConsent\n\nDo not consent\n\nManage options"
}