{
	"title": "Python requests 模块 | 菜鸟教程",
	"url": "https://www.runoob.com/python3/python-requests.html",
	"html": "菜鸟教程 -- 学的不仅是技术，更是梦想！\n首页 HTML CSS JAVASCRIPT VUE BOOTSTRAP NODEJS PYTHON3 PYTHON2 JAVA C C++ C# GO SQL LINUX JQUERY 本地书签\n Python 3 教程 \nPython3 教程\nPython3 简介\nPython3 环境搭建\nPython3 VScode\nPython3 基础语法\nPython3 基本数据类型\nPython3 数据类型转换\nPython3 解释器\nPython3 注释\nPython3 运算符\nPython3 数字(Number)\nPython3 字符串\nPython3 列表\nPython3 元组\nPython3 字典\nPython3 集合\nPython3 条件控制\nPython3 循环语句\nPython3 编程第一步\nPython3 推导式\nPython3 迭代器与生成器\nPython3 函数\nPython3 lambda\nPython3 数据结构\nPython3 模块\nPython3 输入和输出\nPython3 File\nPython3 OS\nPython3 错误和异常\nPython3 面向对象\nPython3 命名空间/作用域\nPython3 标准库概览\nPython3 实例\nPython 测验\n\n\nPython3 高级教程\nPython3 正则表达式\nPython3 CGI编程\nPython3 MySQL(mysql-connector)\nPython3 MySQL(PyMySQL)\nPython3 网络编程\nPython3 SMTP发送邮件\nPython3 多线程\nPython3 XML 解析\nPython3 JSON\nPython3 日期和时间\nPython3 内置函数\nPython3 MongoDB\nPython3 urllib\nPython uWSGI 安装配置\nPython3 pip\nPython3 operator\nPython math\n Python requests\nPython random\nPython 有用的资源\nPython AI 绘画\nPython statistics\n Python math 模块\nPython random 模块 \nPython requests 模块\n\nPython requests 是一个常用的 HTTP 请求库，可以方便地向网站发送 HTTP 请求，并获取响应结果。\n\nrequests 模块比 urllib 模块更简洁。\n\n使用 requests 发送 HTTP 请求需要先导入 requests 模块：\n\nimport requests\n\n导入后就可以发送 HTTP 请求，使用 requests 提供的方法向指定 URL 发送 HTTP 请求，例如：\n\n实例\n# 导入 requests 包\nimport requests\n\n# 发送请求\nx = requests.get('https://www.runoob.com/')\n\n# 返回网页内容\nprint(x.text)\n\n\n每次调用 requests 请求之后，会返回一个 response 对象，该对象包含了具体的响应信息，如状态码、响应头、响应内容等：\n\nprint(response.status_code)  # 获取响应状态码\nprint(response.headers)  # 获取响应头\nprint(response.content)  # 获取响应内容\n\n更多响应信息如下：\n\n属性或方法\t说明\napparent_encoding\t编码方式\nclose()\t关闭与服务器的连接\ncontent\t返回响应的内容，以字节为单位\ncookies\t返回一个 CookieJar 对象，包含了从服务器发回的 cookie\nelapsed\t返回一个 timedelta 对象，包含了从发送请求到响应到达之间经过的时间量，可以用于测试响应速度。比如 r.elapsed.microseconds 表示响应到达需要多少微秒。\nencoding\t解码 r.text 的编码方式\nheaders\t返回响应头，字典格式\nhistory\t返回包含请求历史的响应对象列表（url）\nis_permanent_redirect\t如果响应是永久重定向的 url，则返回 True，否则返回 False\nis_redirect\t如果响应被重定向，则返回 True，否则返回 False\niter_content()\t迭代响应\niter_lines()\t迭代响应的行\njson()\t返回结果的 JSON 对象 (结果需要以 JSON 格式编写的，否则会引发错误)\nlinks\t返回响应的解析头链接\nnext\t返回重定向链中下一个请求的 PreparedRequest 对象\nok\t检查 \"status_code\" 的值，如果小于400，则返回 True，如果不小于 400，则返回 False\nraise_for_status()\t如果发生错误，方法返回一个 HTTPError 对象\nreason\t响应状态的描述，比如 \"Not Found\" 或 \"OK\"\nrequest\t返回请求此响应的请求对象\nstatus_code\t返回 http 的状态码，比如 404 和 200（200 是 OK，404 是 Not Found）\ntext\t返回响应的内容，unicode 类型数据\nurl\t返回响应的 URL\n实例\n# 导入 requests 包\nimport requests\n\n# 发送请求\nx = requests.get('https://www.runoob.com/')\n\n# 返回 http 的状态码\nprint(x.status_code)\n\n# 响应状态的描述\nprint(x.reason)\n\n# 返回编码\nprint(x.apparent_encoding)\n\n\n输出结果如下：\n\n200\nOK\nutf-8\n\n请求 json 数据文件，返回 json 内容：\n\n实例\n# 导入 requests 包\nimport requests\n\n# 发送请求\nx = requests.get('https://www.runoob.com/try/ajax/json_demo.json')\n\n# 返回 json 数据\nprint(x.json())\n\n\n输出结果如下：\n\n{'name': '网站', 'num': 3, 'sites': [{'name': 'Google', 'info': ['Android', 'Google 搜索', 'Google 翻译']}, {'name': 'Runoob', 'info': ['菜鸟教程', '菜鸟工具', '菜鸟微信']}, {'name': 'Taobao', 'info': ['淘宝', '网购']}]}\nrequests 方法\n\nrequests 方法如下表：\n\n方法\t描述\ndelete(url, args)\t发送 DELETE 请求到指定 url\nget(url, params, args)\t发送 GET 请求到指定 url\nhead(url, args)\t发送 HEAD 请求到指定 url\npatch(url, data, args)\t发送 PATCH 请求到指定 url\npost(url, data, json, args)\t发送 POST 请求到指定 url\nput(url, data, args)\t发送 PUT 请求到指定 url\nrequest(method, url, args)\t向指定的 url 发送指定的请求方法\n\n使用 requests.request() 发送 get 请求：\n\n实例\n# 导入 requests 包\nimport requests\n\n# 发送请求\nx = requests.request('get', 'https://www.runoob.com/')\n\n# 返回网页内容\nprint(x.status_code)\n\n\n输出结果如下：\n\n200\n\n设置请求头：\n\n实例\n# 导入 requests 包\nimport requests\n\n \nkw = {'s':'python 教程'}\n\n# 设置请求头\nheaders = {\"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/537.36\"}\n \n# params 接收一个字典或者字符串的查询参数，字典类型自动转换为url编码，不需要urlencode()\nresponse = requests.get(\"https://www.runoob.com/\", params = kw, headers = headers)\n\n# 查看响应状态码\nprint (response.status_code)\n\n# 查看响应头部字符编码\nprint (response.encoding)\n\n# 查看完整url地址\nprint (response.url)\n\n# 查看响应内容，response.text 返回的是Unicode格式的数据\nprint(response.text)\n\n\n\n输出结果如下：\n\n200\nUTF-8\nhttps://www.runoob.com/?s=python+%E6%95%99%E7%A8%8B\n\n... 其他内容...\n\npost() 方法可以发送 POST 请求到指定 url，一般格式如下：\n\nrequests.post(url, data={key: value}, json={key: value}, args)\n\nurl 请求 url。\n\ndata 参数为要发送到指定 url 的字典、元组列表、字节或文件对象。\n\njson 参数为要发送到指定 url 的 JSON 对象。\n\nargs 为其他参数，比如 cookies、headers、verify等。\n\n实例\n# 导入 requests 包\nimport requests\n\n# 发送请求\nx = requests.post('https://www.runoob.com/try/ajax/demo_post.php')\n\n# 返回网页内容\nprint(x.text)\n\n\n输出结果如下：\n\n<p style='color:red;'>本内容是使用 POST 方法请求的。</p><p style='color:red;'>请求时间：\n2022-05-26 17:30:47</p>\n\npost 请求带参数：\n\n实例\n# 导入 requests 包\nimport requests\n\n# 表单参数，参数名为 fname 和 lname\nmyobj = {'fname': 'RUNOOB','lname': 'Boy'}\n\n# 发送请求\nx = requests.post('https://www.runoob.com/try/ajax/demo_post2.php', data = myobj)\n\n# 返回网页内容\nprint(x.text)\n\n\n输出结果如下：\n\n<p style='color:red;'>你好，RUNOOB Boy，今天过得怎么样？</p>\n附加请求参数\n\n发送请求我们可以在请求中附加额外的参数，例如请求头、查询参数、请求体等，例如：\n\nheaders = {'User-Agent': 'Mozilla/5.0'}  # 设置请求头\nparams = {'key1': 'value1', 'key2': 'value2'}  # 设置查询参数\ndata = {'username': 'example', 'password': '123456'}  # 设置请求体\nresponse = requests.post('https://www.runoob.com', headers=headers, params=params, data=data)\n\n上述代码发送一个 POST 请求，并附加了请求头、查询参数和请求体。\n\n除了基本的 GET 和 POST 请求外，requests 还支持其他 HTTP 方法，如 PUT、DELETE、HEAD、OPTIONS 等。\n\n Python math 模块\nPython random 模块 \n 点我分享笔记\n 分类导航\nHTML / CSS\nJavaScript\n服务端\n数据库\n数据分析\n移动端\nXML 教程\nASP.NET\nWeb Service\n开发工具\n网站建设\n\n\nAdvertisement\n反馈/建议\n反馈/建议\n在线实例\n·HTML 实例\n·CSS 实例\n·JavaScript 实例\n·Ajax 实例\n·jQuery 实例\n·XML 实例\n·Java 实例\n字符集&工具\n· HTML 字符集设置\n· HTML ASCII 字符集\n· JS 混淆/加密\n· PNG/JPEG 图片压缩\n· HTML 拾色器\n· JSON 格式化工具\n· 随机数生成器\n最新更新\n· 正则表达式入门教程\n· Python lambda（...\n· Java 注释\n· Bootstrap5 消息...\n· Python 按字母顺...\n· Python 删除字符...\n· git restore 命令\n站点信息\n· 意见反馈\n· 免责声明\n· 关于我们\n· 文章归档\n关注微信\nCopyright © 2013-2023 菜鸟教程  runoob.com All Rights Reserved. 备案号：闽ICP备15012807号-1\n  \nRUNOOB asks for your consent to use your personal data to:\nperm_identity\nPersonalised advertising and content, advertising and content measurement, audience research and services development\ndevices\nStore and/or access information on a device\nexpand_more\nLearn more\n\nYour personal data will be processed and information from your device (cookies, unique identifiers, and other device data) may be stored by, accessed by and shared with 136 TCF vendor(s) and 66 ad partner(s), or used specifically by this site or app.\n\nSome vendors may process your personal data on the basis of legitimate interest, which you can object to by managing your options below. Look for a link at the bottom of this page or in our privacy policy where you can withdraw consent.\n\nConsent\n\nDo not consent\n\nManage options"
}