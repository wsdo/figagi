{
	"title": "Python3 SMTP发送邮件 | 菜鸟教程",
	"url": "https://www.runoob.com/python3/python3-smtp.html",
	"html": "菜鸟教程 -- 学的不仅是技术，更是梦想！\n首页 HTML CSS JAVASCRIPT VUE BOOTSTRAP NODEJS PYTHON3 PYTHON2 JAVA C C++ C# GO SQL LINUX JQUERY 本地书签\n Python 3 教程 \nPython3 教程\nPython3 简介\nPython3 环境搭建\nPython3 VScode\nPython3 基础语法\nPython3 基本数据类型\nPython3 数据类型转换\nPython3 解释器\nPython3 注释\nPython3 运算符\nPython3 数字(Number)\nPython3 字符串\nPython3 列表\nPython3 元组\nPython3 字典\nPython3 集合\nPython3 条件控制\nPython3 循环语句\nPython3 编程第一步\nPython3 推导式\nPython3 迭代器与生成器\nPython3 函数\nPython3 lambda\nPython3 数据结构\nPython3 模块\nPython3 输入和输出\nPython3 File\nPython3 OS\nPython3 错误和异常\nPython3 面向对象\nPython3 命名空间/作用域\nPython3 标准库概览\nPython3 实例\nPython 测验\n\n\nPython3 高级教程\nPython3 正则表达式\nPython3 CGI编程\nPython3 MySQL(mysql-connector)\nPython3 MySQL(PyMySQL)\nPython3 网络编程\n Python3 SMTP发送邮件\nPython3 多线程\nPython3 XML 解析\nPython3 JSON\nPython3 日期和时间\nPython3 内置函数\nPython3 MongoDB\nPython3 urllib\nPython uWSGI 安装配置\nPython3 pip\nPython3 operator\nPython math\nPython requests\nPython random\nPython 有用的资源\nPython AI 绘画\nPython statistics\n Python3 网络编程\nPython3 多线程 \nPython3 SMTP发送邮件\n\nSMTP（Simple Mail Transfer Protocol）即简单邮件传输协议,它是一组用于由源地址到目的地址传送邮件的规则，由它来控制信件的中转方式。\n\npython的smtplib提供了一种很方便的途径发送电子邮件。它对smtp协议进行了简单的封装。\n\nPython创建 SMTP 对象语法如下：\n\nimport smtplib\n\nsmtpObj = smtplib.SMTP( [host [, port [, local_hostname]]] )\n\n参数说明：\n\nhost: SMTP 服务器主机。 你可以指定主机的ip地址或者域名如:runoob.com，这个是可选参数。\nport: 如果你提供了 host 参数, 你需要指定 SMTP 服务使用的端口号，一般情况下SMTP端口号为25。\nlocal_hostname: 如果SMTP在你的本机上，你只需要指定服务器地址为 localhost 即可。\n\nPython SMTP对象使用sendmail方法发送邮件，语法如下：\n\nSMTP.sendmail(from_addr, to_addrs, msg[, mail_options, rcpt_options]\n\n参数说明：\n\nfrom_addr: 邮件发送者地址。\nto_addrs: 字符串列表，邮件发送地址。\nmsg: 发送消息\n\n这里要注意一下第三个参数，msg是字符串，表示邮件。我们知道邮件一般由标题，发信人，收件人，邮件内容，附件等构成，发送邮件的时候，要注意msg的格式。这个格式就是smtp协议中定义的格式。\n\n实例\n\n以下是一个使用Python发送邮件简单的实例：\n\n实例\n#!/usr/bin/python3\n \nimport smtplib\nfrom email.mime.text import MIMEText\nfrom email.header import Header\n \nsender = 'from@runoob.com'\nreceivers = ['429240967@qq.com']  # 接收邮件，可设置为你的QQ邮箱或者其他邮箱\n \n# 三个参数：第一个为文本内容，第二个 plain 设置文本格式，第三个 utf-8 设置编码\nmessage = MIMEText('Python 邮件发送测试...', 'plain', 'utf-8')\nmessage['From'] = Header(\"菜鸟教程\", 'utf-8')     # 发送者\nmessage['To'] =  Header(\"测试\", 'utf-8')          # 接收者\n \nsubject = 'Python SMTP 邮件测试'\nmessage['Subject'] = Header(subject, 'utf-8')\n \n \ntry:\n    smtpObj = smtplib.SMTP('localhost')\n    smtpObj.sendmail(sender, receivers, message.as_string())\n    print (\"邮件发送成功\")\nexcept smtplib.SMTPException:\n    print (\"Error: 无法发送邮件\")\n\n我们使用三个引号来设置邮件信息，标准邮件需要三个头部信息： From, To, 和 Subject ，每个信息直接使用空行分割。\n\n我们通过实例化 smtplib 模块的 SMTP 对象 smtpObj 来连接到 SMTP 访问，并使用 sendmail 方法来发送信息。\n\n执行以上程序，如果你本机安装sendmail，就会输出：\n\n$ python3 test.py \n邮件发送成功\n\n查看我们的收件箱(一般在垃圾箱)，就可以查看到邮件信息：\n\n如果我们本机没有 sendmail 访问，也可以使用其他服务商的 SMTP 访问（QQ、网易、Google等）。\n\n实例\n#!/usr/bin/python3\n \nimport smtplib\nfrom email.mime.text import MIMEText\nfrom email.header import Header\n \n# 第三方 SMTP 服务\nmail_host=\"smtp.XXX.com\"  #设置服务器\nmail_user=\"XXXX\"    #用户名\nmail_pass=\"XXXXXX\"   #口令 \n \n \nsender = 'from@runoob.com'\nreceivers = ['429240967@qq.com']  # 接收邮件，可设置为你的QQ邮箱或者其他邮箱\n \nmessage = MIMEText('Python 邮件发送测试...', 'plain', 'utf-8')\nmessage['From'] = Header(\"菜鸟教程\", 'utf-8')\nmessage['To'] =  Header(\"测试\", 'utf-8')\n \nsubject = 'Python SMTP 邮件测试'\nmessage['Subject'] = Header(subject, 'utf-8')\n \n \ntry:\n    smtpObj = smtplib.SMTP() \n    smtpObj.connect(mail_host, 25)    # 25 为 SMTP 端口号\n    smtpObj.login(mail_user,mail_pass)\n    smtpObj.sendmail(sender, receivers, message.as_string())\n    print (\"邮件发送成功\")\nexcept smtplib.SMTPException:\n    print (\"Error: 无法发送邮件\")\n使用Python发送HTML格式的邮件\n\nPython发送HTML格式的邮件与发送纯文本消息的邮件不同之处就是将MIMEText中_subtype设置为html。具体代码如下：\n\n实例\n#!/usr/bin/python3\n \nimport smtplib\nfrom email.mime.text import MIMEText\nfrom email.header import Header\n \nsender = 'from@runoob.com'\nreceivers = ['429240967@qq.com']  # 接收邮件，可设置为你的QQ邮箱或者其他邮箱\n \nmail_msg = \"\"\"\n<p>Python 邮件发送测试...</p>\n<p><a href=\"http://www.runoob.com\">这是一个链接</a></p>\n\"\"\"\nmessage = MIMEText(mail_msg, 'html', 'utf-8')\nmessage['From'] = Header(\"菜鸟教程\", 'utf-8')\nmessage['To'] =  Header(\"测试\", 'utf-8')\n \nsubject = 'Python SMTP 邮件测试'\nmessage['Subject'] = Header(subject, 'utf-8')\n \n \ntry:\n    smtpObj = smtplib.SMTP('localhost')\n    smtpObj.sendmail(sender, receivers, message.as_string())\n    print (\"邮件发送成功\")\nexcept smtplib.SMTPException:\n    print (\"Error: 无法发送邮件\")\n\n执行以上程序，如果你本机安装sendmail，就会输出：\n\n$ python3 test.py \n邮件发送成功\n\n查看我们的收件箱(一般在垃圾箱)，就可以查看到邮件信息：\n\nPython 发送带附件的邮件\n\n发送带附件的邮件，首先要创建MIMEMultipart()实例，然后构造附件，如果有多个附件，可依次构造，最后利用smtplib.smtp发送。\n\n实例\n#!/usr/bin/python3\n \nimport smtplib\nfrom email.mime.text import MIMEText\nfrom email.mime.multipart import MIMEMultipart\nfrom email.header import Header\n \nsender = 'from@runoob.com'\nreceivers = ['429240967@qq.com']  # 接收邮件，可设置为你的QQ邮箱或者其他邮箱\n \n#创建一个带附件的实例\nmessage = MIMEMultipart()\nmessage['From'] = Header(\"菜鸟教程\", 'utf-8')\nmessage['To'] =  Header(\"测试\", 'utf-8')\nsubject = 'Python SMTP 邮件测试'\nmessage['Subject'] = Header(subject, 'utf-8')\n \n#邮件正文内容\nmessage.attach(MIMEText('这是菜鸟教程Python 邮件发送测试……', 'plain', 'utf-8'))\n \n# 构造附件1，传送当前目录下的 test.txt 文件\natt1 = MIMEText(open('test.txt', 'rb').read(), 'base64', 'utf-8')\natt1[\"Content-Type\"] = 'application/octet-stream'\n# 这里的filename可以任意写，写什么名字，邮件中显示什么名字\natt1[\"Content-Disposition\"] = 'attachment; filename=\"test.txt\"'\nmessage.attach(att1)\n \n# 构造附件2，传送当前目录下的 runoob.txt 文件\natt2 = MIMEText(open('runoob.txt', 'rb').read(), 'base64', 'utf-8')\natt2[\"Content-Type\"] = 'application/octet-stream'\natt2[\"Content-Disposition\"] = 'attachment; filename=\"runoob.txt\"'\nmessage.attach(att2)\n \ntry:\n    smtpObj = smtplib.SMTP('localhost')\n    smtpObj.sendmail(sender, receivers, message.as_string())\n    print (\"邮件发送成功\")\nexcept smtplib.SMTPException:\n    print (\"Error: 无法发送邮件\")\n$ python3 test.py \n邮件发送成功\n\n查看我们的收件箱(一般在垃圾箱)，就可以查看到邮件信息：\n\n在 HTML 文本中添加图片\n\n邮件的 HTML 文本中一般邮件服务商添加外链是无效的，正确添加图片的实例如下所示：\n\n实例\n#!/usr/bin/python3\n \nimport smtplib\nfrom email.mime.image import MIMEImage\nfrom email.mime.multipart import MIMEMultipart\nfrom email.mime.text import MIMEText\nfrom email.header import Header\n \nsender = 'from@runoob.com'\nreceivers = ['429240967@qq.com']  # 接收邮件，可设置为你的QQ邮箱或者其他邮箱\n \nmsgRoot = MIMEMultipart('related')\nmsgRoot['From'] = Header(\"菜鸟教程\", 'utf-8')\nmsgRoot['To'] =  Header(\"测试\", 'utf-8')\nsubject = 'Python SMTP 邮件测试'\nmsgRoot['Subject'] = Header(subject, 'utf-8')\n \nmsgAlternative = MIMEMultipart('alternative')\nmsgRoot.attach(msgAlternative)\n \n \nmail_msg = \"\"\"\n<p>Python 邮件发送测试...</p>\n<p><a href=\"http://www.runoob.com\">菜鸟教程链接</a></p>\n<p>图片演示：</p>\n<p><img src=\"cid:image1\"></p>\n\"\"\"\nmsgAlternative.attach(MIMEText(mail_msg, 'html', 'utf-8'))\n \n# 指定图片为当前目录\nfp = open('test.png', 'rb')\nmsgImage = MIMEImage(fp.read())\nfp.close()\n \n# 定义图片 ID，在 HTML 文本中引用\nmsgImage.add_header('Content-ID', '<image1>')\nmsgRoot.attach(msgImage)\n \ntry:\n    smtpObj = smtplib.SMTP('localhost')\n    smtpObj.sendmail(sender, receivers, msgRoot.as_string())\n    print (\"邮件发送成功\")\nexcept smtplib.SMTPException:\n    print (\"Error: 无法发送邮件\")\n$ python3 test.py \n邮件发送成功\n\n查看我们的收件箱(如果在垃圾箱可能需要移动到收件箱才可正常显示)，就可以查看到邮件信息：\n\n使用第三方 SMTP 服务发送\n\n这里使用了 QQ 邮箱(你也可以使用 163，Gmail等)的 SMTP 服务，需要做以下配置：\n\nQQ 邮箱通过生成授权码来设置密码：\n\nQQ 邮箱 SMTP 服务器地址：smtp.qq.com，ssl 端口：465。\n\n以下实例你需要修改：发件人邮箱（你的QQ邮箱），密码，收件人邮箱（可发给自己）。\n\nQQ SMTP\n#!/usr/bin/python3\n \nimport smtplib\nfrom email.mime.text import MIMEText\nfrom email.utils import formataddr\n \nmy_sender='429240967@qq.com'    # 发件人邮箱账号\nmy_pass = 'xxxxxxxxxx'              # 发件人邮箱密码\nmy_user='429240967@qq.com'      # 收件人邮箱账号，我这边发送给自己\ndef mail():\n    ret=True\n    try:\n        msg=MIMEText('填写邮件内容','plain','utf-8')\n        msg['From']=formataddr([\"FromRunoob\",my_sender])  # 括号里的对应发件人邮箱昵称、发件人邮箱账号\n        msg['To']=formataddr([\"FK\",my_user])              # 括号里的对应收件人邮箱昵称、收件人邮箱账号\n        msg['Subject']=\"菜鸟教程发送邮件测试\"                # 邮件的主题，也可以说是标题\n \n        server=smtplib.SMTP_SSL(\"smtp.qq.com\", 465)  # 发件人邮箱中的SMTP服务器，端口是25\n        server.login(my_sender, my_pass)  # 括号中对应的是发件人邮箱账号、邮箱密码\n        server.sendmail(my_sender,[my_user,],msg.as_string())  # 括号中对应的是发件人邮箱账号、收件人邮箱账号、发送邮件\n        server.quit()  # 关闭连接\n    except Exception:  # 如果 try 中的语句没有执行，则会执行下面的 ret=False\n        ret=False\n    return ret\n \nret=mail()\nif ret:\n    print(\"邮件发送成功\")\nelse:\n    print(\"邮件发送失败\")\n$ python test.py \n邮件发送成功\n\n发送成功后，登陆收件人邮箱即可查看：\n\n更多内容请参阅：https://docs.python.org/3/library/email-examples.html。\n\n Python3 网络编程\nPython3 多线程 \n3 篇笔记\n 写笔记\n 分类导航\nHTML / CSS\nJavaScript\n服务端\n数据库\n数据分析\n移动端\nXML 教程\nASP.NET\nWeb Service\n开发工具\n网站建设\n\n\nAdvertisement\n反馈/建议\n反馈/建议\n在线实例\n·HTML 实例\n·CSS 实例\n·JavaScript 实例\n·Ajax 实例\n·jQuery 实例\n·XML 实例\n·Java 实例\n字符集&工具\n· HTML 字符集设置\n· HTML ASCII 字符集\n· JS 混淆/加密\n· PNG/JPEG 图片压缩\n· HTML 拾色器\n· JSON 格式化工具\n· 随机数生成器\n最新更新\n· 正则表达式入门教程\n· Python lambda（...\n· Java 注释\n· Bootstrap5 消息...\n· Python 按字母顺...\n· Python 删除字符...\n· git restore 命令\n站点信息\n· 意见反馈\n· 免责声明\n· 关于我们\n· 文章归档\n关注微信\nCopyright © 2013-2023 菜鸟教程  runoob.com All Rights Reserved. 备案号：闽ICP备15012807号-1\n  \nRUNOOB asks for your consent to use your personal data to:\nperm_identity\nPersonalised advertising and content, advertising and content measurement, audience research and services development\ndevices\nStore and/or access information on a device\nexpand_more\nLearn more\n\nYour personal data will be processed and information from your device (cookies, unique identifiers, and other device data) may be stored by, accessed by and shared with 136 TCF vendor(s) and 66 ad partner(s), or used specifically by this site or app.\n\nSome vendors may process your personal data on the basis of legitimate interest, which you can object to by managing your options below. Look for a link at the bottom of this page or in our privacy policy where you can withdraw consent.\n\nConsent\n\nDo not consent\n\nManage options"
}