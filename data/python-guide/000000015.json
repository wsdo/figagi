{
	"title": "Python3 字典 | 菜鸟教程",
	"url": "https://www.runoob.com/python3/python3-dictionary.html",
	"html": "菜鸟教程 -- 学的不仅是技术，更是梦想！\n首页 HTML CSS JAVASCRIPT VUE BOOTSTRAP NODEJS PYTHON3 PYTHON2 JAVA C C++ C# GO SQL LINUX JQUERY 本地书签\n Python 3 教程 \nPython3 教程\nPython3 简介\nPython3 环境搭建\nPython3 VScode\nPython3 基础语法\nPython3 基本数据类型\nPython3 数据类型转换\nPython3 解释器\nPython3 注释\nPython3 运算符\nPython3 数字(Number)\nPython3 字符串\nPython3 列表\nPython3 元组\n Python3 字典\nPython3 集合\nPython3 条件控制\nPython3 循环语句\nPython3 编程第一步\nPython3 推导式\nPython3 迭代器与生成器\nPython3 函数\nPython3 lambda\nPython3 数据结构\nPython3 模块\nPython3 输入和输出\nPython3 File\nPython3 OS\nPython3 错误和异常\nPython3 面向对象\nPython3 命名空间/作用域\nPython3 标准库概览\nPython3 实例\nPython 测验\n\n\nPython3 高级教程\nPython3 正则表达式\nPython3 CGI编程\nPython3 MySQL(mysql-connector)\nPython3 MySQL(PyMySQL)\nPython3 网络编程\nPython3 SMTP发送邮件\nPython3 多线程\nPython3 XML 解析\nPython3 JSON\nPython3 日期和时间\nPython3 内置函数\nPython3 MongoDB\nPython3 urllib\nPython uWSGI 安装配置\nPython3 pip\nPython3 operator\nPython math\nPython requests\nPython random\nPython 有用的资源\nPython AI 绘画\nPython statistics\n Python3 元组\nPython3 集合 \nPython3 字典\n\n字典是另一种可变容器模型，且可存储任意类型对象。\n\n字典的每个键值 key=>value 对用冒号 : 分割，每个对之间用逗号(,)分割，整个字典包括在花括号 {} 中 ,格式如下所示：\n\nd = {key1 : value1, key2 : value2, key3 : value3 }\n\n注意：dict 作为 Python 的关键字和内置函数，变量名不建议命名为 dict。\n\n键必须是唯一的，但值则不必。\n\n值可以取任何数据类型，但键必须是不可变的，如字符串，数字。\n\n一个简单的字典实例：\n\ntinydict = {'name': 'runoob', 'likes': 123, 'url': 'www.runoob.com'}\n\n也可如此创建字典：\n\ntinydict1 = { 'abc': 456 }\ntinydict2 = { 'abc': 123, 98.6: 37 }\n创建空字典\n\n使用大括号 { } 创建空字典：\n\n实例\n# 使用大括号 {} 来创建空字典\nemptyDict = {}\n \n# 打印字典\nprint(emptyDict)\n \n# 查看字典的数量\nprint(\"Length:\", len(emptyDict))\n \n# 查看类型\nprint(type(emptyDict))\n\n\n以上实例输出结果：\n\n{}\nLength: 0\n<class 'dict'>\n\n使用内建函数 dict() 创建字典：\n\n实例\nemptyDict = dict()\n \n# 打印字典\nprint(emptyDict)\n \n# 查看字典的数量\nprint(\"Length:\",len(emptyDict))\n \n# 查看类型\nprint(type(emptyDict))\n\n\n以上实例输出结果：\n\n{}\nLength: 0\n<class 'dict'>\n访问字典里的值\n\n把相应的键放入到方括号中，如下实例:\n\n实例\n#!/usr/bin/python3\n \ntinydict = {'Name': 'Runoob', 'Age': 7, 'Class': 'First'}\n \nprint (\"tinydict['Name']: \", tinydict['Name'])\nprint (\"tinydict['Age']: \", tinydict['Age'])\n\n以上实例输出结果：\n\ntinydict['Name']:  Runoob\ntinydict['Age']:  7\n\n如果用字典里没有的键访问数据，会输出错误如下：\n\n实例\n#!/usr/bin/python3\n \ntinydict = {'Name': 'Runoob', 'Age': 7, 'Class': 'First'}\n \nprint (\"tinydict['Alice']: \", tinydict['Alice'])\n\n以上实例输出结果：\n\nTraceback (most recent call last):\n  File \"test.py\", line 5, in <module>\n    print (\"tinydict['Alice']: \", tinydict['Alice'])\nKeyError: 'Alice'\n\n\n修改字典\n\n向字典添加新内容的方法是增加新的键/值对，修改或删除已有键/值对如下实例:\n\n实例\n#!/usr/bin/python3\n \ntinydict = {'Name': 'Runoob', 'Age': 7, 'Class': 'First'}\n \ntinydict['Age'] = 8               # 更新 Age\ntinydict['School'] = \"菜鸟教程\"  # 添加信息\n \n \nprint (\"tinydict['Age']: \", tinydict['Age'])\nprint (\"tinydict['School']: \", tinydict['School'])\n以上实例输出结果：\ntinydict['Age']:  8\ntinydict['School']:  菜鸟教程\n\n\n删除字典元素\n\n能删单一的元素也能清空字典，清空只需一项操作。\n\n显式删除一个字典用del命令，如下实例：\n\n实例\n#!/usr/bin/python3\n \ntinydict = {'Name': 'Runoob', 'Age': 7, 'Class': 'First'}\n \ndel tinydict['Name'] # 删除键 'Name'\ntinydict.clear()     # 清空字典\ndel tinydict         # 删除字典\n \nprint (\"tinydict['Age']: \", tinydict['Age'])\nprint (\"tinydict['School']: \", tinydict['School'])\n\n但这会引发一个异常，因为用执行 del 操作后字典不再存在：\n\nTraceback (most recent call last):\n  File \"/runoob-test/test.py\", line 9, in <module>\n    print (\"tinydict['Age']: \", tinydict['Age'])\nNameError: name 'tinydict' is not defined\n\n注：del() 方法后面也会讨论。\n\n\n\n字典键的特性\n\n字典值可以是任何的 python 对象，既可以是标准的对象，也可以是用户定义的，但键不行。\n\n两个重要的点需要记住：\n\n1）不允许同一个键出现两次。创建时如果同一个键被赋值两次，后一个值会被记住，如下实例：\n\n实例\n#!/usr/bin/python3\n \ntinydict = {'Name': 'Runoob', 'Age': 7, 'Name': '小菜鸟'}\n \nprint (\"tinydict['Name']: \", tinydict['Name'])\n\n以上实例输出结果：\n\ntinydict['Name']:  小菜鸟\n\n2）键必须不可变，所以可以用数字，字符串或元组充当，而用列表就不行，如下实例：\n\n实例\n#!/usr/bin/python3\n \ntinydict = {['Name']: 'Runoob', 'Age': 7}\n \nprint (\"tinydict['Name']: \", tinydict['Name'])\n\n以上实例输出结果：\n\nTraceback (most recent call last):\n  File \"test.py\", line 3, in <module>\n    tinydict = {['Name']: 'Runoob', 'Age': 7}\nTypeError: unhashable type: 'list'\n\n\n字典内置函数&方法\n\nPython字典包含了以下内置函数：\n\n序号\t函数及描述\t实例\n1\tlen(dict)\n计算字典元素个数，即键的总数。\t\n>>> tinydict = {'Name': 'Runoob', 'Age': 7, 'Class': 'First'}\n>>> len(tinydict)\n3\n\n2\tstr(dict)\n输出字典，可以打印的字符串表示。\t\n>>> tinydict = {'Name': 'Runoob', 'Age': 7, 'Class': 'First'}\n>>> str(tinydict)\n\"{'Name': 'Runoob', 'Class': 'First', 'Age': 7}\"\n\n3\ttype(variable)\n返回输入的变量类型，如果变量是字典就返回字典类型。\t\n>>> tinydict = {'Name': 'Runoob', 'Age': 7, 'Class': 'First'}\n>>> type(tinydict)\n<class 'dict'>\n\nPython字典包含了以下内置方法：\n\n序号\t函数及描述\n1\tdict.clear()\n删除字典内所有元素\n2\tdict.copy()\n返回一个字典的浅复制\n3\tdict.fromkeys()\n创建一个新字典，以序列seq中元素做字典的键，val为字典所有键对应的初始值\n4\tdict.get(key, default=None)\n返回指定键的值，如果键不在字典中返回 default 设置的默认值\n5\tkey in dict\n如果键在字典dict里返回true，否则返回false\n6\tdict.items()\n以列表返回一个视图对象\n7\tdict.keys()\n返回一个视图对象\n8\tdict.setdefault(key, default=None)\n和get()类似, 但如果键不存在于字典中，将会添加键并将值设为default\n9\tdict.update(dict2)\n把字典dict2的键/值对更新到dict里\n10\tdict.values()\n返回一个视图对象\n11\tpop(key[,default])\n删除字典 key（键）所对应的值，返回被删除的值。\n12\tpopitem()\n返回并删除字典中的最后一对键和值。\n\n课后练习\n\n Python3 元组\nPython3 集合 \n13 篇笔记\n 写笔记\n 分类导航\nHTML / CSS\nJavaScript\n服务端\n数据库\n数据分析\n移动端\nXML 教程\nASP.NET\nWeb Service\n开发工具\n网站建设\n\n\nAdvertisement\n反馈/建议\n反馈/建议\n在线实例\n·HTML 实例\n·CSS 实例\n·JavaScript 实例\n·Ajax 实例\n·jQuery 实例\n·XML 实例\n·Java 实例\n字符集&工具\n· HTML 字符集设置\n· HTML ASCII 字符集\n· JS 混淆/加密\n· PNG/JPEG 图片压缩\n· HTML 拾色器\n· JSON 格式化工具\n· 随机数生成器\n最新更新\n· 正则表达式入门教程\n· Python lambda（...\n· Java 注释\n· Bootstrap5 消息...\n· Python 按字母顺...\n· Python 删除字符...\n· git restore 命令\n站点信息\n· 意见反馈\n· 免责声明\n· 关于我们\n· 文章归档\n关注微信\nCopyright © 2013-2023 菜鸟教程  runoob.com All Rights Reserved. 备案号：闽ICP备15012807号-1\n  \nRUNOOB asks for your consent to use your personal data to:\nperm_identity\nPersonalised advertising and content, advertising and content measurement, audience research and services development\ndevices\nStore and/or access information on a device\nexpand_more\nLearn more\n\nYour personal data will be processed and information from your device (cookies, unique identifiers, and other device data) may be stored by, accessed by and shared with 136 TCF vendor(s) and 66 ad partner(s), or used specifically by this site or app.\n\nSome vendors may process your personal data on the basis of legitimate interest, which you can object to by managing your options below. Look for a link at the bottom of this page or in our privacy policy where you can withdraw consent.\n\nConsent\n\nDo not consent\n\nManage options"
}