{
	"title": "Python MongoDB | 菜鸟教程",
	"url": "https://www.runoob.com/python3/python-mongodb.html",
	"html": "菜鸟教程 -- 学的不仅是技术，更是梦想！\n首页 HTML CSS JAVASCRIPT VUE BOOTSTRAP NODEJS PYTHON3 PYTHON2 JAVA C C++ C# GO SQL LINUX JQUERY 本地书签\n Python 3 教程 \nPython3 教程\nPython3 简介\nPython3 环境搭建\nPython3 VScode\nPython3 基础语法\nPython3 基本数据类型\nPython3 数据类型转换\nPython3 解释器\nPython3 注释\nPython3 运算符\nPython3 数字(Number)\nPython3 字符串\nPython3 列表\nPython3 元组\nPython3 字典\nPython3 集合\nPython3 条件控制\nPython3 循环语句\nPython3 编程第一步\nPython3 推导式\nPython3 迭代器与生成器\nPython3 函数\nPython3 lambda\nPython3 数据结构\nPython3 模块\nPython3 输入和输出\nPython3 File\nPython3 OS\nPython3 错误和异常\nPython3 面向对象\nPython3 命名空间/作用域\nPython3 标准库概览\nPython3 实例\nPython 测验\n\n\nPython3 高级教程\nPython3 正则表达式\nPython3 CGI编程\nPython3 MySQL(mysql-connector)\nPython3 MySQL(PyMySQL)\nPython3 网络编程\nPython3 SMTP发送邮件\nPython3 多线程\nPython3 XML 解析\nPython3 JSON\nPython3 日期和时间\nPython3 内置函数\n Python3 MongoDB\nPython3 urllib\nPython uWSGI 安装配置\nPython3 pip\nPython3 operator\nPython math\nPython requests\nPython random\nPython 有用的资源\nPython AI 绘画\nPython statistics\n Python3 内置函数\nPython3 urllib \nPython MongoDB\n\nMongoDB 是目前最流行的 NoSQL 数据库之一，使用的数据类型 BSON（类似 JSON）。\n\nMongoDB 数据库安装与介绍可以查看我们的 MongoDB 教程。\n\nPyMongo\n\nPython 要连接 MongoDB 需要 MongoDB 驱动，这里我们使用 PyMongo 驱动来连接。\n\npip 安装\n\npip 是一个通用的 Python 包管理工具，提供了对 Python 包的查找、下载、安装、卸载的功能。\n\n安装 pymongo:\n\n$ python3 -m pip3 install pymongo\n\n也可以指定安装的版本:\n\n$ python3 -m pip3 install pymongo==3.5.1\n\n更新 pymongo 命令：\n\n$ python3 -m pip3 install --upgrade pymongo\neasy_install 安装\n\n旧版的 Python 可以使用 easy_install 来安装，easy_install 也是 Python 包管理工具。\n\n$ python -m easy_install pymongo\n\n更新 pymongo 命令：\n\n$ python -m easy_install -U pymongo\n测试 PyMongo\n\n接下来我们可以创建一个测试文件 demo_test_mongodb.py，代码如下：\n\ndemo_test_mongodb.py 文件代码：\n#!/usr/bin/python3\n \nimport pymongo\n\n执行以上代码文件，如果没有出现错误，表示安装成功。\n\n创建数据库\n创建一个数据库\n\n创建数据库需要使用 MongoClient 对象，并且指定连接的 URL 地址和要创建的数据库名。\n\n如下实例中，我们创建的数据库 runoobdb :\n\n实例\n#!/usr/bin/python3\n \nimport pymongo\n \nmyclient = pymongo.MongoClient(\"mongodb://localhost:27017/\")\nmydb = myclient[\"runoobdb\"]\n\n注意: 在 MongoDB 中，数据库只有在内容插入后才会创建! 就是说，数据库创建后要创建集合(数据表)并插入一个文档(记录)，数据库才会真正创建。\n\n判断数据库是否已存在\n\n我们可以读取 MongoDB 中的所有数据库，并判断指定的数据库是否存在：\n\n实例\n#!/usr/bin/python3\n \nimport pymongo\n \nmyclient = pymongo.MongoClient('mongodb://localhost:27017/')\n \ndblist = myclient.list_database_names()\n# dblist = myclient.database_names() \nif \"runoobdb\" in dblist:\n  print(\"数据库已存在！\")\n\n注意：database_names 在最新版本的 Python 中已废弃，Python3.7+ 之后的版本改为了 list_database_names()。\n\n创建集合\n\nMongoDB 中的集合类似 SQL 的表。\n\n创建一个集合\n\nMongoDB 使用数据库对象来创建集合，实例如下：\n\n实例\n#!/usr/bin/python3\n \nimport pymongo\n \nmyclient = pymongo.MongoClient(\"mongodb://localhost:27017/\")\nmydb = myclient[\"runoobdb\"]\n \nmycol = mydb[\"sites\"]\n\n注意: 在 MongoDB 中，集合只有在内容插入后才会创建! 就是说，创建集合(数据表)后要再插入一个文档(记录)，集合才会真正创建。\n\n判断集合是否已存在\n\n我们可以读取 MongoDB 数据库中的所有集合，并判断指定的集合是否存在：\n\n实例\n#!/usr/bin/python3\n \nimport pymongo\n \nmyclient = pymongo.MongoClient('mongodb://localhost:27017/')\n \nmydb = myclient['runoobdb']\n \ncollist = mydb. list_collection_names()\n# collist = mydb.collection_names()\nif \"sites\" in collist:   # 判断 sites 集合是否存在\n  print(\"集合已存在！\")\n\n注意：collection_names 在最新版本的 Python 中已废弃，Python3.7+ 之后的版本改为了 list_collection_names()。\n\n增、删、改、查等操作\n\n下表列出了 MongoDB 的更多操作，详情可点击具体链接：\n\n序号\t功能\n1\t添加数据\n2\t查询数据\n3\t修改数据\n4\t数据排序\n5\t删除数据\n Python3 内置函数\nPython3 urllib \n 点我分享笔记\n 分类导航\nHTML / CSS\nJavaScript\n服务端\n数据库\n数据分析\n移动端\nXML 教程\nASP.NET\nWeb Service\n开发工具\n网站建设\n\n\nAdvertisement\n反馈/建议\n反馈/建议\n在线实例\n·HTML 实例\n·CSS 实例\n·JavaScript 实例\n·Ajax 实例\n·jQuery 实例\n·XML 实例\n·Java 实例\n字符集&工具\n· HTML 字符集设置\n· HTML ASCII 字符集\n· JS 混淆/加密\n· PNG/JPEG 图片压缩\n· HTML 拾色器\n· JSON 格式化工具\n· 随机数生成器\n最新更新\n· 正则表达式入门教程\n· Python lambda（...\n· Java 注释\n· Bootstrap5 消息...\n· Python 按字母顺...\n· Python 删除字符...\n· git restore 命令\n站点信息\n· 意见反馈\n· 免责声明\n· 关于我们\n· 文章归档\n关注微信\nCopyright © 2013-2023 菜鸟教程  runoob.com All Rights Reserved. 备案号：闽ICP备15012807号-1\n  \nRUNOOB asks for your consent to use your personal data to:\nperm_identity\nPersonalised advertising and content, advertising and content measurement, audience research and services development\ndevices\nStore and/or access information on a device\nexpand_more\nLearn more\n\nYour personal data will be processed and information from your device (cookies, unique identifiers, and other device data) may be stored by, accessed by and shared with 136 TCF vendor(s) and 66 ad partner(s), or used specifically by this site or app.\n\nSome vendors may process your personal data on the basis of legitimate interest, which you can object to by managing your options below. Look for a link at the bottom of this page or in our privacy policy where you can withdraw consent.\n\nConsent\n\nDo not consent\n\nManage options"
}