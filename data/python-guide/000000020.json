{
	"title": "Python 推导式 | 菜鸟教程",
	"url": "https://www.runoob.com/python3/python-comprehensions.html",
	"html": "菜鸟教程 -- 学的不仅是技术，更是梦想！\n首页 HTML CSS JAVASCRIPT VUE BOOTSTRAP NODEJS PYTHON3 PYTHON2 JAVA C C++ C# GO SQL LINUX JQUERY 本地书签\n Python 3 教程 \nPython3 教程\nPython3 简介\nPython3 环境搭建\nPython3 VScode\nPython3 基础语法\nPython3 基本数据类型\nPython3 数据类型转换\nPython3 解释器\nPython3 注释\nPython3 运算符\nPython3 数字(Number)\nPython3 字符串\nPython3 列表\nPython3 元组\nPython3 字典\nPython3 集合\nPython3 条件控制\nPython3 循环语句\nPython3 编程第一步\n Python3 推导式\nPython3 迭代器与生成器\nPython3 函数\nPython3 lambda\nPython3 数据结构\nPython3 模块\nPython3 输入和输出\nPython3 File\nPython3 OS\nPython3 错误和异常\nPython3 面向对象\nPython3 命名空间/作用域\nPython3 标准库概览\nPython3 实例\nPython 测验\n\n\nPython3 高级教程\nPython3 正则表达式\nPython3 CGI编程\nPython3 MySQL(mysql-connector)\nPython3 MySQL(PyMySQL)\nPython3 网络编程\nPython3 SMTP发送邮件\nPython3 多线程\nPython3 XML 解析\nPython3 JSON\nPython3 日期和时间\nPython3 内置函数\nPython3 MongoDB\nPython3 urllib\nPython uWSGI 安装配置\nPython3 pip\nPython3 operator\nPython math\nPython requests\nPython random\nPython 有用的资源\nPython AI 绘画\nPython statistics\n Python3 编程第一步\nPython3 迭代器与生成器 \nPython 推导式\n\nPython 推导式是一种独特的数据处理方式，可以从一个数据序列构建另一个新的数据序列的结构体。\n\nPython 支持各种数据结构的推导式：\n\n列表(list)推导式\n字典(dict)推导式\n集合(set)推导式\n元组(tuple)推导式\n列表推导式\n\n列表推导式格式为：\n\n[表达式 for 变量 in 列表] \n[out_exp_res for out_exp in input_list]\n\n或者 \n\n[表达式 for 变量 in 列表 if 条件]\n[out_exp_res for out_exp in input_list if condition]\nout_exp_res：列表生成元素表达式，可以是有返回值的函数。\nfor out_exp in input_list：迭代 input_list 将 out_exp 传入到 out_exp_res 表达式中。\nif condition：条件语句，可以过滤列表中不符合条件的值。\n\n过滤掉长度小于或等于3的字符串列表，并将剩下的转换成大写字母：\n\n实例\n>>> names = ['Bob','Tom','alice','Jerry','Wendy','Smith']\n>>> new_names = [name.upper()for name in names if len(name)>3]\n>>> print(new_names)\n['ALICE', 'JERRY', 'WENDY', 'SMITH']\n\n\n计算 30 以内可以被 3 整除的整数：\n\n实例\n>>> multiples = [i for i in range(30) if i % 3 == 0]\n>>> print(multiples)\n[0, 3, 6, 9, 12, 15, 18, 21, 24, 27]\n\n字典推导式\n\n字典推导基本格式：\n\n{ key_expr: value_expr for value in collection }\n\n或\n\n{ key_expr: value_expr for value in collection if condition }\n\n使用字符串及其长度创建字典：\n\n实例\nlistdemo = ['Google','Runoob', 'Taobao']\n# 将列表中各字符串值为键，各字符串的长度为值，组成键值对\n>>> newdict = {key:len(key) for key in listdemo}\n>>> newdict\n{'Google': 6, 'Runoob': 6, 'Taobao': 6}\n\n\n提供三个数字，以三个数字为键，三个数字的平方为值来创建字典：\n\n实例\n>>> dic = {x: x**2 for x in (2, 4, 6)}\n>>> dic\n{2: 4, 4: 16, 6: 36}\n>>> type(dic)\n<class 'dict'>\n\n集合推导式\n\n集合推导式基本格式：\n\n{ expression for item in Sequence }\n或\n{ expression for item in Sequence if conditional }\n\n计算数字 1,2,3 的平方数：\n\n实例\n>>> setnew = {i**2 for i in (1,2,3)}\n>>> setnew\n{1, 4, 9}\n\n\n判断不是 abc 的字母并输出：\n\n实例\n>>> a = {x for x in 'abracadabra' if x not in 'abc'}\n>>> a\n{'d', 'r'}\n>>> type(a)\n<class 'set'>\n\n元组推导式（生成器表达式）\n\n元组推导式可以利用 range 区间、元组、列表、字典和集合等数据类型，快速生成一个满足指定需求的元组。\n\n元组推导式基本格式：\n\n(expression for item in Sequence )\n或\n(expression for item in Sequence if conditional )\n\n元组推导式和列表推导式的用法也完全相同，只是元组推导式是用 () 圆括号将各部分括起来，而列表推导式用的是中括号 []，另外元组推导式返回的结果是一个生成器对象。\n\n例如，我们可以使用下面的代码生成一个包含数字 1~9 的元组：\n\n实例\n>>> a = (x for x in range(1,10))\n>>> a\n<generator object <genexpr> at 0x7faf6ee20a50>  # 返回的是生成器对象\n\n>>> tuple(a)       # 使用 tuple() 函数，可以直接将生成器对象转换成元组\n(1, 2, 3, 4, 5, 6, 7, 8, 9)\n\n Python3 编程第一步\nPython3 迭代器与生成器 \n1 篇笔记\n 写笔记\n\n   梦晨星云\n\n  125***514@qq.com\n\n977\n\n语法格式：\n\n结果值1 if 判断条件 else 结果2  for 变量名 in 原列表\nlist1 = ['python', 'test1', 'test2']\nlist2 = [word.title() if word.startswith('p') else word.upper() for word in list1]\nprint(list2)\n\n输出结果：\n\n['Python', 'TEST1', 'TEST2']\n梦晨星云\n\n   梦晨星云\n\n  125***514@qq.com\n\n1年前 (2022-08-04)\n 分类导航\nHTML / CSS\nJavaScript\n服务端\n数据库\n数据分析\n移动端\nXML 教程\nASP.NET\nWeb Service\n开发工具\n网站建设\n\n\nAdvertisement\n反馈/建议\n反馈/建议\n在线实例\n·HTML 实例\n·CSS 实例\n·JavaScript 实例\n·Ajax 实例\n·jQuery 实例\n·XML 实例\n·Java 实例\n字符集&工具\n· HTML 字符集设置\n· HTML ASCII 字符集\n· JS 混淆/加密\n· PNG/JPEG 图片压缩\n· HTML 拾色器\n· JSON 格式化工具\n· 随机数生成器\n最新更新\n· 正则表达式入门教程\n· Python lambda（...\n· Java 注释\n· Bootstrap5 消息...\n· Python 按字母顺...\n· Python 删除字符...\n· git restore 命令\n站点信息\n· 意见反馈\n· 免责声明\n· 关于我们\n· 文章归档\n关注微信\nCopyright © 2013-2023 菜鸟教程  runoob.com All Rights Reserved. 备案号：闽ICP备15012807号-1\n  \nRUNOOB asks for your consent to use your personal data to:\nperm_identity\nPersonalised advertising and content, advertising and content measurement, audience research and services development\ndevices\nStore and/or access information on a device\nexpand_more\nLearn more\n\nYour personal data will be processed and information from your device (cookies, unique identifiers, and other device data) may be stored by, accessed by and shared with 136 TCF vendor(s) and 66 ad partner(s), or used specifically by this site or app.\n\nSome vendors may process your personal data on the basis of legitimate interest, which you can object to by managing your options below. Look for a link at the bottom of this page or in our privacy policy where you can withdraw consent.\n\nConsent\n\nDo not consent\n\nManage options"
}