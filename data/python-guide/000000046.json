{
	"title": "Python urllib | 菜鸟教程",
	"url": "https://www.runoob.com/python3/python-urllib.html",
	"html": "菜鸟教程 -- 学的不仅是技术，更是梦想！\n首页 HTML CSS JAVASCRIPT VUE BOOTSTRAP NODEJS PYTHON3 PYTHON2 JAVA C C++ C# GO SQL LINUX JQUERY 本地书签\n Python 3 教程 \nPython3 教程\nPython3 简介\nPython3 环境搭建\nPython3 VScode\nPython3 基础语法\nPython3 基本数据类型\nPython3 数据类型转换\nPython3 解释器\nPython3 注释\nPython3 运算符\nPython3 数字(Number)\nPython3 字符串\nPython3 列表\nPython3 元组\nPython3 字典\nPython3 集合\nPython3 条件控制\nPython3 循环语句\nPython3 编程第一步\nPython3 推导式\nPython3 迭代器与生成器\nPython3 函数\nPython3 lambda\nPython3 数据结构\nPython3 模块\nPython3 输入和输出\nPython3 File\nPython3 OS\nPython3 错误和异常\nPython3 面向对象\nPython3 命名空间/作用域\nPython3 标准库概览\nPython3 实例\nPython 测验\n\n\nPython3 高级教程\nPython3 正则表达式\nPython3 CGI编程\nPython3 MySQL(mysql-connector)\nPython3 MySQL(PyMySQL)\nPython3 网络编程\nPython3 SMTP发送邮件\nPython3 多线程\nPython3 XML 解析\nPython3 JSON\nPython3 日期和时间\nPython3 内置函数\nPython3 MongoDB\n Python3 urllib\nPython uWSGI 安装配置\nPython3 pip\nPython3 operator\nPython math\nPython requests\nPython random\nPython 有用的资源\nPython AI 绘画\nPython statistics\n Python MongoDB\nPython uWSGI 安装配置 \nPython urllib\n\nPython urllib 库用于操作网页 URL，并对网页的内容进行抓取处理。\n\n本文主要介绍 Python3 的 urllib。\n\nurllib 包 包含以下几个模块：\n\nurllib.request - 打开和读取 URL。\nurllib.error - 包含 urllib.request 抛出的异常。\nurllib.parse - 解析 URL。\nurllib.robotparser - 解析 robots.txt 文件。\n\nurllib.request\n\nurllib.request 定义了一些打开 URL 的函数和类，包含授权验证、重定向、浏览器 cookies等。\n\nurllib.request 可以模拟浏览器的一个请求发起过程。\n\n我们可以使用 urllib.request 的 urlopen 方法来打开一个 URL，语法格式如下：\n\nurllib.request.urlopen(url, data=None, [timeout, ]*, cafile=None, capath=None, cadefault=False, context=None)\nurl：url 地址。\ndata：发送到服务器的其他数据对象，默认为 None。\ntimeout：设置访问超时时间。\ncafile 和 capath：cafile 为 CA 证书， capath 为 CA 证书的路径，使用 HTTPS 需要用到。\ncadefault：已经被弃用。\ncontext：ssl.SSLContext类型，用来指定 SSL 设置。\n\n实例如下：\n\n实例\nfrom urllib.request import urlopen\n\nmyURL = urlopen(\"https://www.runoob.com/\")\nprint(myURL.read())\n\n\n以上代码使用 urlopen 打开一个 URL，然后使用 read() 函数获取网页的 HTML 实体代码。\n\nread() 是读取整个网页内容，我们可以指定读取的长度：\n\n实例\nfrom urllib.request import urlopen\n\nmyURL = urlopen(\"https://www.runoob.com/\")\nprint(myURL.read(300))\n\n\n除了 read() 函数外，还包含以下两个读取网页内容的函数：\n\nreadline() - 读取文件的一行内容\n\nfrom urllib.request import urlopen\n\nmyURL = urlopen(\"https://www.runoob.com/\")\nprint(myURL.readline()) #读取一行内容\n\nreadlines() - 读取文件的全部内容，它会把读取的内容赋值给一个列表变量。\n\nfrom urllib.request import urlopen\n\nmyURL = urlopen(\"https://www.runoob.com/\")\nlines = myURL.readlines()\nfor line in lines:\n    print(line) \n\n我们在对网页进行抓取时，经常需要判断网页是否可以正常访问，这里我们就可以使用 getcode() 函数获取网页状态码，返回 200 说明网页正常，返回 404 说明网页不存在:\n\n实例\nimport urllib.request\n\nmyURL1 = urllib.request.urlopen(\"https://www.runoob.com/\")\nprint(myURL1.getcode())   # 200\n\ntry:\n    myURL2 = urllib.request.urlopen(\"https://www.runoob.com/no.html\")\nexcept urllib.error.HTTPError as e:\n    if e.code == 404:\n        print(404)   # 404\n\n\n更多网页状态码可以查阅：https://www.runoob.com/http/http-status-codes.html。\n\n如果要将抓取的网页保存到本地，可以使用 Python3 File write() 方法 函数：\n\n实例\nfrom urllib.request import urlopen\n\nmyURL = urlopen(\"https://www.runoob.com/\")\nf = open(\"runoob_urllib_test.html\", \"wb\")\ncontent = myURL.read()  # 读取网页内容\nf.write(content)\nf.close()\n\n\n执行以上代码，在本地就会生成一个 runoob_urllib_test.html 文件，里面包含了 https://www.runoob.com/ 网页的内容。\n\n更多Python File 处理，可以参阅：https://www.runoob.com/python3/python3-file-methods.html\n\n。\n\nURL 的编码与解码可以使用 urllib.request.quote() 与 urllib.request.unquote() 方法：\n\n实例\nimport urllib.request\n\nencode_url = urllib.request.quote(\"https://www.runoob.com/\")  # 编码\nprint(encode_url)\n\nunencode_url = urllib.request.unquote(encode_url)    # 解码\nprint(unencode_url)\n\n\n输出结果为：\n\nhttps%3A//www.runoob.com/\nhttps://www.runoob.com/\n模拟头部信息\n\n我们抓取网页一般需要对 headers（网页头信息）进行模拟，这时候需要使用到 urllib.request.Request 类：\n\nclass urllib.request.Request(url, data=None, headers={}, origin_req_host=None, unverifiable=False, method=None)\nurl：url 地址。\ndata：发送到服务器的其他数据对象，默认为 None。\nheaders：HTTP 请求的头部信息，字典格式。\norigin_req_host：请求的主机地址，IP 或域名。\nunverifiable：很少用整个参数，用于设置网页是否需要验证，默认是False。。\nmethod：请求方法， 如 GET、POST、DELETE、PUT等。\n实例 - py3_urllib_test.py 文件代码\nimport urllib.request\nimport urllib.parse\n\nurl = 'https://www.runoob.com/?s='  # 菜鸟教程搜索页面\nkeyword = 'Python 教程'\nkey_code = urllib.request.quote(keyword)  # 对请求进行编码\nurl_all = url+key_code\nheader = {\n    'User-Agent':'Mozilla/5.0 (X11; Fedora; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36'\n}   #头部信息\nrequest = urllib.request.Request(url_all,headers=header)\nreponse = urllib.request.urlopen(request).read()\n\nfh = open(\"./urllib_test_runoob_search.html\",\"wb\")    # 将文件写入到当前目录中\nfh.write(reponse)\nfh.close()\n\n\n执行以上 Python 代码，会在当前目录生成 urllib_test_runoob_search.html 文件，打开 urllib_test_runoob_search.html 文件（可以使用浏览器打开），内容如下：\n\n表单 POST 传递数据，我们先创建一个表单，代码如下，我这里使用了 PHP 代码来获取表单的数据：\n\n实例 - py3_urllib_test.php 文件代码：\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>菜鸟教程(runoob.com) urllib POST  测试</title>\n</head>\n<body>\n<form action=\"\" method=\"post\" name=\"myForm\">\n    Name: <input type=\"text\" name=\"name\"><br>\n    Tag: <input type=\"text\" name=\"tag\"><br>\n    <input type=\"submit\" value=\"提交\">\n</form>\n<hr>\n<?php\n// 使用 PHP 来获取表单提交的数据，你可以换成其他的\nif(isset($_POST['name']) && $_POST['tag'] ) {\n   echo $_POST[\"name\"] . ', ' . $_POST['tag'];\n}\n?>\n</body>\n</html>\n\n实例\nimport urllib.request\nimport urllib.parse\n\nurl = 'https://www.runoob.com/try/py3/py3_urllib_test.php'  # 提交到表单页面\ndata = {'name':'RUNOOB', 'tag' : '菜鸟教程'}   # 提交数据\nheader = {\n    'User-Agent':'Mozilla/5.0 (X11; Fedora; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36'\n}   #头部信息\ndata = urllib.parse.urlencode(data).encode('utf8')  # 对参数进行编码，解码使用 urllib.parse.urldecode\nrequest=urllib.request.Request(url, data, header)   # 请求处理\nreponse=urllib.request.urlopen(request).read()      # 读取结果\n\nfh = open(\"./urllib_test_post_runoob.html\",\"wb\")    # 将文件写入到当前目录中\nfh.write(reponse)\nfh.close()\n\n\n执行以上代码，会提交表单数据到 py3_urllib_test.php 文件，输出结果写入到 urllib_test_post_runoob.html 文件。\n\n打开 urllib_test_post_runoob.html 文件（可以使用浏览器打开），显示结果如下：\n\nurllib.error\n\nurllib.error 模块为 urllib.request 所引发的异常定义了异常类，基础异常类是 URLError。\n\nurllib.error 包含了两个方法，URLError 和 HTTPError。\n\nURLError 是 OSError 的一个子类，用于处理程序在遇到问题时会引发此异常（或其派生的异常），包含的属性 reason 为引发异常的原因。\n\nHTTPError 是 URLError 的一个子类，用于处理特殊 HTTP 错误例如作为认证请求的时候，包含的属性 code 为 HTTP 的状态码， reason 为引发异常的原因，headers 为导致 HTTPError 的特定 HTTP 请求的 HTTP 响应头。\n\n对不存在的网页抓取并处理异常:\n\n实例\nimport urllib.request\nimport urllib.error\n\nmyURL1 = urllib.request.urlopen(\"https://www.runoob.com/\")\nprint(myURL1.getcode())   # 200\n\ntry:\n    myURL2 = urllib.request.urlopen(\"https://www.runoob.com/no.html\")\nexcept urllib.error.HTTPError as e:\n    if e.code == 404:\n        print(404)   # 404\n\n\nurllib.parse\n\nurllib.parse 用于解析 URL，格式如下：\n\nurllib.parse.urlparse(urlstring, scheme='', allow_fragments=True)\n\nurlstring 为 字符串的 url 地址，scheme 为协议类型，\n\nallow_fragments 参数为 false，则无法识别片段标识符。相反，它们被解析为路径，参数或查询组件的一部分，并 fragment 在返回值中设置为空字符串。\n\n实例\nfrom urllib.parse import urlparse\n\no = urlparse(\"https://www.runoob.com/?s=python+%E6%95%99%E7%A8%8B\")\nprint(o)\n\n\n以上实例输出结果为：\n\nParseResult(scheme='https', netloc='www.runoob.com', path='/', params='', query='s=python+%E6%95%99%E7%A8%8B', fragment='')\n\n从结果可以看出，内容是一个元组，包含 6 个字符串：协议，位置，路径，参数，查询，判断。\n\n我们可以直接读取协议内容：\n\n实例\nfrom urllib.parse import urlparse\n\no = urlparse(\"https://www.runoob.com/?s=python+%E6%95%99%E7%A8%8B\")\nprint(o.scheme)\n\n\n以上实例输出结果为：\n\nhttps\n\n完整内容如下：\n\n属性\n\n\t\n\n索引\n\n\t\n\n值\n\n\t\n\n值（如果不存在）\n\n\n\n\nscheme\n\n\t\n\n0\n\n\t\n\nURL协议\n\n\t\n\nscheme 参数\n\n\n\n\nnetloc\n\n\t\n\n1\n\n\t\n\n网络位置部分\n\n\t\n\n空字符串\n\n\n\n\npath\n\n\t\n\n2\n\n\t\n\n分层路径\n\n\t\n\n空字符串\n\n\n\n\nparams\n\n\t\n\n3\n\n\t\n\n最后路径元素的参数\n\n\t\n\n空字符串\n\n\n\n\nquery\n\n\t\n\n4\n\n\t\n\n查询组件\n\n\t\n\n空字符串\n\n\n\n\nfragment\n\n\t\n\n5\n\n\t\n\n片段识别\n\n\t\n\n空字符串\n\n\n\n\nusername\n\n\t\t\n\n用户名\n\n\t\n\nNone\n\n\n\n\npassword\n\n\t\t\n\n密码\n\n\t\n\nNone\n\n\n\n\nhostname\n\n\t\t\n\n主机名（小写）\n\n\t\n\nNone\n\n\n\n\nport\n\n\t\t\n\n端口号为整数（如果存在）\n\n\t\n\nNone\n\nurllib.robotparser\n\nurllib.robotparser 用于解析 robots.txt 文件。\n\nrobots.txt（统一小写）是一种存放于网站根目录下的 robots 协议，它通常用于告诉搜索引擎对网站的抓取规则。\n\nurllib.robotparser 提供了 RobotFileParser 类，语法如下：\n\nclass urllib.robotparser.RobotFileParser(url='')\n\n这个类提供了一些可以读取、解析 robots.txt 文件的方法：\n\nset_url(url) - 设置 robots.txt 文件的 URL。\n\nread() - 读取 robots.txt URL 并将其输入解析器。\n\nparse(lines) - 解析行参数。\n\ncan_fetch(useragent, url) - 如果允许 useragent 按照被解析 robots.txt 文件中的规则来获取 url 则返回 True。\n\nmtime() -返回最近一次获取 robots.txt 文件的时间。 这适用于需要定期检查 robots.txt 文件更新情况的长时间运行的网页爬虫。\n\nmodified() - 将最近一次获取 robots.txt 文件的时间设置为当前时间。\n\ncrawl_delay(useragent) -为指定的 useragent 从 robots.txt 返回 Crawl-delay 形参。 如果此形参不存在或不适用于指定的 useragent 或者此形参的 robots.txt 条目存在语法错误，则返回 None。\n\nrequest_rate(useragent) -以 named tuple RequestRate(requests, seconds) 的形式从 robots.txt 返回 Request-rate 形参的内容。 如果此形参不存在或不适用于指定的 useragent 或者此形参的 robots.txt 条目存在语法错误，则返回 None。\n\nsite_maps() - 以 list() 的形式从 robots.txt 返回 Sitemap 形参的内容。 如果此形参不存在或者此形参的 robots.txt 条目存在语法错误，则返回 None。\n\n实例\n>>> import urllib.robotparser\n>>> rp = urllib.robotparser.RobotFileParser()\n>>> rp.set_url(\"http://www.musi-cal.com/robots.txt\")\n>>> rp.read()\n>>> rrate = rp.request_rate(\"*\")\n>>> rrate.requests\n3\n>>> rrate.seconds\n20\n>>> rp.crawl_delay(\"*\")\n6\n>>> rp.can_fetch(\"*\", \"http://www.musi-cal.com/cgi-bin/search?city=San+Francisco\")\nFalse\n>>> rp.can_fetch(\"*\", \"http://www.musi-cal.com/\")\nTrue\n\n Python MongoDB\nPython uWSGI 安装配置 \n 点我分享笔记\n 分类导航\nHTML / CSS\nJavaScript\n服务端\n数据库\n数据分析\n移动端\nXML 教程\nASP.NET\nWeb Service\n开发工具\n网站建设\n\n\nAdvertisement\n反馈/建议\n反馈/建议\n在线实例\n·HTML 实例\n·CSS 实例\n·JavaScript 实例\n·Ajax 实例\n·jQuery 实例\n·XML 实例\n·Java 实例\n字符集&工具\n· HTML 字符集设置\n· HTML ASCII 字符集\n· JS 混淆/加密\n· PNG/JPEG 图片压缩\n· HTML 拾色器\n· JSON 格式化工具\n· 随机数生成器\n最新更新\n· 正则表达式入门教程\n· Python lambda（...\n· Java 注释\n· Bootstrap5 消息...\n· Python 按字母顺...\n· Python 删除字符...\n· git restore 命令\n站点信息\n· 意见反馈\n· 免责声明\n· 关于我们\n· 文章归档\n关注微信\nCopyright © 2013-2023 菜鸟教程  runoob.com All Rights Reserved. 备案号：闽ICP备15012807号-1\n  \nRUNOOB asks for your consent to use your personal data to:\nperm_identity\nPersonalised advertising and content, advertising and content measurement, audience research and services development\ndevices\nStore and/or access information on a device\nexpand_more\nLearn more\n\nYour personal data will be processed and information from your device (cookies, unique identifiers, and other device data) may be stored by, accessed by and shared with 136 TCF vendor(s) and 66 ad partner(s), or used specifically by this site or app.\n\nSome vendors may process your personal data on the basis of legitimate interest, which you can object to by managing your options below. Look for a link at the bottom of this page or in our privacy policy where you can withdraw consent.\n\nConsent\n\nDo not consent\n\nManage options"
}