{
	"title": "Python3 循环语句 | 菜鸟教程",
	"url": "https://www.runoob.com/python3/python3-loop.html",
	"html": "菜鸟教程 -- 学的不仅是技术，更是梦想！\n首页 HTML CSS JAVASCRIPT VUE BOOTSTRAP NODEJS PYTHON3 PYTHON2 JAVA C C++ C# GO SQL LINUX JQUERY 本地书签\n Python 3 教程 \nPython3 教程\nPython3 简介\nPython3 环境搭建\nPython3 VScode\nPython3 基础语法\nPython3 基本数据类型\nPython3 数据类型转换\nPython3 解释器\nPython3 注释\nPython3 运算符\nPython3 数字(Number)\nPython3 字符串\nPython3 列表\nPython3 元组\nPython3 字典\nPython3 集合\nPython3 条件控制\n Python3 循环语句\nPython3 编程第一步\nPython3 推导式\nPython3 迭代器与生成器\nPython3 函数\nPython3 lambda\nPython3 数据结构\nPython3 模块\nPython3 输入和输出\nPython3 File\nPython3 OS\nPython3 错误和异常\nPython3 面向对象\nPython3 命名空间/作用域\nPython3 标准库概览\nPython3 实例\nPython 测验\n\n\nPython3 高级教程\nPython3 正则表达式\nPython3 CGI编程\nPython3 MySQL(mysql-connector)\nPython3 MySQL(PyMySQL)\nPython3 网络编程\nPython3 SMTP发送邮件\nPython3 多线程\nPython3 XML 解析\nPython3 JSON\nPython3 日期和时间\nPython3 内置函数\nPython3 MongoDB\nPython3 urllib\nPython uWSGI 安装配置\nPython3 pip\nPython3 operator\nPython math\nPython requests\nPython random\nPython 有用的资源\nPython AI 绘画\nPython statistics\n Python3 条件控制\nPython3 编程第一步 \nPython3 循环语句\n\n本章节将为大家介绍 Python 循环语句的使用。\n\nPython 中的循环语句有 for 和 while。\n\nPython 循环语句的控制结构图如下所示：\n\nwhile 循环\n\nPython 中 while 语句的一般形式：\n\nwhile 判断条件(condition)：\n    执行语句(statements)……\n\n执行流程图如下：\n\n执行 Gif 演示：\n\n同样需要注意冒号和缩进。另外，在 Python 中没有 do..while 循环。\n\n以下实例使用了 while 来计算 1 到 100 的总和：\n\n实例\n#!/usr/bin/env python3\n \nn = 100\n \nsum = 0\ncounter = 1\nwhile counter <= n:\n    sum = sum + counter\n    counter += 1\n \nprint(\"1 到 %d 之和为: %d\" % (n,sum))\n\n执行结果如下：\n\n1 到 100 之和为: 5050\n无限循环\n\n我们可以通过设置条件表达式永远不为 false 来实现无限循环，实例如下：\n\n实例\n#!/usr/bin/python3\n \nvar = 1\nwhile var == 1 :  # 表达式永远为 true\n   num = int(input(\"输入一个数字  :\"))\n   print (\"你输入的数字是: \", num)\n \nprint (\"Good bye!\")\n\n执行以上脚本，输出结果如下：\n\n输入一个数字  :5\n你输入的数字是:  5\n输入一个数字  :\n\n你可以使用 CTRL+C 来退出当前的无限循环。\n\n无限循环在服务器上客户端的实时请求非常有用。\n\nwhile 循环使用 else 语句\n\n如果 while 后面的条件语句为 false 时，则执行 else 的语句块。\n\n语法格式如下：\n\nwhile <expr>:\n    <statement(s)>\nelse:\n    <additional_statement(s)>\n\nexpr 条件语句为 true 则执行 statement(s) 语句块，如果为 false，则执行 additional_statement(s)。\n\n循环输出数字，并判断大小：\n\n实例\n#!/usr/bin/python3\n \ncount = 0\nwhile count < 5:\n   print (count, \" 小于 5\")\n   count = count + 1\nelse:\n   print (count, \" 大于或等于 5\")\n\n执行以上脚本，输出结果如下：\n\n0  小于 5\n1  小于 5\n2  小于 5\n3  小于 5\n4  小于 5\n5  大于或等于 5\n简单语句组\n\n类似 if 语句的语法，如果你的 while 循环体中只有一条语句，你可以将该语句与 while 写在同一行中， 如下所示：\n\n实例\n#!/usr/bin/python\n \nflag = 1\n \nwhile (flag): print ('欢迎访问菜鸟教程!')\n \nprint (\"Good bye!\")\n\n注意：以上的无限循环你可以使用 CTRL+C 来中断循环。\n\n执行以上脚本，输出结果如下：\n\n欢迎访问菜鸟教程!\n欢迎访问菜鸟教程!\n欢迎访问菜鸟教程!\n欢迎访问菜鸟教程!\n欢迎访问菜鸟教程!\n……\nfor 语句\n\nPython for 循环可以遍历任何可迭代对象，如一个列表或者一个字符串。\n\nfor循环的一般格式如下：\n\nfor <variable> in <sequence>:\n    <statements>\nelse:\n    <statements>\n\n流程图：\n\nPython for 循环实例：\n\n实例\n#!/usr/bin/python3\n \nsites = [\"Baidu\", \"Google\",\"Runoob\",\"Taobao\"]\nfor site in sites:\n    print(site)\n\n以上代码执行输出结果为：\n\nBaidu\nGoogle\nRunoob\nTaobao\n\n也可用于打印字符串中的每个字符：\n\n实例\n#!/usr/bin/python3\n \nword = 'runoob'\n \nfor letter in word:\n    print(letter)\n\n以上代码执行输出结果为：\n\nr\nu\nn\no\no\nb\n\n整数范围值可以配合 range() 函数使用：\n\n实例\n#!/usr/bin/python3\n \n#  1 到 5 的所有数字：\nfor number in range(1, 6):\n    print(number)\n\n以上代码执行输出结果为：\n\n1\n2\n3\n4\n5\nfor...else\n\n在 Python 中，for...else 语句用于在循环结束后执行一段代码。\n\n语法格式如下：\n\nfor item in iterable:\n    # 循环主体\nelse:\n    # 循环结束后执行的代码\n\n当循环执行完毕（即遍历完 iterable 中的所有元素）后，会执行 else 子句中的代码，如果在循环过程中遇到了 break 语句，则会中断循环，此时不会执行 else 子句。\n\n实例\nfor x in range(6):\n  print(x)\nelse:\n  print(\"Finally finished!\")\n\n\n执行脚本后，输出结果为：\n\n0\n1\n2\n3\n4\n5\nFinally finished!\n\n以下 for 实例中使用了 break 语句，break 语句用于跳出当前循环体，不会执行 else 子句：\n\n实例\n#!/usr/bin/python3\n \nsites = [\"Baidu\", \"Google\",\"Runoob\",\"Taobao\"]\nfor site in sites:\n    if site == \"Runoob\":\n        print(\"菜鸟教程!\")\n        break\n    print(\"循环数据 \" + site)\nelse:\n    print(\"没有循环数据!\")\nprint(\"完成循环!\")\n\n执行脚本后，在循环到 \"Runoob\"时会跳出循环体：\n\n循环数据 Baidu\n循环数据 Google\n菜鸟教程!\n完成循环!\nrange() 函数\n\n如果你需要遍历数字序列，可以使用内置 range() 函数。它会生成数列，例如:\n\n实例\n>>>for i in range(5):\n...     print(i)\n...\n0\n1\n2\n3\n4\n\n你也可以使用 range() 指定区间的值：\n\n实例\n>>>for i in range(5,9) :\n    print(i)\n \n    \n5\n6\n7\n8\n>>>\n\n也可以使 range() 以指定数字开始并指定不同的增量(甚至可以是负数，有时这也叫做'步长'):\n\n实例\n>>>for i in range(0, 10, 3) :\n    print(i)\n \n    \n0\n3\n6\n9\n>>>\n\n负数：\n\n实例\n>>>for i in range(-10, -100, -30) :\n    print(i)\n \n    \n-10\n-40\n-70\n>>>\n\n您可以结合 range() 和 len() 函数以遍历一个序列的索引,如下所示:\n\n实例\n>>>a = ['Google', 'Baidu', 'Runoob', 'Taobao', 'QQ']\n>>> for i in range(len(a)):\n...     print(i, a[i])\n... \n0 Google\n1 Baidu\n2 Runoob\n3 Taobao\n4 QQ\n>>>\n\n还可以使用 range() 函数来创建一个列表：\n\n实例\n>>>list(range(5))\n[0, 1, 2, 3, 4]\n>>>\n\n更多关于 range() 函数用法参考：https://www.runoob.com/python3/python3-func-range.html\n\nbreak 和 continue 语句及循环中的 else 子句\n\nbreak 执行流程图：\n\ncontinue 执行流程图：\n\nwhile 语句代码执行过程：\n\nfor 语句代码执行过程：\n\nbreak 语句可以跳出 for 和 while 的循环体。如果你从 for 或 while 循环中终止，任何对应的循环 else 块将不执行。\n\ncontinue 语句被用来告诉 Python 跳过当前循环块中的剩余语句，然后继续进行下一轮循环。\n\n实例\n\nwhile 中使用 break：\n\n实例\nn = 5\nwhile n > 0:\n    n -= 1\n    if n == 2:\n        break\n    print(n)\nprint('循环结束。')\n\n\n输出结果为：\n\n4\n3\n循环结束。\n\nwhile 中使用 continue：\n\n实例\nn = 5\nwhile n > 0:\n    n -= 1\n    if n == 2:\n        continue\n    print(n)\nprint('循环结束。')\n\n\n输出结果为：\n\n4\n3\n1\n0\n循环结束。\n\n更多实例如下：\n\n实例\n#!/usr/bin/python3\n \nfor letter in 'Runoob':     # 第一个实例\n   if letter == 'b':\n      break\n   print ('当前字母为 :', letter)\n  \nvar = 10                    # 第二个实例\nwhile var > 0:              \n   print ('当前变量值为 :', var)\n   var = var -1\n   if var == 5:\n      break\n \nprint (\"Good bye!\")\n\n执行以上脚本输出结果为：\n\n当前字母为 : R\n当前字母为 : u\n当前字母为 : n\n当前字母为 : o\n当前字母为 : o\n当前变量值为 : 10\n当前变量值为 : 9\n当前变量值为 : 8\n当前变量值为 : 7\n当前变量值为 : 6\nGood bye!\n\n以下实例循环字符串 Runoob，碰到字母 o 跳过输出：\n\n实例\n#!/usr/bin/python3\n \nfor letter in 'Runoob':     # 第一个实例\n   if letter == 'o':        # 字母为 o 时跳过输出\n      continue\n   print ('当前字母 :', letter)\n \nvar = 10                    # 第二个实例\nwhile var > 0:              \n   var = var -1\n   if var == 5:             # 变量为 5 时跳过输出\n      continue\n   print ('当前变量值 :', var)\nprint (\"Good bye!\")\n\n执行以上脚本输出结果为：\n\n当前字母 : R\n当前字母 : u\n当前字母 : n\n当前字母 : b\n当前变量值 : 9\n当前变量值 : 8\n当前变量值 : 7\n当前变量值 : 6\n当前变量值 : 4\n当前变量值 : 3\n当前变量值 : 2\n当前变量值 : 1\n当前变量值 : 0\nGood bye!\n\n循环语句可以有 else 子句，它在穷尽列表(以for循环)或条件变为 false (以while循环)导致循环终止时被执行，但循环被 break 终止时不执行。\n\n如下实例用于查询质数的循环例子:\n\n实例\n#!/usr/bin/python3\n \nfor n in range(2, 10):\n    for x in range(2, n):\n        if n % x == 0:\n            print(n, '等于', x, '*', n//x)\n            break\n    else:\n        # 循环中没有找到元素\n        print(n, ' 是质数')\n\n执行以上脚本输出结果为：\n\n2  是质数\n3  是质数\n4 等于 2 * 2\n5  是质数\n6 等于 2 * 3\n7  是质数\n8 等于 2 * 4\n9 等于 3 * 3\npass 语句\n\nPython pass是空语句，是为了保持程序结构的完整性。\n\npass 不做任何事情，一般用做占位语句，如下实例\n\n实例\n>>>while True:\n...     pass  # 等待键盘中断 (Ctrl+C)\n\n最小的类:\n\n实例\n>>>class MyEmptyClass:\n...     pass\n\n以下实例在字母为 o 时 执行 pass 语句块:\n\n实例\n#!/usr/bin/python3\n \nfor letter in 'Runoob': \n   if letter == 'o':\n      pass\n      print ('执行 pass 块')\n   print ('当前字母 :', letter)\n \nprint (\"Good bye!\")\n\n执行以上脚本输出结果为：\n\n当前字母 : R\n当前字母 : u\n当前字母 : n\n执行 pass 块\n当前字母 : o\n执行 pass 块\n当前字母 : o\n当前字母 : b\nGood bye!\n\n课后练习\n\n Python3 条件控制\nPython3 编程第一步 \n17 篇笔记\n 写笔记\n 分类导航\nHTML / CSS\nJavaScript\n服务端\n数据库\n数据分析\n移动端\nXML 教程\nASP.NET\nWeb Service\n开发工具\n网站建设\n\n\nAdvertisement\n反馈/建议\n反馈/建议\n在线实例\n·HTML 实例\n·CSS 实例\n·JavaScript 实例\n·Ajax 实例\n·jQuery 实例\n·XML 实例\n·Java 实例\n字符集&工具\n· HTML 字符集设置\n· HTML ASCII 字符集\n· JS 混淆/加密\n· PNG/JPEG 图片压缩\n· HTML 拾色器\n· JSON 格式化工具\n· 随机数生成器\n最新更新\n· 正则表达式入门教程\n· Python lambda（...\n· Java 注释\n· Bootstrap5 消息...\n· Python 按字母顺...\n· Python 删除字符...\n· git restore 命令\n站点信息\n· 意见反馈\n· 免责声明\n· 关于我们\n· 文章归档\n关注微信\nCopyright © 2013-2023 菜鸟教程  runoob.com All Rights Reserved. 备案号：闽ICP备15012807号-1\n  \nRUNOOB asks for your consent to use your personal data to:\nperm_identity\nPersonalised advertising and content, advertising and content measurement, audience research and services development\ndevices\nStore and/or access information on a device\nexpand_more\nLearn more\n\nYour personal data will be processed and information from your device (cookies, unique identifiers, and other device data) may be stored by, accessed by and shared with 136 TCF vendor(s) and 66 ad partner(s), or used specifically by this site or app.\n\nSome vendors may process your personal data on the basis of legitimate interest, which you can object to by managing your options below. Look for a link at the bottom of this page or in our privacy policy where you can withdraw consent.\n\nConsent\n\nDo not consent\n\nManage options"
}