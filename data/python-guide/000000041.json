{
	"title": "Python3 JSON 数据解析 | 菜鸟教程",
	"url": "https://www.runoob.com/python3/python3-json.html",
	"html": "菜鸟教程 -- 学的不仅是技术，更是梦想！\n首页 HTML CSS JAVASCRIPT VUE BOOTSTRAP NODEJS PYTHON3 PYTHON2 JAVA C C++ C# GO SQL LINUX JQUERY 本地书签\n Python 3 教程 \nPython3 教程\nPython3 简介\nPython3 环境搭建\nPython3 VScode\nPython3 基础语法\nPython3 基本数据类型\nPython3 数据类型转换\nPython3 解释器\nPython3 注释\nPython3 运算符\nPython3 数字(Number)\nPython3 字符串\nPython3 列表\nPython3 元组\nPython3 字典\nPython3 集合\nPython3 条件控制\nPython3 循环语句\nPython3 编程第一步\nPython3 推导式\nPython3 迭代器与生成器\nPython3 函数\nPython3 lambda\nPython3 数据结构\nPython3 模块\nPython3 输入和输出\nPython3 File\nPython3 OS\nPython3 错误和异常\nPython3 面向对象\nPython3 命名空间/作用域\nPython3 标准库概览\nPython3 实例\nPython 测验\n\n\nPython3 高级教程\nPython3 正则表达式\nPython3 CGI编程\nPython3 MySQL(mysql-connector)\nPython3 MySQL(PyMySQL)\nPython3 网络编程\nPython3 SMTP发送邮件\nPython3 多线程\nPython3 XML 解析\n Python3 JSON\nPython3 日期和时间\nPython3 内置函数\nPython3 MongoDB\nPython3 urllib\nPython uWSGI 安装配置\nPython3 pip\nPython3 operator\nPython math\nPython requests\nPython random\nPython 有用的资源\nPython AI 绘画\nPython statistics\n Python3 XML 解析\nPython3 日期和时间 \nPython3 JSON 数据解析\n\nJSON (JavaScript Object Notation) 是一种轻量级的数据交换格式。\n\n如果你还不了解 JSON，可以先阅读我们的 JSON 教程。\n\nPython3 中可以使用 json 模块来对 JSON 数据进行编解码，它包含了两个函数：\n\njson.dumps(): 对数据进行编码。\njson.loads(): 对数据进行解码。\n\n在 json 的编解码过程中，Python 的原始类型与 json 类型会相互转换，具体的转化对照如下：\n\nPython 编码为 JSON 类型转换对应表：\nPython\tJSON\ndict\tobject\nlist, tuple\tarray\nstr\tstring\nint, float, int- & float-derived Enums\tnumber\nTrue\ttrue\nFalse\tfalse\nNone\tnull\nJSON 解码为 Python 类型转换对应表：\nJSON\tPython\nobject\tdict\narray\tlist\nstring\tstr\nnumber (int)\tint\nnumber (real)\tfloat\ntrue\tTrue\nfalse\tFalse\nnull\tNone\njson.dumps 与 json.loads 实例\n\n以下实例演示了 Python 数据结构转换为JSON：\n\n实例(Python 3.0+)\n#!/usr/bin/python3\n \nimport json\n \n# Python 字典类型转换为 JSON 对象\ndata = {\n    'no' : 1,\n    'name' : 'Runoob',\n    'url' : 'http://www.runoob.com'\n}\n \njson_str = json.dumps(data)\nprint (\"Python 原始数据：\", repr(data))\nprint (\"JSON 对象：\", json_str)\n\n执行以上代码输出结果为：\n\nPython 原始数据： {'url': 'http://www.runoob.com', 'no': 1, 'name': 'Runoob'}\nJSON 对象： {\"url\": \"http://www.runoob.com\", \"no\": 1, \"name\": \"Runoob\"}\n\n通过输出的结果可以看出，简单类型通过编码后跟其原始的repr()输出结果非常相似。\n\n接着以上实例，我们可以将一个JSON编码的字符串转换回一个Python数据结构：\n\n实例(Python 3.0+)\n#!/usr/bin/python3\n \nimport json\n \n# Python 字典类型转换为 JSON 对象\ndata1 = {\n    'no' : 1,\n    'name' : 'Runoob',\n    'url' : 'http://www.runoob.com'\n}\n \njson_str = json.dumps(data1)\nprint (\"Python 原始数据：\", repr(data1))\nprint (\"JSON 对象：\", json_str)\n \n# 将 JSON 对象转换为 Python 字典\ndata2 = json.loads(json_str)\nprint (\"data2['name']: \", data2['name'])\nprint (\"data2['url']: \", data2['url'])\n\n执行以上代码输出结果为：\n\nPython 原始数据： {'name': 'Runoob', 'no': 1, 'url': 'http://www.runoob.com'}\nJSON 对象： {\"name\": \"Runoob\", \"no\": 1, \"url\": \"http://www.runoob.com\"}\ndata2['name']:  Runoob\ndata2['url']:  http://www.runoob.com\n\n如果你要处理的是文件而不是字符串，你可以使用 json.dump() 和 json.load() 来编码和解码JSON数据。例如：\n\n实例(Python 3.0+)\n# 写入 JSON 数据\nwith open('data.json', 'w') as f:\n    json.dump(data, f)\n \n# 读取数据\nwith open('data.json', 'r') as f:\n    data = json.load(f)\n\n更多资料请参考：https://docs.python.org/3/library/json.html\n\n Python3 XML 解析\nPython3 日期和时间 \n 点我分享笔记\n 分类导航\nHTML / CSS\nJavaScript\n服务端\n数据库\n数据分析\n移动端\nXML 教程\nASP.NET\nWeb Service\n开发工具\n网站建设\n\n\nAdvertisement\n反馈/建议\n反馈/建议\n在线实例\n·HTML 实例\n·CSS 实例\n·JavaScript 实例\n·Ajax 实例\n·jQuery 实例\n·XML 实例\n·Java 实例\n字符集&工具\n· HTML 字符集设置\n· HTML ASCII 字符集\n· JS 混淆/加密\n· PNG/JPEG 图片压缩\n· HTML 拾色器\n· JSON 格式化工具\n· 随机数生成器\n最新更新\n· 正则表达式入门教程\n· Python lambda（...\n· Java 注释\n· Bootstrap5 消息...\n· Python 按字母顺...\n· Python 删除字符...\n· git restore 命令\n站点信息\n· 意见反馈\n· 免责声明\n· 关于我们\n· 文章归档\n关注微信\nCopyright © 2013-2023 菜鸟教程  runoob.com All Rights Reserved. 备案号：闽ICP备15012807号-1\n  \nRUNOOB asks for your consent to use your personal data to:\nperm_identity\nPersonalised advertising and content, advertising and content measurement, audience research and services development\ndevices\nStore and/or access information on a device\nexpand_more\nLearn more\n\nYour personal data will be processed and information from your device (cookies, unique identifiers, and other device data) may be stored by, accessed by and shared with 136 TCF vendor(s) and 66 ad partner(s), or used specifically by this site or app.\n\nSome vendors may process your personal data on the basis of legitimate interest, which you can object to by managing your options below. Look for a link at the bottom of this page or in our privacy policy where you can withdraw consent.\n\nConsent\n\nDo not consent\n\nManage options"
}