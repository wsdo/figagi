{
	"title": "Python3 OS 文件/目录方法 | 菜鸟教程",
	"url": "https://www.runoob.com/python3/python3-os-file-methods.html",
	"html": "菜鸟教程 -- 学的不仅是技术，更是梦想！\n首页 HTML CSS JAVASCRIPT VUE BOOTSTRAP NODEJS PYTHON3 PYTHON2 JAVA C C++ C# GO SQL LINUX JQUERY 本地书签\n Python 3 教程 \nPython3 教程\nPython3 简介\nPython3 环境搭建\nPython3 VScode\nPython3 基础语法\nPython3 基本数据类型\nPython3 数据类型转换\nPython3 解释器\nPython3 注释\nPython3 运算符\nPython3 数字(Number)\nPython3 字符串\nPython3 列表\nPython3 元组\nPython3 字典\nPython3 集合\nPython3 条件控制\nPython3 循环语句\nPython3 编程第一步\nPython3 推导式\nPython3 迭代器与生成器\nPython3 函数\nPython3 lambda\nPython3 数据结构\nPython3 模块\nPython3 输入和输出\nPython3 File\n Python3 OS\nPython3 错误和异常\nPython3 面向对象\nPython3 命名空间/作用域\nPython3 标准库概览\nPython3 实例\nPython 测验\n\n\nPython3 高级教程\nPython3 正则表达式\nPython3 CGI编程\nPython3 MySQL(mysql-connector)\nPython3 MySQL(PyMySQL)\nPython3 网络编程\nPython3 SMTP发送邮件\nPython3 多线程\nPython3 XML 解析\nPython3 JSON\nPython3 日期和时间\nPython3 内置函数\nPython3 MongoDB\nPython3 urllib\nPython uWSGI 安装配置\nPython3 pip\nPython3 operator\nPython math\nPython requests\nPython random\nPython 有用的资源\nPython AI 绘画\nPython statistics\n Python3 File\nPython3 错误和异常 \nPython3 OS 文件/目录方法\n\nos 模块提供了非常丰富的方法用来处理文件和目录。常用的方法如下表所示：\n\n序号\t方法及描述\n1\t\n\nos.access(path, mode)\n\n\n检验权限模式\n2\t\n\nos.chdir(path)\n\n\n改变当前工作目录\n3\t\n\nos.chflags(path, flags)\n\n\n设置路径的标记为数字标记。\n4\t\n\nos.chmod(path, mode)\n\n\n更改权限\n5\t\n\nos.chown(path, uid, gid)\n\n\n更改文件所有者\n6\t\n\nos.chroot(path)\n\n\n改变当前进程的根目录\n7\t\n\nos.close(fd)\n\n\n关闭文件描述符 fd\n8\t\n\nos.closerange(fd_low, fd_high)\n\n\n关闭所有文件描述符，从 fd_low (包含) 到 fd_high (不包含), 错误会忽略\n9\t\n\nos.dup(fd)\n\n\n复制文件描述符 fd\n10\t\n\nos.dup2(fd, fd2)\n\n\n将一个文件描述符 fd 复制到另一个 fd2\n11\t\n\nos.fchdir(fd)\n\n\n通过文件描述符改变当前工作目录\n12\t\n\nos.fchmod(fd, mode)\n\n\n改变一个文件的访问权限，该文件由参数fd指定，参数mode是Unix下的文件访问权限。\n13\t\n\nos.fchown(fd, uid, gid)\n\n\n修改一个文件的所有权，这个函数修改一个文件的用户ID和用户组ID，该文件由文件描述符fd指定。\n14\t\n\nos.fdatasync(fd)\n\n\n强制将文件写入磁盘，该文件由文件描述符fd指定，但是不强制更新文件的状态信息。\n15\t\n\nos.fdopen(fd[, mode[, bufsize]])\n\n\n通过文件描述符 fd 创建一个文件对象，并返回这个文件对象\n16\t\n\nos.fpathconf(fd, name)\n\n\n返回一个打开的文件的系统配置信息。name为检索的系统配置的值，它也许是一个定义系统值的字符串，这些名字在很多标准中指定（POSIX.1, Unix 95, Unix 98, 和其它）。\n17\t\n\nos.fstat(fd)\n\n\n返回文件描述符fd的状态，像stat()。\n18\t\n\nos.fstatvfs(fd)\n\n\n返回包含文件描述符fd的文件的文件系统的信息，Python 3.3 相等于 statvfs()。\n19\t\n\nos.fsync(fd)\n\n\n强制将文件描述符为fd的文件写入硬盘。\n20\t\n\nos.ftruncate(fd, length)\n\n\n裁剪文件描述符fd对应的文件, 所以它最大不能超过文件大小。\n21\t\n\nos.getcwd()\n\n\n返回当前工作目录\n22\t\n\nos.getcwdb()\n\n\n返回一个当前工作目录的Unicode对象\n23\t\n\nos.isatty(fd)\n\n\n如果文件描述符fd是打开的，同时与tty(-like)设备相连，则返回true, 否则False。\n24\t\n\nos.lchflags(path, flags)\n\n\n设置路径的标记为数字标记，类似 chflags()，但是没有软链接\n25\t\n\nos.lchmod(path, mode)\n\n\n修改连接文件权限\n26\t\n\nos.lchown(path, uid, gid)\n\n\n更改文件所有者，类似 chown，但是不追踪链接。\n27\t\n\nos.link(src, dst)\n\n\n创建硬链接，名为参数 dst，指向参数 src\n28\t\n\nos.listdir(path)\n\n\n返回path指定的文件夹包含的文件或文件夹的名字的列表。\n29\t\n\nos.lseek(fd, pos, how)\n\n\n设置文件描述符 fd当前位置为pos, how方式修改: SEEK_SET 或者 0 设置从文件开始的计算的pos; SEEK_CUR或者 1 则从当前位置计算; os.SEEK_END或者2则从文件尾部开始. 在unix，Windows中有效\n30\t\n\nos.lstat(path)\n\n\n像stat(),但是没有软链接\n31\t\n\nos.major(device)\n\n\n从原始的设备号中提取设备major号码 (使用stat中的st_dev或者st_rdev field)。\n32\t\n\nos.makedev(major, minor)\n\n\n以major和minor设备号组成一个原始设备号\n33\t\n\nos.makedirs(path[, mode])\n\n\n递归文件夹创建函数。像mkdir(), 但创建的所有intermediate-level文件夹需要包含子文件夹。\n34\t\n\nos.minor(device)\n\n\n从原始的设备号中提取设备minor号码 (使用stat中的st_dev或者st_rdev field )。\n35\t\n\nos.mkdir(path[, mode])\n\n\n以数字mode的mode创建一个名为path的文件夹.默认的 mode 是 0777 (八进制)。\n36\t\n\nos.mkfifo(path[, mode])\n\n\n创建命名管道，mode 为数字，默认为 0666 (八进制)\n37\t\n\nos.mknod(filename[, mode=0600, device])\n创建一个名为filename文件系统节点（文件，设备特别文件或者命名pipe）。\n\n\n38\t\n\nos.open(file, flags[, mode])\n\n\n打开一个文件，并且设置需要的打开选项，mode参数是可选的\n39\t\n\nos.openpty()\n\n\n打开一个新的伪终端对。返回 pty 和 tty的文件描述符。\n40\t\n\nos.pathconf(path, name)\n\n\n返回相关文件的系统配置信息。\n41\t\n\nos.pipe()\n\n\n创建一个管道. 返回一对文件描述符(r, w) 分别为读和写\n42\t\n\nos.popen(command[, mode[, bufsize]])\n\n\n从一个 command 打开一个管道\n43\t\n\nos.read(fd, n)\n\n\n从文件描述符 fd 中读取最多 n 个字节，返回包含读取字节的字符串，文件描述符 fd对应文件已达到结尾, 返回一个空字符串。\n44\t\n\nos.readlink(path)\n\n\n返回软链接所指向的文件\n45\t\n\nos.remove(path)\n\n\n删除路径为path的文件。如果path 是一个文件夹，将抛出OSError; 查看下面的rmdir()删除一个 directory。\n46\t\n\nos.removedirs(path)\n\n\n递归删除目录。\n47\t\n\nos.rename(src, dst)\n\n\n重命名文件或目录，从 src 到 dst\n48\t\n\nos.renames(old, new)\n\n\n递归地对目录进行更名，也可以对文件进行更名。\n49\t\n\nos.rmdir(path)\n\n\n删除path指定的空目录，如果目录非空，则抛出一个OSError异常。\n50\t\n\nos.stat(path)\n\n\n获取path指定的路径的信息，功能等同于C API中的stat()系统调用。\n51\t\n\nos.stat_float_times([newvalue])\n决定stat_result是否以float对象显示时间戳\n\n\n52\t\n\nos.statvfs(path)\n\n\n获取指定路径的文件系统统计信息\n53\t\n\nos.symlink(src, dst)\n\n\n创建一个软链接\n54\t\n\nos.tcgetpgrp(fd)\n\n\n返回与终端fd（一个由os.open()返回的打开的文件描述符）关联的进程组\n55\t\n\nos.tcsetpgrp(fd, pg)\n\n\n设置与终端fd（一个由os.open()返回的打开的文件描述符）关联的进程组为pg。\n56\t\n\nos.tempnam([dir[, prefix]])\n\n\nPython3 中已删除。返回唯一的路径名用于创建临时文件。\n57\t\n\nos.tmpfile()\n\n\nPython3 中已删除。返回一个打开的模式为(w+b)的文件对象 .这文件对象没有文件夹入口，没有文件描述符，将会自动删除。\n58\t\n\nos.tmpnam()\n\n\nPython3 中已删除。为创建一个临时文件返回一个唯一的路径\n59\t\n\nos.ttyname(fd)\n\n\n返回一个字符串，它表示与文件描述符fd 关联的终端设备。如果fd 没有与终端设备关联，则引发一个异常。\n60\t\n\nos.unlink(path)\n\n\n删除文件路径\n61\t\n\nos.utime(path, times)\n\n\n返回指定的path文件的访问和修改的时间。\n62\t\n\nos.walk(top[, topdown=True[, onerror=None[, followlinks=False]]])\n\n\n输出在文件夹中的文件名通过在树中游走，向上或者向下。\n63\t\n\nos.write(fd, str)\n\n\n写入字符串到文件描述符 fd中. 返回实际写入的字符串长度\n64\t\n\nos.path 模块\n\n\n获取文件的属性信息。\n65\t\n\nos.pardir()\n\n\n获取当前目录的父目录，以字符串形式显示目录名。\n66\t\n\nos.replace()\n\n\n重命名文件或目录。\n Python3 File\nPython3 错误和异常 \n4 篇笔记\n 写笔记\n 分类导航\nHTML / CSS\nJavaScript\n服务端\n数据库\n数据分析\n移动端\nXML 教程\nASP.NET\nWeb Service\n开发工具\n网站建设\n\n\nAdvertisement\n反馈/建议\n反馈/建议\n在线实例\n·HTML 实例\n·CSS 实例\n·JavaScript 实例\n·Ajax 实例\n·jQuery 实例\n·XML 实例\n·Java 实例\n字符集&工具\n· HTML 字符集设置\n· HTML ASCII 字符集\n· JS 混淆/加密\n· PNG/JPEG 图片压缩\n· HTML 拾色器\n· JSON 格式化工具\n· 随机数生成器\n最新更新\n· 正则表达式入门教程\n· Python lambda（...\n· Java 注释\n· Bootstrap5 消息...\n· Python 按字母顺...\n· Python 删除字符...\n· git restore 命令\n站点信息\n· 意见反馈\n· 免责声明\n· 关于我们\n· 文章归档\n关注微信\nCopyright © 2013-2023 菜鸟教程  runoob.com All Rights Reserved. 备案号：闽ICP备15012807号-1\n  \nRUNOOB asks for your consent to use your personal data to:\nperm_identity\nPersonalised advertising and content, advertising and content measurement, audience research and services development\ndevices\nStore and/or access information on a device\nexpand_more\nLearn more\n\nYour personal data will be processed and information from your device (cookies, unique identifiers, and other device data) may be stored by, accessed by and shared with 136 TCF vendor(s) and 66 ad partner(s), or used specifically by this site or app.\n\nSome vendors may process your personal data on the basis of legitimate interest, which you can object to by managing your options below. Look for a link at the bottom of this page or in our privacy policy where you can withdraw consent.\n\nConsent\n\nDo not consent\n\nManage options"
}