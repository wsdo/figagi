{
	"title": "Python random 模块 | 菜鸟教程",
	"url": "https://www.runoob.com/python3/python-random.html",
	"html": "菜鸟教程 -- 学的不仅是技术，更是梦想！\n首页 HTML CSS JAVASCRIPT VUE BOOTSTRAP NODEJS PYTHON3 PYTHON2 JAVA C C++ C# GO SQL LINUX JQUERY 本地书签\n Python 3 教程 \nPython3 教程\nPython3 简介\nPython3 环境搭建\nPython3 VScode\nPython3 基础语法\nPython3 基本数据类型\nPython3 数据类型转换\nPython3 解释器\nPython3 注释\nPython3 运算符\nPython3 数字(Number)\nPython3 字符串\nPython3 列表\nPython3 元组\nPython3 字典\nPython3 集合\nPython3 条件控制\nPython3 循环语句\nPython3 编程第一步\nPython3 推导式\nPython3 迭代器与生成器\nPython3 函数\nPython3 lambda\nPython3 数据结构\nPython3 模块\nPython3 输入和输出\nPython3 File\nPython3 OS\nPython3 错误和异常\nPython3 面向对象\nPython3 命名空间/作用域\nPython3 标准库概览\nPython3 实例\nPython 测验\n\n\nPython3 高级教程\nPython3 正则表达式\nPython3 CGI编程\nPython3 MySQL(mysql-connector)\nPython3 MySQL(PyMySQL)\nPython3 网络编程\nPython3 SMTP发送邮件\nPython3 多线程\nPython3 XML 解析\nPython3 JSON\nPython3 日期和时间\nPython3 内置函数\nPython3 MongoDB\nPython3 urllib\nPython uWSGI 安装配置\nPython3 pip\nPython3 operator\nPython math\nPython requests\n Python random\nPython 有用的资源\nPython AI 绘画\nPython statistics\n Python requests 模块\nPython 有用的资源 \nPython random 模块\n\nPython random 模块主要用于生成随机数。\n\nrandom 模块实现了各种分布的伪随机数生成器。\n\n要使用 random 函数必须先导入：\n\nimport random\n\n查看 random 模块中的内容:\n\n实例\n>>> import random\n>>> dir(random)\n['BPF', 'LOG4', 'NV_MAGICCONST', 'RECIP_BPF', 'Random', 'SG_MAGICCONST', 'SystemRandom', 'TWOPI', '_Sequence', '_Set', '__all__', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', '_accumulate', '_acos', '_bisect', '_ceil', '_cos', '_e', '_exp', '_floor', '_inst', '_log', '_os', '_pi', '_random', '_repeat', '_sha512', '_sin', '_sqrt', '_test', '_test_generator', '_urandom', '_warn', 'betavariate', 'choice', 'choices', 'expovariate', 'gammavariate', 'gauss', 'getrandbits', 'getstate', 'lognormvariate', 'normalvariate', 'paretovariate', 'randbytes', 'randint', 'random', 'randrange', 'sample', 'seed', 'setstate', 'shuffle', 'triangular', 'uniform', 'vonmisesvariate', 'weibullvariate']\n\n\n接下来我们使用 random() 方法返回一个随机数，它在半开放区间 [0,1) 范围内，包含 0 但不包含 1。\n\n实例\n# 导入 random 包\nimport random\n\n# 生成随机数\nprint(random.random())\n\n\n以上实例输出结果为：\n\n0.4784904215869241\n\nseed() 方法改变随机数生成器的种子，可以在调用其他随机模块函数之前调用此函数。\n\n实例\n#!/usr/bin/python3\nimport random\n\nrandom.seed()\nprint (\"使用默认种子生成随机数：\", random.random())\nprint (\"使用默认种子生成随机数：\", random.random())\n\nrandom.seed(10)\nprint (\"使用整数 10 种子生成随机数：\", random.random())\nrandom.seed(10)\nprint (\"使用整数 10 种子生成随机数：\", random.random())\n\nrandom.seed(\"hello\",2)\nprint (\"使用字符串种子生成随机数：\", random.random())\n\n\n以上实例运行后输出结果为：\n\n使用默认种子生成随机数： 0.7908102856355441\n使用默认种子生成随机数： 0.81038961519195\n使用整数 10 种子生成随机数： 0.5714025946899135\n使用整数 10 种子生成随机数： 0.5714025946899135\n使用字符串种子生成随机数： 0.3537754404730722\nrandom 模块方法\n\nrandom 模块方法如下：\n\n方法\t描述\nseed()\t初始化随机数生成器\ngetstate()\t返回捕获生成器当前内部状态的对象。\nsetstate()\tstate 应该是从之前调用 getstate() 获得的，并且 setstate() 将生成器的内部状态恢复到 getstate() 被调用时的状态。\ngetrandbits(k)\t返回具有 k 个随机比特位的非负 Python 整数。 此方法随 MersenneTwister 生成器一起提供，其他一些生成器也可能将其作为 API 的可选部分提供。 在可能的情况下，getrandbits() 会启用 randrange() 来处理任意大的区间。\nrandrange()\t从 range(start, stop, step) 返回一个随机选择的元素。\nrandint(a, b)\t返回随机整数 N 满足 a <= N <= b。\nchoice(seq)\t从非空序列 seq 返回一个随机元素。 如果 seq 为空，则引发 IndexError。\nchoices(population, weights=None, *, cum_weights=None, k=1)\t从 population 中选择替换，返回大小为 k 的元素列表。 如果 population 为空，则引发 IndexError。\nshuffle(x[, random])\t将序列 x 随机打乱位置。\nsample(population, k, *, counts=None)\t返回从总体序列或集合中选择的唯一元素的 k 长度列表。 用于无重复的随机抽样。\nrandom()\t返回 [0.0, 1.0) 范围内的下一个随机浮点数。\nuniform()\t返回一个随机浮点数 N ，当 a <= b 时 a <= N <= b ，当 b < a 时 b <= N <= a 。\ntriangular(low, high, mode)\t返回一个随机浮点数 N ，使得 low <= N <= high 并在这些边界之间使用指定的 mode 。 low 和 high 边界默认为零和一。 mode 参数默认为边界之间的中点，给出对称分布。\nbetavariate(alpha, beta)\tBeta 分布。 参数的条件是 alpha > 0 和 beta > 0。 返回值的范围介于 0 和 1 之间。\nexpovariate(lambd)\t指数分布。 lambd 是 1.0 除以所需的平均值，它应该是非零的。\ngammavariate()\tGamma 分布（ 不是伽马函数） 参数的条件是 alpha > 0 和 beta > 0。\ngauss(mu, sigma)\t正态分布，也称高斯分布。 mu 为平均值，而 sigma 为标准差。 此函数要稍快于下面所定义的 normalvariate() 函数。\nlognormvariate(mu, sigma)\t对数正态分布。 如果你采用这个分布的自然对数，你将得到一个正态分布，平均值为 mu 和标准差为 sigma 。 mu 可以是任何值，sigma 必须大于零。\nnormalvariate(mu, sigma)\t正态分布。 mu 是平均值，sigma 是标准差。\nvonmisesvariate(mu, kappa)\t冯·米塞斯分布。 mu 是平均角度，以弧度表示，介于0和 2*pi 之间，kappa 是浓度参数，必须大于或等于零。 如果 kappa 等于零，则该分布在 0 到 2*pi 的范围内减小到均匀的随机角度。\nparetovariate(alpha)\t帕累托分布。 alpha 是形状参数。\nweibullvariate(alpha, beta)\t威布尔分布。 alpha 是比例参数，beta 是形状参数。\n Python requests 模块\nPython 有用的资源 \n 点我分享笔记\n 分类导航\nHTML / CSS\nJavaScript\n服务端\n数据库\n数据分析\n移动端\nXML 教程\nASP.NET\nWeb Service\n开发工具\n网站建设\n\n\nAdvertisement\n反馈/建议\n反馈/建议\n在线实例\n·HTML 实例\n·CSS 实例\n·JavaScript 实例\n·Ajax 实例\n·jQuery 实例\n·XML 实例\n·Java 实例\n字符集&工具\n· HTML 字符集设置\n· HTML ASCII 字符集\n· JS 混淆/加密\n· PNG/JPEG 图片压缩\n· HTML 拾色器\n· JSON 格式化工具\n· 随机数生成器\n最新更新\n· 正则表达式入门教程\n· Python lambda（...\n· Java 注释\n· Bootstrap5 消息...\n· Python 按字母顺...\n· Python 删除字符...\n· git restore 命令\n站点信息\n· 意见反馈\n· 免责声明\n· 关于我们\n· 文章归档\n关注微信\nCopyright © 2013-2023 菜鸟教程  runoob.com All Rights Reserved. 备案号：闽ICP备15012807号-1\n  \nRUNOOB asks for your consent to use your personal data to:\nperm_identity\nPersonalised advertising and content, advertising and content measurement, audience research and services development\ndevices\nStore and/or access information on a device\nexpand_more\nLearn more\n\nYour personal data will be processed and information from your device (cookies, unique identifiers, and other device data) may be stored by, accessed by and shared with 136 TCF vendor(s) and 66 ad partner(s), or used specifically by this site or app.\n\nSome vendors may process your personal data on the basis of legitimate interest, which you can object to by managing your options below. Look for a link at the bottom of this page or in our privacy policy where you can withdraw consent.\n\nConsent\n\nDo not consent\n\nManage options"
}