{
	"title": "Python3 数字(Number) | 菜鸟教程",
	"url": "https://www.runoob.com/python3/python3-number.html",
	"html": "菜鸟教程 -- 学的不仅是技术，更是梦想！\n首页 HTML CSS JAVASCRIPT VUE BOOTSTRAP NODEJS PYTHON3 PYTHON2 JAVA C C++ C# GO SQL LINUX JQUERY 本地书签\n Python 3 教程 \nPython3 教程\nPython3 简介\nPython3 环境搭建\nPython3 VScode\nPython3 基础语法\nPython3 基本数据类型\nPython3 数据类型转换\nPython3 解释器\nPython3 注释\nPython3 运算符\n Python3 数字(Number)\nPython3 字符串\nPython3 列表\nPython3 元组\nPython3 字典\nPython3 集合\nPython3 条件控制\nPython3 循环语句\nPython3 编程第一步\nPython3 推导式\nPython3 迭代器与生成器\nPython3 函数\nPython3 lambda\nPython3 数据结构\nPython3 模块\nPython3 输入和输出\nPython3 File\nPython3 OS\nPython3 错误和异常\nPython3 面向对象\nPython3 命名空间/作用域\nPython3 标准库概览\nPython3 实例\nPython 测验\n\n\nPython3 高级教程\nPython3 正则表达式\nPython3 CGI编程\nPython3 MySQL(mysql-connector)\nPython3 MySQL(PyMySQL)\nPython3 网络编程\nPython3 SMTP发送邮件\nPython3 多线程\nPython3 XML 解析\nPython3 JSON\nPython3 日期和时间\nPython3 内置函数\nPython3 MongoDB\nPython3 urllib\nPython uWSGI 安装配置\nPython3 pip\nPython3 operator\nPython math\nPython requests\nPython random\nPython 有用的资源\nPython AI 绘画\nPython statistics\n Python3 运算符\nPython3 字符串 \nPython3 数字(Number)\n\nPython 数字数据类型用于存储数值。\n\n数据类型是不允许改变的，这就意味着如果改变数字数据类型的值，将重新分配内存空间。\n\n以下实例在变量赋值时 Number 对象将被创建：\n\nvar1 = 1\nvar2 = 10\n\n您也可以使用del语句删除一些数字对象的引用。\n\ndel语句的语法是：\n\ndel var1[,var2[,var3[....,varN]]]\n\n您可以通过使用del语句删除单个或多个对象的引用，例如：\n\ndel var\ndel var_a, var_b\n\nPython 支持三种不同的数值类型：\n\n整型(int) - 通常被称为是整型或整数，是正或负整数，不带小数点。Python3 整型是没有限制大小的，可以当作 Long 类型使用，所以 Python3 没有 Python2 的 Long 类型。布尔(bool)是整型的子类型。\n\n浮点型(float) - 浮点型由整数部分与小数部分组成，浮点型也可以使用科学计数法表示（2.5e2 = 2.5 x 102 = 250）\n\n复数( (complex)) - 复数由实数部分和虚数部分构成，可以用a + bj,或者complex(a,b)表示， 复数的实部a和虚部b都是浮点型。\n\n我们可以使用十六进制和八进制来代表整数：\n\n>>> number = 0xA0F # 十六进制\n>>> number\n2575\n\n>>> number=0o37 # 八进制\n>>> number\n31\nint\tfloat\tcomplex\n10\t0.0\t3.14j\n100\t15.20\t45.j\n-786\t-21.9\t9.322e-36j\n080\t32.3e+18\t.876j\n-0490\t-90.\t-.6545+0J\n-0x260\t-32.54e100\t3e+26J\n0x69\t70.2E-12\t4.53e-7j\nPython支持复数，复数由实数部分和虚数部分构成，可以用a + bj,或者complex(a,b)表示， 复数的实部a和虚部b都是浮点型。\n\n\nPython 数字类型转换\n\n有时候，我们需要对数据内置的类型进行转换，数据类型的转换，你只需要将数据类型作为函数名即可。\n\nint(x) 将x转换为一个整数。\n\nfloat(x) 将x转换到一个浮点数。\n\ncomplex(x) 将x转换到一个复数，实数部分为 x，虚数部分为 0。\n\ncomplex(x, y) 将 x 和 y 转换到一个复数，实数部分为 x，虚数部分为 y。x 和 y 是数字表达式。\n\n以下实例将浮点数变量 a 转换为整数：\n\n>>> a = 1.0\n>>> int(a)\n1\nPython 数字运算\n\nPython 解释器可以作为一个简单的计算器，您可以在解释器里输入一个表达式，它将输出表达式的值。\n\n表达式的语法很直白： +, -, * 和 /, 和其它语言（如Pascal或C）里一样。例如：\n\n>>> 2 + 2\n4\n>>> 50 - 5*6\n20\n>>> (50 - 5*6) / 4\n5.0\n>>> 8 / 5  # 总是返回一个浮点数\n1.6\n\n注意：在不同的机器上浮点运算的结果可能会不一样。\n\n在整数除法中，除法 / 总是返回一个浮点数，如果只想得到整数的结果，丢弃可能的分数部分，可以使用运算符 // ：\n\n>>> 17 / 3  # 整数除法返回浮点型\n5.666666666666667\n>>>\n>>> 17 // 3  # 整数除法返回向下取整后的结果\n5\n>>> 17 % 3  # ％操作符返回除法的余数\n2\n>>> 5 * 3 + 2 \n17\n\n注意：// 得到的并不一定是整数类型的数，它与分母分子的数据类型有关系。\n\n>>> 7//2\n3\n>>> 7.0//2\n3.0\n>>> 7//2.0\n3.0\n>>> \n\n等号 = 用于给变量赋值。赋值之后，除了下一个提示符，解释器不会显示任何结果。\n\n>>> width = 20\n>>> height = 5*9\n>>> width * height\n900\n\nPython 可以使用 ** 操作来进行幂运算：\n\n>>> 5 ** 2  # 5 的平方\n25\n>>> 2 ** 7  # 2的7次方\n128\n\n变量在使用前必须先\"定义\"（即赋予变量一个值），否则会出现错误：\n\n>>> n   # 尝试访问一个未定义的变量\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'n' is not defined\n\n不同类型的数混合运算时会将整数转换为浮点数：\n\n>>> 3 * 3.75 / 1.5\n7.5\n>>> 7.0 / 2\n3.5\n\n在交互模式中，最后被输出的表达式结果被赋值给变量 _ 。例如：\n\n>>> tax = 12.5 / 100\n>>> price = 100.50\n>>> price * tax\n12.5625\n>>> price + _\n113.0625\n>>> round(_, 2)\n113.06\n\n此处， _ 变量应被用户视为只读变量。\n\n\n\n数学函数\n函数\t返回值 ( 描述 )\nabs(x)\t返回数字的绝对值，如abs(-10) 返回 10\nceil(x)\t返回数字的上入整数，如math.ceil(4.1) 返回 5\n\n\ncmp(x, y)\n\n\t如果 x < y 返回 -1, 如果 x == y 返回 0, 如果 x > y 返回 1。 Python 3 已废弃，使用 (x>y)-(x<y) 替换。\nexp(x)\t返回e的x次幂(ex),如math.exp(1) 返回2.718281828459045\nfabs(x)\t以浮点数形式返回数字的绝对值，如math.fabs(-10) 返回10.0\nfloor(x)\t返回数字的下舍整数，如math.floor(4.9)返回 4\nlog(x)\t如math.log(math.e)返回1.0,math.log(100,10)返回2.0\nlog10(x)\t返回以10为基数的x的对数，如math.log10(100)返回 2.0\nmax(x1, x2,...)\t返回给定参数的最大值，参数可以为序列。\nmin(x1, x2,...)\t返回给定参数的最小值，参数可以为序列。\nmodf(x)\t返回x的整数部分与小数部分，两部分的数值符号与x相同，整数部分以浮点型表示。\npow(x, y)\tx**y 运算后的值。\nround(x [,n])\t\n\n返回浮点数 x 的四舍五入值，如给出 n 值，则代表舍入到小数点后的位数。\n\n其实准确的说是保留值将保留到离上一位更近的一端。\n\n\nsqrt(x)\t返回数字x的平方根。\n\n\n随机数函数\n\n随机数可以用于数学，游戏，安全等领域中，还经常被嵌入到算法中，用以提高算法效率，并提高程序的安全性。\n\nPython包含以下常用随机数函数：\n\n函数\t描述\nchoice(seq)\t从序列的元素中随机挑选一个元素，比如random.choice(range(10))，从0到9中随机挑选一个整数。\nrandrange ([start,] stop [,step])\t从指定范围内，按指定基数递增的集合中获取一个随机数，基数默认值为 1\nrandom()\t随机生成下一个实数，它在[0,1)范围内。\nseed([x])\t改变随机数生成器的种子seed。如果你不了解其原理，你不必特别去设定seed，Python会帮你选择seed。\nshuffle(lst)\t将序列的所有元素随机排序\nuniform(x, y)\t随机生成下一个实数，它在[x,y]范围内。\n\n\n三角函数\n\nPython包括以下三角函数：\n\n函数\t描述\nacos(x)\t返回x的反余弦弧度值。\nasin(x)\t返回x的反正弦弧度值。\natan(x)\t返回x的反正切弧度值。\natan2(y, x)\t返回给定的 X 及 Y 坐标值的反正切值。\ncos(x)\t返回x的弧度的余弦值。\nhypot(x, y)\t返回欧几里德范数 sqrt(x*x + y*y)。\nsin(x)\t返回的x弧度的正弦值。\ntan(x)\t返回x弧度的正切值。\ndegrees(x)\t将弧度转换为角度,如degrees(math.pi/2) ， 返回90.0\nradians(x)\t将角度转换为弧度\n\n\n数学常量\n常量\t描述\npi\t数学常量 pi（圆周率，一般以π来表示）\ne\t数学常量 e，e即自然常数（自然常数）。\n Python3 运算符\nPython3 字符串 \n18 篇笔记\n 写笔记\n 分类导航\nHTML / CSS\nJavaScript\n服务端\n数据库\n数据分析\n移动端\nXML 教程\nASP.NET\nWeb Service\n开发工具\n网站建设\n\n\nAdvertisement\n反馈/建议\n反馈/建议\n在线实例\n·HTML 实例\n·CSS 实例\n·JavaScript 实例\n·Ajax 实例\n·jQuery 实例\n·XML 实例\n·Java 实例\n字符集&工具\n· HTML 字符集设置\n· HTML ASCII 字符集\n· JS 混淆/加密\n· PNG/JPEG 图片压缩\n· HTML 拾色器\n· JSON 格式化工具\n· 随机数生成器\n最新更新\n· 正则表达式入门教程\n· Python lambda（...\n· Java 注释\n· Bootstrap5 消息...\n· Python 按字母顺...\n· Python 删除字符...\n· git restore 命令\n站点信息\n· 意见反馈\n· 免责声明\n· 关于我们\n· 文章归档\n关注微信\nCopyright © 2013-2023 菜鸟教程  runoob.com All Rights Reserved. 备案号：闽ICP备15012807号-1\n  \nRUNOOB asks for your consent to use your personal data to:\nperm_identity\nPersonalised advertising and content, advertising and content measurement, audience research and services development\ndevices\nStore and/or access information on a device\nexpand_more\nLearn more\n\nYour personal data will be processed and information from your device (cookies, unique identifiers, and other device data) may be stored by, accessed by and shared with 136 TCF vendor(s) and 66 ad partner(s), or used specifically by this site or app.\n\nSome vendors may process your personal data on the basis of legitimate interest, which you can object to by managing your options below. Look for a link at the bottom of this page or in our privacy policy where you can withdraw consent.\n\nConsent\n\nDo not consent\n\nManage options"
}