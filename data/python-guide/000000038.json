{
	"title": "Python3 网络编程 | 菜鸟教程",
	"url": "https://www.runoob.com/python3/python3-socket.html",
	"html": "菜鸟教程 -- 学的不仅是技术，更是梦想！\n首页 HTML CSS JAVASCRIPT VUE BOOTSTRAP NODEJS PYTHON3 PYTHON2 JAVA C C++ C# GO SQL LINUX JQUERY 本地书签\n Python 3 教程 \nPython3 教程\nPython3 简介\nPython3 环境搭建\nPython3 VScode\nPython3 基础语法\nPython3 基本数据类型\nPython3 数据类型转换\nPython3 解释器\nPython3 注释\nPython3 运算符\nPython3 数字(Number)\nPython3 字符串\nPython3 列表\nPython3 元组\nPython3 字典\nPython3 集合\nPython3 条件控制\nPython3 循环语句\nPython3 编程第一步\nPython3 推导式\nPython3 迭代器与生成器\nPython3 函数\nPython3 lambda\nPython3 数据结构\nPython3 模块\nPython3 输入和输出\nPython3 File\nPython3 OS\nPython3 错误和异常\nPython3 面向对象\nPython3 命名空间/作用域\nPython3 标准库概览\nPython3 实例\nPython 测验\n\n\nPython3 高级教程\nPython3 正则表达式\nPython3 CGI编程\nPython3 MySQL(mysql-connector)\nPython3 MySQL(PyMySQL)\n Python3 网络编程\nPython3 SMTP发送邮件\nPython3 多线程\nPython3 XML 解析\nPython3 JSON\nPython3 日期和时间\nPython3 内置函数\nPython3 MongoDB\nPython3 urllib\nPython uWSGI 安装配置\nPython3 pip\nPython3 operator\nPython math\nPython requests\nPython random\nPython 有用的资源\nPython AI 绘画\nPython statistics\n Python3 MySQL 数据库连接 – PyMySQL 驱动\nPython3 SMTP发送邮件 \nPython3 网络编程\n\nPython 提供了两个级别访问的网络服务。：\n\n低级别的网络服务支持基本的 Socket，它提供了标准的 BSD Sockets API，可以访问底层操作系统Socket接口的全部方法。\n高级别的网络服务模块 SocketServer， 它提供了服务器中心类，可以简化网络服务器的开发。\n什么是 Socket?\n\nSocket又称\"套接字\"，应用程序通常通过\"套接字\"向网络发出请求或者应答网络请求，使主机间或者一台计算机上的进程间可以通讯。\n\nsocket()函数\n\nPython 中，我们用 socket() 函数来创建套接字，语法格式如下：\n\nsocket.socket([family[, type[, proto]]])\n参数\nfamily: 套接字家族可以是 AF_UNIX 或者 AF_INET\ntype: 套接字类型可以根据是面向连接的还是非连接分为SOCK_STREAM或SOCK_DGRAM\nproto: 一般不填默认为0.\nSocket 对象(内建)方法\n函数\t描述\n服务器端套接字\ns.bind()\t绑定地址（host,port）到套接字， 在AF_INET下,以元组（host,port）的形式表示地址。\ns.listen()\t开始TCP监听。backlog指定在拒绝连接之前，操作系统可以挂起的最大连接数量。该值至少为1，大部分应用程序设为5就可以了。\ns.accept()\t被动接受TCP客户端连接,(阻塞式)等待连接的到来\n客户端套接字\ns.connect()\t主动初始化TCP服务器连接，。一般address的格式为元组（hostname,port），如果连接出错，返回socket.error错误。\ns.connect_ex()\tconnect()函数的扩展版本,出错时返回出错码,而不是抛出异常\n公共用途的套接字函数\ns.recv()\t接收TCP数据，数据以字符串形式返回，bufsize指定要接收的最大数据量。flag提供有关消息的其他信息，通常可以忽略。\ns.send()\t发送TCP数据，将string中的数据发送到连接的套接字。返回值是要发送的字节数量，该数量可能小于string的字节大小。\ns.sendall()\t完整发送TCP数据。将string中的数据发送到连接的套接字，但在返回之前会尝试发送所有数据。成功返回None，失败则抛出异常。\ns.recvfrom()\t接收UDP数据，与recv()类似，但返回值是（data,address）。其中data是包含接收数据的字符串，address是发送数据的套接字地址。\ns.sendto()\t发送UDP数据，将数据发送到套接字，address是形式为（ipaddr，port）的元组，指定远程地址。返回值是发送的字节数。\ns.close()\t关闭套接字\ns.getpeername()\t返回连接套接字的远程地址。返回值通常是元组（ipaddr,port）。\ns.getsockname()\t返回套接字自己的地址。通常是一个元组(ipaddr,port)\ns.setsockopt(level,optname,value)\t设置给定套接字选项的值。\ns.getsockopt(level,optname[.buflen])\t返回套接字选项的值。\ns.settimeout(timeout)\t设置套接字操作的超时期，timeout是一个浮点数，单位是秒。值为None表示没有超时期。一般，超时期应该在刚创建套接字时设置，因为它们可能用于连接的操作（如connect()）\ns.gettimeout()\t返回当前超时期的值，单位是秒，如果没有设置超时期，则返回None。\ns.fileno()\t返回套接字的文件描述符。\ns.setblocking(flag)\t如果 flag 为 False，则将套接字设为非阻塞模式，否则将套接字设为阻塞模式（默认值）。非阻塞模式下，如果调用 recv() 没有发现任何数据，或 send() 调用无法立即发送数据，那么将引起 socket.error 异常。\ns.makefile()\t创建一个与该套接字相关连的文件\n简单实例\n服务端\n\n我们使用 socket 模块的 socket 函数来创建一个 socket 对象。socket 对象可以通过调用其他函数来设置一个 socket 服务。\n\n现在我们可以通过调用 bind(hostname, port) 函数来指定服务的 port(端口)。\n\n接着，我们调用 socket 对象的 accept 方法。该方法等待客户端的连接，并返回 connection 对象，表示已连接到客户端。\n\n完整代码如下：\n\n实例\n#!/usr/bin/python3\n# 文件名：server.py\n\n# 导入 socket、sys 模块\nimport socket\nimport sys\n\n# 创建 socket 对象\nserversocket = socket.socket(\n            socket.AF_INET, socket.SOCK_STREAM)\n\n# 获取本地主机名\nhost = socket.gethostname()\n\nport = 9999\n\n# 绑定端口号\nserversocket.bind((host, port))\n\n# 设置最大连接数，超过后排队\nserversocket.listen(5)\n\nwhile True:\n    # 建立客户端连接\n    clientsocket,addr = serversocket.accept()      \n\n    print(\"连接地址: %s\" % str(addr))\n   \n    msg='欢迎访问菜鸟教程！'+ \"\\r\\n\"\n    clientsocket.send(msg.encode('utf-8'))\n    clientsocket.close()\n\n客户端\n\n接下来我们写一个简单的客户端实例连接到以上创建的服务。端口号为 9999。\n\nsocket.connect(hostname, port ) 方法打开一个 TCP 连接到主机为 hostname 端口为 port 的服务商。连接后我们就可以从服务端获取数据，记住，操作完成后需要关闭连接。\n\n完整代码如下：\n\n实例\n#!/usr/bin/python3\n# 文件名：client.py\n\n# 导入 socket、sys 模块\nimport socket\nimport sys\n\n# 创建 socket 对象\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n\n# 获取本地主机名\nhost = socket.gethostname()\n\n# 设置端口号\nport = 9999\n\n# 连接服务，指定主机和端口\ns.connect((host, port))\n\n# 接收小于 1024 字节的数据\nmsg = s.recv(1024)\n\ns.close()\n\nprint (msg.decode('utf-8'))\n\n\n现在我们打开两个终端，第一个终端执行 server.py 文件：\n\n$ python3 server.py\n\n第二个终端执行 client.py 文件：\n\n$ python3 client.py \n欢迎访问菜鸟教程！\n\n\n这时我们再打开第一个终端，就会看到有以下信息输出：\n\n连接地址： ('192.168.0.118', 33397)\nPython Internet 模块\n\n以下列出了 Python 网络编程的一些重要模块：\n\n协议\t功能用处\t端口号\tPython 模块\nHTTP\t网页访问\t80\thttplib, urllib, xmlrpclib\nNNTP\t阅读和张贴新闻文章，俗称为\"帖子\"\t119\tnntplib\nFTP\t文件传输\t20\tftplib, urllib\nSMTP\t发送邮件\t25\tsmtplib\nPOP3\t接收邮件\t110\tpoplib\nIMAP4\t获取邮件\t143\timaplib\nTelnet\t命令行\t23\ttelnetlib\nGopher\t信息查找\t70\tgopherlib, urllib\n\n更多内容可以参阅官网的 Python Socket Library and Modules。\n\n Python3 MySQL 数据库连接 – PyMySQL 驱动\nPython3 SMTP发送邮件 \n3 篇笔记\n 写笔记\n 分类导航\nHTML / CSS\nJavaScript\n服务端\n数据库\n数据分析\n移动端\nXML 教程\nASP.NET\nWeb Service\n开发工具\n网站建设\n\n\nAdvertisement\n反馈/建议\n反馈/建议\n在线实例\n·HTML 实例\n·CSS 实例\n·JavaScript 实例\n·Ajax 实例\n·jQuery 实例\n·XML 实例\n·Java 实例\n字符集&工具\n· HTML 字符集设置\n· HTML ASCII 字符集\n· JS 混淆/加密\n· PNG/JPEG 图片压缩\n· HTML 拾色器\n· JSON 格式化工具\n· 随机数生成器\n最新更新\n· 正则表达式入门教程\n· Python lambda（...\n· Java 注释\n· Bootstrap5 消息...\n· Python 按字母顺...\n· Python 删除字符...\n· git restore 命令\n站点信息\n· 意见反馈\n· 免责声明\n· 关于我们\n· 文章归档\n关注微信\nCopyright © 2013-2023 菜鸟教程  runoob.com All Rights Reserved. 备案号：闽ICP备15012807号-1\n  \nRUNOOB asks for your consent to use your personal data to:\nperm_identity\nPersonalised advertising and content, advertising and content measurement, audience research and services development\ndevices\nStore and/or access information on a device\nexpand_more\nLearn more\n\nYour personal data will be processed and information from your device (cookies, unique identifiers, and other device data) may be stored by, accessed by and shared with 136 TCF vendor(s) and 66 ad partner(s), or used specifically by this site or app.\n\nSome vendors may process your personal data on the basis of legitimate interest, which you can object to by managing your options below. Look for a link at the bottom of this page or in our privacy policy where you can withdraw consent.\n\nConsent\n\nDo not consent\n\nManage options"
}