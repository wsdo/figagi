{
	"title": "Python3 条件控制 | 菜鸟教程",
	"url": "https://www.runoob.com/python3/python3-conditional-statements.html",
	"html": "菜鸟教程 -- 学的不仅是技术，更是梦想！\n首页 HTML CSS JAVASCRIPT VUE BOOTSTRAP NODEJS PYTHON3 PYTHON2 JAVA C C++ C# GO SQL LINUX JQUERY 本地书签\n Python 3 教程 \nPython3 教程\nPython3 简介\nPython3 环境搭建\nPython3 VScode\nPython3 基础语法\nPython3 基本数据类型\nPython3 数据类型转换\nPython3 解释器\nPython3 注释\nPython3 运算符\nPython3 数字(Number)\nPython3 字符串\nPython3 列表\nPython3 元组\nPython3 字典\nPython3 集合\n Python3 条件控制\nPython3 循环语句\nPython3 编程第一步\nPython3 推导式\nPython3 迭代器与生成器\nPython3 函数\nPython3 lambda\nPython3 数据结构\nPython3 模块\nPython3 输入和输出\nPython3 File\nPython3 OS\nPython3 错误和异常\nPython3 面向对象\nPython3 命名空间/作用域\nPython3 标准库概览\nPython3 实例\nPython 测验\n\n\nPython3 高级教程\nPython3 正则表达式\nPython3 CGI编程\nPython3 MySQL(mysql-connector)\nPython3 MySQL(PyMySQL)\nPython3 网络编程\nPython3 SMTP发送邮件\nPython3 多线程\nPython3 XML 解析\nPython3 JSON\nPython3 日期和时间\nPython3 内置函数\nPython3 MongoDB\nPython3 urllib\nPython uWSGI 安装配置\nPython3 pip\nPython3 operator\nPython math\nPython requests\nPython random\nPython 有用的资源\nPython AI 绘画\nPython statistics\n Python3 集合\nPython3 循环语句 \nPython3 条件控制\n\nPython 条件语句是通过一条或多条语句的执行结果（True 或者 False）来决定执行的代码块。\n\n可以通过下图来简单了解条件语句的执行过程:\n\n代码执行过程：\n\nif 语句\n\nPython中if语句的一般形式如下所示：\n\nif condition_1:\n    statement_block_1\nelif condition_2:\n    statement_block_2\nelse:\n    statement_block_3\n如果 \"condition_1\" 为 True 将执行 \"statement_block_1\" 块语句\n如果 \"condition_1\" 为False，将判断 \"condition_2\"\n如果\"condition_2\" 为 True 将执行 \"statement_block_2\" 块语句\n如果 \"condition_2\" 为False，将执行\"statement_block_3\"块语句\n\nPython 中用 elif 代替了 else if，所以if语句的关键字为：if – elif – else。\n\n注意：\n\n1、每个条件后面要使用冒号 :，表示接下来是满足条件后要执行的语句块。\n2、使用缩进来划分语句块，相同缩进数的语句在一起组成一个语句块。\n3、在 Python 中没有 switch...case 语句，但在 Python3.10 版本添加了 match...case，功能也类似，详见下文。\n\nGif 演示：\n\n实例\n\n以下是一个简单的 if 实例：\n\n实例\n#!/usr/bin/python3\n \nvar1 = 100\nif var1:\n    print (\"1 - if 表达式条件为 true\")\n    print (var1)\n \nvar2 = 0\nif var2:\n    print (\"2 - if 表达式条件为 true\")\n    print (var2)\nprint (\"Good bye!\")\n\n执行以上代码，输出结果为：\n\n1 - if 表达式条件为 true\n100\nGood bye!\n\n从结果可以看到由于变量 var2 为 0，所以对应的 if 内的语句没有执行。\n\n以下实例演示了狗的年龄计算判断：\n\n实例\n#!/usr/bin/python3\n \nage = int(input(\"请输入你家狗狗的年龄: \"))\nprint(\"\")\nif age <= 0:\n    print(\"你是在逗我吧!\")\nelif age == 1:\n    print(\"相当于 14 岁的人。\")\nelif age == 2:\n    print(\"相当于 22 岁的人。\")\nelif age > 2:\n    human = 22 + (age -2)*5\n    print(\"对应人类年龄: \", human)\n \n### 退出提示\ninput(\"点击 enter 键退出\")\n\n将以上脚本保存在dog.py文件中，并执行该脚本：\n\n$ python3 dog.py \n请输入你家狗狗的年龄: 1\n\n相当于 14 岁的人。\n点击 enter 键退出\n\n以下为if中常用的操作运算符:\n\n操作符\t描述\n<\t小于\n<=\t小于或等于\n>\t大于\n>=\t大于或等于\n==\t等于，比较两个值是否相等\n!=\t不等于\n实例\n#!/usr/bin/python3\n \n# 程序演示了 == 操作符\n# 使用数字\nprint(5 == 6)\n# 使用变量\nx = 5\ny = 8\nprint(x == y)\n\n以上实例输出结果：\n\nFalse\nFalse\n\nhigh_low.py文件演示了数字的比较运算：\n\n实例\n#!/usr/bin/python3 \n \n# 该实例演示了数字猜谜游戏\nnumber = 7\nguess = -1\nprint(\"数字猜谜游戏!\")\nwhile guess != number:\n    guess = int(input(\"请输入你猜的数字：\"))\n \n    if guess == number:\n        print(\"恭喜，你猜对了！\")\n    elif guess < number:\n        print(\"猜的数字小了...\")\n    elif guess > number:\n        print(\"猜的数字大了...\")\n\n执行以上脚本，实例输出结果如下：\n\n$ python3 high_low.py \n数字猜谜游戏!\n请输入你猜的数字：1\n猜的数字小了...\n请输入你猜的数字：9\n猜的数字大了...\n请输入你猜的数字：7\n恭喜，你猜对了！\nif 嵌套\n\n在嵌套 if 语句中，可以把 if...elif...else 结构放在另外一个 if...elif...else 结构中。\n\nif 表达式1:\n    语句\n    if 表达式2:\n        语句\n    elif 表达式3:\n        语句\n    else:\n        语句\nelif 表达式4:\n    语句\nelse:\n    语句\n实例\n# !/usr/bin/python3\n \nnum=int(input(\"输入一个数字：\"))\nif num%2==0:\n    if num%3==0:\n        print (\"你输入的数字可以整除 2 和 3\")\n    else:\n        print (\"你输入的数字可以整除 2，但不能整除 3\")\nelse:\n    if num%3==0:\n        print (\"你输入的数字可以整除 3，但不能整除 2\")\n    else:\n        print  (\"你输入的数字不能整除 2 和 3\")\n\n将以上程序保存到 test_if.py 文件中，执行后输出结果为：\n\n$ python3 test.py \n输入一个数字：6\n你输入的数字可以整除 2 和 3\nmatch...case\n\nPython 3.10 增加了 match...case 的条件判断，不需要再使用一连串的 if-else 来判断了。\n\nmatch 后的对象会依次与 case 后的内容进行匹配，如果匹配成功，则执行匹配到的表达式，否则直接跳过，_ 可以匹配一切。\n\n语法格式如下：\n\nmatch subject:\n    case <pattern_1>:\n        <action_1>\n    case <pattern_2>:\n        <action_2>\n    case <pattern_3>:\n        <action_3>\n    case _:\n        <action_wildcard>\n\ncase _: 类似于 C 和 Java 中的 default:，当其他 case 都无法匹配时，匹配这条，保证永远会匹配成功。\n\n实例\n\ndef http_error(status):\n    match status:\n        case 400:\n            return \"Bad request\"\n        case 404:\n            return \"Not found\"\n        case 418:\n            return \"I'm a teapot\"\n        case _:\n            return \"Something's wrong with the internet\"\n\nmystatus=400\nprint(http_error(400))\n\n\n以上是一个输出 HTTP 状态码的实例，输出结果为：\n\nBad request\n\n一个 case 也可以设置多个匹配条件，条件使用 ｜ 隔开，例如：\n\n...\n    case 401|403|404:\n        return \"Not allowed\"\n Python3 集合\nPython3 循环语句 \n14 篇笔记\n 写笔记\n 分类导航\nHTML / CSS\nJavaScript\n服务端\n数据库\n数据分析\n移动端\nXML 教程\nASP.NET\nWeb Service\n开发工具\n网站建设\n\n\nAdvertisement\n反馈/建议\n反馈/建议\n在线实例\n·HTML 实例\n·CSS 实例\n·JavaScript 实例\n·Ajax 实例\n·jQuery 实例\n·XML 实例\n·Java 实例\n字符集&工具\n· HTML 字符集设置\n· HTML ASCII 字符集\n· JS 混淆/加密\n· PNG/JPEG 图片压缩\n· HTML 拾色器\n· JSON 格式化工具\n· 随机数生成器\n最新更新\n· 正则表达式入门教程\n· Python lambda（...\n· Java 注释\n· Bootstrap5 消息...\n· Python 按字母顺...\n· Python 删除字符...\n· git restore 命令\n站点信息\n· 意见反馈\n· 免责声明\n· 关于我们\n· 文章归档\n关注微信\nCopyright © 2013-2023 菜鸟教程  runoob.com All Rights Reserved. 备案号：闽ICP备15012807号-1\n  \nRUNOOB asks for your consent to use your personal data to:\nperm_identity\nPersonalised advertising and content, advertising and content measurement, audience research and services development\ndevices\nStore and/or access information on a device\nexpand_more\nLearn more\n\nYour personal data will be processed and information from your device (cookies, unique identifiers, and other device data) may be stored by, accessed by and shared with 136 TCF vendor(s) and 66 ad partner(s), or used specifically by this site or app.\n\nSome vendors may process your personal data on the basis of legitimate interest, which you can object to by managing your options below. Look for a link at the bottom of this page or in our privacy policy where you can withdraw consent.\n\nConsent\n\nDo not consent\n\nManage options"
}